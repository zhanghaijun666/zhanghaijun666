const n=JSON.parse('{"key":"v-181936f6","path":"/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/06.CentOS/17.%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE.html","title":"网络配置","lang":"zh-CN","frontmatter":{"title":"网络配置","date":"2024-02-04T00:00:00.000Z","category":["编程技巧","CentOS"],"tag":["CentOS"],"description":"桥接网络 ## 创建桥接连接 nmcli connection add type bridge ifname br0 con-name br0 ## 添加网络接口到桥接连接 nmcli connection add type bridge-slave ifname enp1s0 master br0 nmcli connection add type bridge-slave ifname enp2s0 master br0 nmcli connection add type bridge-slave ifname enp3s0 master br0 nmcli connection add type bridge-slave ifname enp4s0 master br0 nmcli connection add type bridge-slave ifname enp5s0 master br0 nmcli connection add type bridge-slave ifname enp6s0 master br0 nmcli connection add type bridge-slave ifname enp7s0 master br0 nmcli connection add type bridge-slave ifname enp8s0 master br0 ## 配置桥接连接的IPv4地址 # nmcli connection modify br0 ipv4.method manual ipv4.address 192.168.60.100/24 # nmcli connection modify br0 ipv4.addresses \\"192.168.100.26/24\\" # nmcli connection modify br0 ipv4.gateway 192.168.100.2 # nmcli connection modify br0 ipv4.dns 8.8.8.8 ## 设置IP地址:192.168.13.166 nmcli connection modify br0 ipv4.method manual ipv4.address 192.168.13.166/24 ipv4.gateway 192.168.13.1 ## 添加IP地址：192.168.3.166 nmcli con mod br0 +ipv4.addresses \\"192.168.3.166/24\\" # 重新加载连接 nmcli connection reload # 启用桥接连接 nmcli connection up br0 systemctl restart network ## 删除桥接 nmcli connection delete br0 `` ```bash ## 安装bridge-utils apt-get install bridge-utils yum instakk -y bridge-utils ## 创建桥接设备： 使用brctl命令创建一个桥接设备。假设你要创建一个名为br0的桥接设备，可以使用以下命令： brctl addbr br0 ## 将网络接口添加到桥接设备： 将要桥接的网络接口（网卡）添加到新创建的桥接设备中。例如，假设你有两个网卡eth0和eth1，可以使用以下命令： brctl addif br0 eth0 brctl addif br0 eth1 ## 激活桥接设备： 使用以下命令激活桥接设备： ifconfig br0 up ## 配置IP地址： 为桥接设备分配一个IP地址。例如： ifconfig br0 192.168.16.100 netmask 255.255.255.0 ## 禁用原始网络接口： 如果你希望通过桥接设备来处理网络流量，可以禁用原始网络接口。例如： ifconfig eth0 down ifconfig eth1 down ## 或者使用ip link set命令： ip link set dev eth0 down ip link set dev eth1 down","head":[["meta",{"property":"og:url","content":"https://haijunit.top/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/06.CentOS/17.%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE.html"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"网络配置"}],["meta",{"property":"og:description","content":"桥接网络 ## 创建桥接连接 nmcli connection add type bridge ifname br0 con-name br0 ## 添加网络接口到桥接连接 nmcli connection add type bridge-slave ifname enp1s0 master br0 nmcli connection add type bridge-slave ifname enp2s0 master br0 nmcli connection add type bridge-slave ifname enp3s0 master br0 nmcli connection add type bridge-slave ifname enp4s0 master br0 nmcli connection add type bridge-slave ifname enp5s0 master br0 nmcli connection add type bridge-slave ifname enp6s0 master br0 nmcli connection add type bridge-slave ifname enp7s0 master br0 nmcli connection add type bridge-slave ifname enp8s0 master br0 ## 配置桥接连接的IPv4地址 # nmcli connection modify br0 ipv4.method manual ipv4.address 192.168.60.100/24 # nmcli connection modify br0 ipv4.addresses \\"192.168.100.26/24\\" # nmcli connection modify br0 ipv4.gateway 192.168.100.2 # nmcli connection modify br0 ipv4.dns 8.8.8.8 ## 设置IP地址:192.168.13.166 nmcli connection modify br0 ipv4.method manual ipv4.address 192.168.13.166/24 ipv4.gateway 192.168.13.1 ## 添加IP地址：192.168.3.166 nmcli con mod br0 +ipv4.addresses \\"192.168.3.166/24\\" # 重新加载连接 nmcli connection reload # 启用桥接连接 nmcli connection up br0 systemctl restart network ## 删除桥接 nmcli connection delete br0 `` ```bash ## 安装bridge-utils apt-get install bridge-utils yum instakk -y bridge-utils ## 创建桥接设备： 使用brctl命令创建一个桥接设备。假设你要创建一个名为br0的桥接设备，可以使用以下命令： brctl addbr br0 ## 将网络接口添加到桥接设备： 将要桥接的网络接口（网卡）添加到新创建的桥接设备中。例如，假设你有两个网卡eth0和eth1，可以使用以下命令： brctl addif br0 eth0 brctl addif br0 eth1 ## 激活桥接设备： 使用以下命令激活桥接设备： ifconfig br0 up ## 配置IP地址： 为桥接设备分配一个IP地址。例如： ifconfig br0 192.168.16.100 netmask 255.255.255.0 ## 禁用原始网络接口： 如果你希望通过桥接设备来处理网络流量，可以禁用原始网络接口。例如： ifconfig eth0 down ifconfig eth1 down ## 或者使用ip link set命令： ip link set dev eth0 down ip link set dev eth1 down"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-04T08:48:06.000Z"}],["meta",{"property":"article:author","content":"知识库"}],["meta",{"property":"article:tag","content":"CentOS"}],["meta",{"property":"article:published_time","content":"2024-02-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-04T08:48:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"网络配置\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-02-04T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-04T08:48:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"知识库\\",\\"url\\":\\"https://haijunit.top\\",\\"email\\":\\"zhanghaijun_java@163.com\\"}]}"]]},"headers":[{"level":2,"title":"桥接网络","slug":"桥接网络","link":"#桥接网络","children":[]},{"level":2,"title":"ebtables","slug":"ebtables","link":"#ebtables","children":[{"level":3,"title":"应用","slug":"应用","link":"#应用","children":[]},{"level":3,"title":"脚本更新白名单","slug":"脚本更新白名单","link":"#脚本更新白名单","children":[]},{"level":3,"title":"脚本更新白名单（已验证）","slug":"脚本更新白名单-已验证","link":"#脚本更新白名单-已验证","children":[]}]}],"git":{"createdTime":1707036458000,"updatedTime":1707036486000,"contributors":[{"name":"zhanghaijun","email":"zhanghaijun@bjtxra.com","commits":2}]},"readingTime":{"minutes":4.97,"words":1490},"filePathRelative":"30.编程技巧/06.CentOS/17.网络配置.md","localizedDate":"2024年2月4日","excerpt":"<h2> 桥接网络</h2>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token comment\\">## 创建桥接连接</span>\\nnmcli connection <span class=\\"token function\\">add</span> <span class=\\"token builtin class-name\\">type</span> bridge ifname br0 con-name br0\\n \\n<span class=\\"token comment\\">## 添加网络接口到桥接连接</span>\\nnmcli connection <span class=\\"token function\\">add</span> <span class=\\"token builtin class-name\\">type</span> bridge-slave ifname enp1s0 master br0\\nnmcli connection <span class=\\"token function\\">add</span> <span class=\\"token builtin class-name\\">type</span> bridge-slave ifname enp2s0 master br0\\nnmcli connection <span class=\\"token function\\">add</span> <span class=\\"token builtin class-name\\">type</span> bridge-slave ifname enp3s0 master br0\\nnmcli connection <span class=\\"token function\\">add</span> <span class=\\"token builtin class-name\\">type</span> bridge-slave ifname enp4s0 master br0\\nnmcli connection <span class=\\"token function\\">add</span> <span class=\\"token builtin class-name\\">type</span> bridge-slave ifname enp5s0 master br0\\nnmcli connection <span class=\\"token function\\">add</span> <span class=\\"token builtin class-name\\">type</span> bridge-slave ifname enp6s0 master br0\\nnmcli connection <span class=\\"token function\\">add</span> <span class=\\"token builtin class-name\\">type</span> bridge-slave ifname enp7s0 master br0\\nnmcli connection <span class=\\"token function\\">add</span> <span class=\\"token builtin class-name\\">type</span> bridge-slave ifname enp8s0 master br0\\n \\n \\n<span class=\\"token comment\\">## 配置桥接连接的IPv4地址</span>\\n<span class=\\"token comment\\"># nmcli connection modify br0 ipv4.method manual ipv4.address 192.168.60.100/24</span>\\n<span class=\\"token comment\\"># nmcli connection modify br0 ipv4.addresses \\"192.168.100.26/24\\"</span>\\n<span class=\\"token comment\\"># nmcli connection modify br0 ipv4.gateway 192.168.100.2</span>\\n<span class=\\"token comment\\"># nmcli connection modify br0 ipv4.dns 8.8.8.8</span>\\n \\n<span class=\\"token comment\\">## 设置IP地址:192.168.13.166</span>\\nnmcli connection modify br0 ipv4.method manual ipv4.address <span class=\\"token number\\">192.168</span>.13.166/24 ipv4.gateway <span class=\\"token number\\">192.168</span>.13.1\\n<span class=\\"token comment\\">## 添加IP地址：192.168.3.166</span>\\nnmcli con mod br0 +ipv4.addresses <span class=\\"token string\\">\\"192.168.3.166/24\\"</span>\\n \\n<span class=\\"token comment\\"># 重新加载连接</span>\\nnmcli connection reload\\n \\n<span class=\\"token comment\\"># 启用桥接连接</span>\\nnmcli connection up br0\\nsystemctl restart network\\n \\n<span class=\\"token comment\\">## 删除桥接</span>\\nnmcli connection delete br0\\n`<span class=\\"token variable\\"><span class=\\"token variable\\">`</span>\\n\\n<span class=\\"token variable\\">`</span></span>``bash\\n<span class=\\"token comment\\">## 安装bridge-utils</span>\\n<span class=\\"token function\\">apt-get</span> <span class=\\"token function\\">install</span> bridge-utils\\nyum instakk <span class=\\"token parameter variable\\">-y</span> bridge-utils\\n \\n<span class=\\"token comment\\">## 创建桥接设备： 使用brctl命令创建一个桥接设备。假设你要创建一个名为br0的桥接设备，可以使用以下命令：</span>\\nbrctl addbr br0\\n \\n<span class=\\"token comment\\">## 将网络接口添加到桥接设备： 将要桥接的网络接口（网卡）添加到新创建的桥接设备中。例如，假设你有两个网卡eth0和eth1，可以使用以下命令：</span>\\nbrctl addif br0 eth0\\nbrctl addif br0 eth1\\n \\n<span class=\\"token comment\\">## 激活桥接设备： 使用以下命令激活桥接设备：</span>\\n<span class=\\"token function\\">ifconfig</span> br0 up\\n \\n<span class=\\"token comment\\">## 配置IP地址： 为桥接设备分配一个IP地址。例如：</span>\\n<span class=\\"token function\\">ifconfig</span> br0 <span class=\\"token number\\">192.168</span>.16.100 netmask <span class=\\"token number\\">255.255</span>.255.0\\n \\n<span class=\\"token comment\\">## 禁用原始网络接口： 如果你希望通过桥接设备来处理网络流量，可以禁用原始网络接口。例如：</span>\\n<span class=\\"token function\\">ifconfig</span> eth0 down\\n<span class=\\"token function\\">ifconfig</span> eth1 down\\n<span class=\\"token comment\\">## 或者使用ip link set命令：</span>\\n<span class=\\"token function\\">ip</span> <span class=\\"token function\\">link</span> <span class=\\"token builtin class-name\\">set</span> dev eth0 down\\n<span class=\\"token function\\">ip</span> <span class=\\"token function\\">link</span> <span class=\\"token builtin class-name\\">set</span> dev eth1 down\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
