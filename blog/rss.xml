<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="https://haijunit.top/blog/rss.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://haijunit.top/blog/rss.xml" rel="self" type="application/rss+xml"/>
    <title>学习笔记</title>
    <link>https://haijunit.top/blog/</link>
    <description>积累点滴，汇聚成溪。</description>
    <language>zh-CN</language>
    <pubDate>Thu, 18 Jul 2024 09:18:13 GMT</pubDate>
    <lastBuildDate>Thu, 18 Jul 2024 09:18:13 GMT</lastBuildDate>
    <generator>vuepress-plugin-feed2</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <category>运维技巧</category>
    <category>服务管理</category>
    <category>编程技巧</category>
    <category>CentOS</category>
    <category>Java</category>
    <category>运维工具</category>
    <category>技术积累</category>
    <category>集群搭建</category>
    <category>系统镜像</category>
    <category>Shell脚本</category>
    <category>天信瑞安</category>
    <category>云盘服务</category>
    <category>项目管理</category>
    <category>代码规范</category>
    <category>CSSS</category>
    <category>随笔记录</category>
    <category>家庭组网</category>
    <category>VUE应用</category>
    <category>Windows</category>
    <category>实战项目</category>
    <category>文件存储</category>
    <category>容器技术</category>
    <category>kubernetes建设</category>
    <category>Docker</category>
    <category>kubernetes实战</category>
    <category>证书认证</category>
    <category>生活</category>
    <category>结构与算法</category>
    <category>数据结构</category>
    <category>集成配置</category>
    <category>集成构建</category>
    <category>设计模式</category>
    <category>MyBatis</category>
    <category>SpringBoot</category>
    <category>缓存Reids</category>
    <category>中间件MQ</category>
    <category>Nginx</category>
    <category>Elasticsearch</category>
    <category>文件系统</category>
    <item>
      <title>Prometheus+Grafana可视化监控</title>
      <link>https://haijunit.top/blog/80.%E8%BF%90%E7%BB%B4%E6%8A%80%E5%B7%A7/30.%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86/31.Prometheus_Grafana%E5%8F%AF%E8%A7%86%E5%8C%96%E7%9B%91%E6%8E%A7.html</link>
      <guid>https://haijunit.top/blog/80.%E8%BF%90%E7%BB%B4%E6%8A%80%E5%B7%A7/30.%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86/31.Prometheus_Grafana%E5%8F%AF%E8%A7%86%E5%8C%96%E7%9B%91%E6%8E%A7.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">Prometheus+Grafana可视化监控</source>
      <description>主机准备 ## 时间同步 imedatectl set-timezone Asia/Shanghai yum -y install ntpdate /usr/sbin/ntpdate -u ntp1.aliyun.com echo &amp;quot;0 5 * * * /usr/sbin/ntpdate -u ntp1.aliyun.com &amp;gt;/dev/null &amp;amp;&amp;quot; &amp;gt;&amp;gt; /var/spool/cron/root crontab -l</description>
      <category>运维技巧</category>
      <category>服务管理</category>
      <pubDate>Tue, 06 Feb 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<h2> 主机准备</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> Prometheus</h2>
<ul>
<li>下载地址：<a href="https://github.com/prometheus/prometheus/releases" target="_blank" rel="noopener noreferrer">https://github.com/prometheus/prometheus/releases</a></li>
<li>官网下载地址：<a href="https://prometheus.io/download/" target="_blank" rel="noopener noreferrer">https://prometheus.io/download/</a></li>
</ul>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> Grafana</h2>
<blockquote>
<p>Grafana 是一个开源的度量分析及可视化套件。通过访问数据库（如InfluxDB、Prometheus），展示自定义图表。</p>
</blockquote>
<ul>
<li>官网地址：<a href="https://grafana.com/zh-cn/grafana/" target="_blank" rel="noopener noreferrer">https://grafana.com/zh-cn/grafana/</a></li>
<li>下载地址：<a href="https://grafana.com/grafana/download" target="_blank" rel="noopener noreferrer">https://grafana.com/grafana/download</a></li>
<li>国内下载地址：<a href="https://mirrors.huaweicloud.com/grafana/" target="_blank" rel="noopener noreferrer">https://mirrors.huaweicloud.com/grafana/</a></li>
<li>看板模板地址：<a href="https://grafana.com/grafana/dashboards/" target="_blank" rel="noopener noreferrer">https://grafana.com/grafana/dashboards/</a></li>
</ul>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> Exporter</h2>
<blockquote>
<p>Exporter 是 Prometheus 推出的针对服务器状态监控的 Metrics 工具。目前开发中常见的组件都有对应的 exporter 可以直接使用。常见的有两大类，一种是社区提供的，包含数据库，消息队列，存储，HTTP服务，日志等，比如 node_exporter，mysqld_exporter等；还有一种是用户自定义的 exporter，可以基于官方提供的 Client Library 创建自己的 exporter 程序。<br>
每个 exporter 的一个实例被称为 target，Prometheus 通过轮询的方式定期从这些 target 中获取样本数据。</p>
</blockquote>
<h2> 监控MySQL</h2>
<ul>
<li>下载地址：<a href="https://github.com/prometheus/mysqld_exporter/releases" target="_blank" rel="noopener noreferrer">https://github.com/prometheus/mysqld_exporter/releases</a></li>
</ul>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 配置Prometheus监控</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>网络配置</title>
      <link>https://haijunit.top/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/06.CentOS/17.%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE.html</link>
      <guid>https://haijunit.top/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/06.CentOS/17.%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">网络配置</source>
      <description>桥接网络 ## 创建桥接连接 nmcli connection add type bridge ifname br0 con-name br0 ## 添加网络接口到桥接连接 nmcli connection add type bridge-slave ifname enp1s0 master br0 nmcli connection add type bridge-slave ifname enp2s0 master br0 nmcli connection add type bridge-slave ifname enp3s0 master br0 nmcli connection add type bridge-slave ifname enp4s0 master br0 nmcli connection add type bridge-slave ifname enp5s0 master br0 nmcli connection add type bridge-slave ifname enp6s0 master br0 nmcli connection add type bridge-slave ifname enp7s0 master br0 nmcli connection add type bridge-slave ifname enp8s0 master br0 ## 配置桥接连接的IPv4地址 # nmcli connection modify br0 ipv4.method manual ipv4.address 192.168.60.100/24 # nmcli connection modify br0 ipv4.addresses &amp;quot;192.168.100.26/24&amp;quot; # nmcli connection modify br0 ipv4.gateway 192.168.100.2 # nmcli connection modify br0 ipv4.dns 8.8.8.8 ## 设置IP地址:192.168.13.166 nmcli connection modify br0 ipv4.method manual ipv4.address 192.168.13.166/24 ipv4.gateway 192.168.13.1 ## 添加IP地址：192.168.3.166 nmcli con mod br0 +ipv4.addresses &amp;quot;192.168.3.166/24&amp;quot; # 重新加载连接 nmcli connection reload # 启用桥接连接 nmcli connection up br0 systemctl restart network ## 删除桥接 nmcli connection delete br0 `` ```bash ## 安装bridge-utils apt-get install bridge-utils yum instakk -y bridge-utils ## 创建桥接设备： 使用brctl命令创建一个桥接设备。假设你要创建一个名为br0的桥接设备，可以使用以下命令： brctl addbr br0 ## 将网络接口添加到桥接设备： 将要桥接的网络接口（网卡）添加到新创建的桥接设备中。例如，假设你有两个网卡eth0和eth1，可以使用以下命令： brctl addif br0 eth0 brctl addif br0 eth1 ## 激活桥接设备： 使用以下命令激活桥接设备： ifconfig br0 up ## 配置IP地址： 为桥接设备分配一个IP地址。例如： ifconfig br0 192.168.16.100 netmask 255.255.255.0 ## 禁用原始网络接口： 如果你希望通过桥接设备来处理网络流量，可以禁用原始网络接口。例如： ifconfig eth0 down ifconfig eth1 down ## 或者使用ip link set命令： ip link set dev eth0 down ip link set dev eth1 down</description>
      <category>编程技巧</category>
      <category>CentOS</category>
      <pubDate>Sun, 04 Feb 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 桥接网络</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> ebtables</h2>
<blockquote>
<p>ebtables（Ethernet Bridge Tables）是用于Linux系统上的一个桥接表管理工具，它主要用于管理Linux内核中的以太网桥接设备的过滤规则。</p>
</blockquote>
<ul>
<li>以太网桥接设备管理： ebtables主要用于管理Linux内核中的以太网桥接设备。桥接设备允许将多个网络接口连接在一起，形成一个共享同一网络的逻辑链路。</li>
<li>流量过滤： ebtables允许用户定义规则，以控制通过桥接设备的数据流量。这包括允许或拒绝特定的MAC地址、以太网协议类型（如IPv4或IPv6）、以及其他与以太网帧相关的信息。</li>
<li>MAC地址过滤： 用户可以使用ebtables指定允许或拒绝通过桥接设备的特定MAC地址的流量。这有助于实现网络访问控制。</li>
<li>协议过滤： 除了MAC地址过滤外，ebtables还允许用户基于以太网帧的协议类型过滤流量。这意味着可以根据帧中的协议信息来控制流量的通过与阻塞。</li>
<li>连接跟踪： ebtables支持连接跟踪功能，可以用于追踪与桥接设备相关的连接信息。</li>
<li>虚拟局域网（VLAN）支持： ebtables可以与VLAN一起使用，帮助管理VLAN标记的流量。</li>
</ul>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 应用</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 脚本更新白名单</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 脚本更新白名单（已验证）</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>插入式注解</title>
      <link>https://haijunit.top/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/20.Java/31.%E6%8F%92%E5%85%A5%E5%BC%8F%E6%B3%A8%E8%A7%A3.html</link>
      <guid>https://haijunit.top/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/20.Java/31.%E6%8F%92%E5%85%A5%E5%BC%8F%E6%B3%A8%E8%A7%A3.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">插入式注解</source>
      <description>需求 背景 公司提供了一套通用的JAVA基础组件包，希望可以通过promethus来监控现在公司内使用各版本代码库的比例，以及各版本代码库的使用情况。 这有利于我们做版本兼容，必要的时候可以对古早版本使用者溯源。 问题 需求似乎很简单，但真要获取自身的jar版本号还是挺麻烦的，有个比较简单但阴间的办法，就是给每一个组件都加上当前的jar版本号，写到配置文件里或者直接设置成常量，这样上报promethus时就可以直接获取到jar包版本号了，这个方法虽然可以解决问题，但每次迭代版本都要跟着改一遍所有组件包的版本号数据，过于麻烦。 有没有更好的解决办法呢？比如我们可不可以在gradle打包构建时拿到jar包的版本号，然后注入到每个组件中去呢？就像lombok那样，不需要写get、set方法，只需要加个注解标记就可以自动注入get、set方法。</description>
      <category>编程技巧</category>
      <category>Java</category>
      <pubDate>Sun, 04 Feb 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 需求</h2>
<h3> 背景</h3>
<blockquote>
<p>公司提供了一套通用的JAVA基础组件包，希望可以通过promethus来监控现在公司内使用各版本代码库的比例，以及各版本代码库的使用情况。<br>
这有利于我们做版本兼容，必要的时候可以对古早版本使用者溯源。</p>
</blockquote>
<h3> 问题</h3>
<blockquote>
<p>需求似乎很简单，但真要获取自身的jar版本号还是挺麻烦的，有个比较简单但阴间的办法，就是给每一个组件都加上当前的jar版本号，写到配置文件里或者直接设置成常量，这样上报promethus时就可以直接获取到jar包版本号了，这个方法虽然可以解决问题，但每次迭代版本都要跟着改一遍所有组件包的版本号数据，过于麻烦。</p>
<p>有没有更好的解决办法呢？比如我们可不可以在gradle打包构建时拿到jar包的版本号，然后注入到每个组件中去呢？就像lombok那样，不需要写get、set方法，只需要加个注解标记就可以自动注入get、set方法。</p>
</blockquote>
<h2> 解决方案</h2>
<blockquote>
<p>定义插入式注解处理器（通过JSR-269提案定义的Pluggable Annotation Processing API实现）</p>
<p>编译过程：源码-词法分析器-token流-语法分析器-抽象语法树-语义分析器-解语法糖-字节码生成器-jvm字节码</p>
</blockquote>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>定义好的处理器需要SPI机制被发现，所以需要定义META.services：</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>防范暴力破解攻击</title>
      <link>https://haijunit.top/blog/80.%E8%BF%90%E7%BB%B4%E6%8A%80%E5%B7%A7/10.%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7/16.%E9%98%B2%E8%8C%83%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%E6%94%BB%E5%87%BB.html</link>
      <guid>https://haijunit.top/blog/80.%E8%BF%90%E7%BB%B4%E6%8A%80%E5%B7%A7/10.%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7/16.%E9%98%B2%E8%8C%83%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%E6%94%BB%E5%87%BB.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">防范暴力破解攻击</source>
      <description>Fail2Ban Fail2Ban（Fail to Ban）是一种用于防范暴力破解攻击的开源软件。它的主要目标是通过监视系统日志文件，检测恶意行为（如多次登录失败、恶意IP地址等），并采取自动化的措施来阻止攻击者进一步访问系统。 以下是Fail2Ban的一些关键特性和工作原理： 监视日志文件： Fail2Ban通过分析系统的日志文件，特别是包含安全相关信息的文件，来检测潜在的入侵尝试。 定义规则： 用户可以定义自定义规则，告诉Fail2Ban在日志中搜索什么样的模式，并根据这些模式采取相应的行动。 动态封禁： 一旦Fail2Ban检测到恶意行为，它将采取措施来阻止攻击者的进一步访问。这通常涉及到在防火墙规则中添加临时的封锁规则。 可定制性： 用户可以根据自己的需求配置Fail2Ban，包括设置封锁的时间、阈值等参数。 支持多种服务： Fail2Ban不仅限于防范SSH攻击，还支持监视和防范多种服务的暴力破解攻击，如FTP、HTTP、SMTP等。</description>
      <category>运维技巧</category>
      <category>运维工具</category>
      <pubDate>Fri, 02 Feb 2024 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> Fail2Ban</h2>
<blockquote>
<p>Fail2Ban（Fail to Ban）是一种用于防范暴力破解攻击的开源软件。它的主要目标是通过监视系统日志文件，检测恶意行为（如多次登录失败、恶意IP地址等），并采取自动化的措施来阻止攻击者进一步访问系统。</p>
</blockquote>
<p>以下是Fail2Ban的一些关键特性和工作原理：</p>
<ul>
<li>监视日志文件： Fail2Ban通过分析系统的日志文件，特别是包含安全相关信息的文件，来检测潜在的入侵尝试。</li>
<li>定义规则： 用户可以定义自定义规则，告诉Fail2Ban在日志中搜索什么样的模式，并根据这些模式采取相应的行动。</li>
<li>动态封禁： 一旦Fail2Ban检测到恶意行为，它将采取措施来阻止攻击者的进一步访问。这通常涉及到在防火墙规则中添加临时的封锁规则。</li>
<li>可定制性： 用户可以根据自己的需求配置Fail2Ban，包括设置封锁的时间、阈值等参数。</li>
<li>支持多种服务： Fail2Ban不仅限于防范SSH攻击，还支持监视和防范多种服务的暴力破解攻击，如FTP、HTTP、SMTP等。</li>
</ul>
<blockquote>
<p>在配置Fail2Ban时，用户通常需要编辑配置文件，指定监视的日志文件、定义规则以及配置封锁行为。这有助于提高系统的安全性，减少潜在的入侵风险。</p>
</blockquote>
<h3> 应用使用</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 日常运维</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>集群管理-Pacemaker</title>
      <link>https://haijunit.top/blog/65.%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/20.%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/10.%E9%9B%86%E7%BE%A4%E7%AE%A1%E7%90%86-Pacemaker.html</link>
      <guid>https://haijunit.top/blog/65.%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/20.%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/10.%E9%9B%86%E7%BE%A4%E7%AE%A1%E7%90%86-Pacemaker.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">集群管理-Pacemaker</source>
      <description>Pacemaker介绍 Pacemaker 是一个开源的高可用性软件，用于在集群环境中管理和监控服务的可用性。旨在提供一套框架和工具，使用户能够在分布式系统中构建高可用性的服务。 主要用于构建高可用性的集群服务，确保在节点或服务出现故障时能够保持系统的稳定性和可用性。它被广泛应用于企业环境中的关键业务应用和服务，如数据库、Web 服务器、应用服务器等。 主要特点和功能 集群管理： Pacemaker 允许将多个节点组成一个集群，这些节点可以共同工作以提供服务的高可用性。集群中的节点通过网络通信协同工作。 资源管理： Pacemaker 可以管理和监控集群中的各种资源，如 IP 地址、虚拟 IP 地址、文件系统、数据库等。它能够启动、停止和迁移这些资源，以确保它们在整个集群中保持可用状态。 故障检测和自动恢复： Pacemaker 提供了故障检测机制，能够检测节点和资源的故障。一旦发现故障，它可以自动采取措施来恢复服务，例如迁移资源到其他健康的节点。 灵活的资源策略： Pacemaker 允许用户定义资源的启动顺序、亲和性规则和放置约束，以确保服务在特定节点上以期望的方式运行。 强大的插件架构： Pacemaker 的插件架构允许用户集成不同类型的资源代理，以支持各种服务和应用程序。它支持多种资源代理，如 OCF（Open Cluster Framework）资源代理、Systemd 服务资源代理等。 Web 界面和命令行工具： Pacemaker 提供了直观的 Web 界面（Pacemaker GUI）和强大的命令行工具，用于配置、监控和管理集群。 可扩展性和兼容性： Pacemaker 是一个可扩展和高度模块化的系统，可以适应不同规模和类型的集群。它与各种存储系统、网络配置和硬件兼容，并支持多种操作系统。</description>
      <category>技术积累</category>
      <category>集群搭建</category>
      <pubDate>Wed, 13 Dec 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> Pacemaker介绍</h2>
<blockquote>
<p>Pacemaker 是一个开源的高可用性软件，用于在集群环境中管理和监控服务的可用性。旨在提供一套框架和工具，使用户能够在分布式系统中构建高可用性的服务。</p>
<p>主要用于构建高可用性的集群服务，确保在节点或服务出现故障时能够保持系统的稳定性和可用性。它被广泛应用于企业环境中的关键业务应用和服务，如数据库、Web 服务器、应用服务器等。</p>
</blockquote>
<h3> 主要特点和功能</h3>
<ol>
<li>
<p>集群管理： Pacemaker 允许将多个节点组成一个集群，这些节点可以共同工作以提供服务的高可用性。集群中的节点通过网络通信协同工作。</p>
</li>
<li>
<p>资源管理： Pacemaker 可以管理和监控集群中的各种资源，如 IP 地址、虚拟 IP 地址、文件系统、数据库等。它能够启动、停止和迁移这些资源，以确保它们在整个集群中保持可用状态。</p>
</li>
<li>
<p>故障检测和自动恢复： Pacemaker 提供了故障检测机制，能够检测节点和资源的故障。一旦发现故障，它可以自动采取措施来恢复服务，例如迁移资源到其他健康的节点。</p>
</li>
<li>
<p>灵活的资源策略： Pacemaker 允许用户定义资源的启动顺序、亲和性规则和放置约束，以确保服务在特定节点上以期望的方式运行。</p>
</li>
<li>
<p>强大的插件架构： Pacemaker 的插件架构允许用户集成不同类型的资源代理，以支持各种服务和应用程序。它支持多种资源代理，如 OCF（Open Cluster Framework）资源代理、Systemd 服务资源代理等。</p>
</li>
<li>
<p>Web 界面和命令行工具： Pacemaker 提供了直观的 Web 界面（Pacemaker GUI）和强大的命令行工具，用于配置、监控和管理集群。</p>
</li>
<li>
<p>可扩展性和兼容性： Pacemaker 是一个可扩展和高度模块化的系统，可以适应不同规模和类型的集群。它与各种存储系统、网络配置和硬件兼容，并支持多种操作系统。</p>
</li>
</ol>
<h2> 命令介绍</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 创建集群和节点</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 可管理的资源</h3>
<ul>
<li>IP 地址资源</li>
</ul>
<blockquote>
<p>允许管理虚拟 IP 地址，确保在故障切换时 IP 地址能够在不同节点之间迁移。</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul>
<li>文件系统资源 (ocf💓Filesystem)</li>
</ul>
<blockquote>
<p>允许管理文件系统，确保在节点切换时挂载和卸载文件系统。</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul>
<li>服务资源 (systemd)</li>
</ul>
<blockquote>
<p>允许管理 Systemd 服务，确保在节点切换时启动和停止服务。</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul>
<li>数据库资源 (ocf💓pgsql)</li>
</ul>
<blockquote>
<p>允许管理 PostgreSQL 数据库实例，确保在节点切换时启动和停止数据库服务。</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>虚拟机资源 (ocf💓VirtualDomain)：</li>
</ul>
<blockquote>
<p>允许管理虚拟机，确保在节点切换时启动和停止虚拟机。</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 运维命令</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Ubuntu定制</title>
      <link>https://haijunit.top/blog/65.%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/10.%E7%B3%BB%E7%BB%9F%E9%95%9C%E5%83%8F/10.Ubuntu%E5%AE%9A%E5%88%B6.html</link>
      <guid>https://haijunit.top/blog/65.%E6%8A%80%E6%9C%AF%E7%A7%AF%E7%B4%AF/10.%E7%B3%BB%E7%BB%9F%E9%95%9C%E5%83%8F/10.Ubuntu%E5%AE%9A%E5%88%B6.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">Ubuntu定制</source>
      <description>相关地址 从零制作 Ubuntu LiveCD https://help.ubuntu.com/community/LiveCDCustomizationFromScratch</description>
      <category>技术积累</category>
      <category>系统镜像</category>
      <pubDate>Wed, 13 Dec 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 相关地址</h2>
<ul>
<li><a href="https://dragonfly.fun/devops/livecd.html" target="_blank" rel="noopener noreferrer">从零制作 Ubuntu LiveCD</a></li>
<li><a href="https://help.ubuntu.com/community/LiveCDCustomizationFromScratch" target="_blank" rel="noopener noreferrer">https://help.ubuntu.com/community/LiveCDCustomizationFromScratch</a></li>
</ul>
<h2> 镜像制作</h2>
<h3> 1、安装必备工具</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 2、配置根文件系统</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 3、制作 ISO</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>制作RPM包</title>
      <link>https://haijunit.top/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/09.Shell%E8%84%9A%E6%9C%AC/80.RPM%E5%8C%85-rpmbuild.html</link>
      <guid>https://haijunit.top/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/09.Shell%E8%84%9A%E6%9C%AC/80.RPM%E5%8C%85-rpmbuild.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">制作RPM包</source>
      <description>一、rpmbuild rpmbuid是用于制作rpm格式包的工具。 rpm 4.4.x版本之前，rpmbuid工具默认的工作车间为/usr/src/redhat，所以造成普通用户不能制作rpm包。 rpm 4.5.x版本开始，将rpmbuid工具默认的工作车间为$HOME/rpmbuild（用户家目录），并且推荐用户尽量不用root账号制作rpm包。 ## rpm版本查看方法 rpm -qa | grep rpm</description>
      <category>编程技巧</category>
      <category>Shell脚本</category>
      <pubDate>Tue, 23 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 一、rpmbuild</h2>
<p>rpmbuid是用于制作rpm格式包的工具。</p>
<p>rpm 4.4.x版本之前，rpmbuid工具默认的工作车间为/usr/src/redhat，所以造成普通用户不能制作rpm包。</p>
<p>rpm 4.5.x版本开始，将rpmbuid工具默认的工作车间为$HOME/rpmbuild（用户家目录），并且推荐用户尽量不用root账号制作rpm包。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>rpmbuild默认工作车间为/usr/lib/rpm/macros这个文件，具体由%<em>topdir宏变量进行定义。</em></p>
<p><em>官方不建议在/usr/lib/rpm/macros目录中更改这个工作路径。</em></p>
<p>_如果需要则可以在用户家目录下建立一个.rpmmacros隐藏文件，在里面重新定义%_topdir，指向一个新的目录名。内容一般为：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在<code>%_topdir</code>目录下一般需要有6个目录（实际操作的时候执行命令自动创建）：<br>
备注：执行<code>rpmdev-setuptree</code>命令会在当前用户的家目录下的<code>rpmbuild</code>目录(如果该目录不存在也会被自动创建)里自动建立上述目录。</p>
<table>
<thead>
<tr>
<th>目录名</th>
<th>macros宏名</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>BUILD</td>
<td>%_builddir</td>
<td>编译rpm包的临时目录</td>
</tr>
<tr>
<td>BUILDROOT</td>
<td>%_buildrootdir</td>
<td>编译后生成的软件临时安装目录</td>
</tr>
<tr>
<td>RPMS</td>
<td>%_rpmdir</td>
<td>最终生成的可安装rpm包的所在目录</td>
</tr>
<tr>
<td>SOURCES</td>
<td>%_sourcedir</td>
<td>所有源代码和补丁文件的存放目录</td>
</tr>
<tr>
<td>SPECS</td>
<td>%_specdir</td>
<td>存放SPEC文件的目录(重要)</td>
</tr>
<tr>
<td>SRPMS</td>
<td>%_srcrpmdir</td>
<td>软件最终的rpm源码格式存放路径(暂时忽略掉，别挂在心上)</td>
</tr>
</tbody>
</table>
<p>当上述目录建立好之后，将所有用于生成rpm包的源代码、shell脚本、配置文件都拷贝到SOURCES目录里，注意通常情况下源码的压缩格式都为*.tar.gz格式。</p>
<p>然后将编辑好的SPEC文件，命名为“软件名-版本.spec”，将其拷贝到SPECS目录下。<br>
最后切换SPEC目录下执行命令制作rpm包：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SPEC文件是最核心的，在它里面定义了头部信息和一些“阶段”(%prep、%build、%install、%clean、%pre、%post、%preun和%postun)，当rpmbuild执行时它首先会去解析SPEC文件，然后依次执行每个“阶段”里的指令。<br>
参考：<a href="http://blog.chinaunix.net/uid-23069658-id-3944462.html" target="_blank" rel="noopener noreferrer">http://blog.chinaunix.net/uid-23069658-id-3944462.html</a></p>
<h3> 1、安装相关包和查看默认工作车间</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 2、新增普通用户</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 3、自动生成rpm打包所需目录</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 4、将源码、配置文件等放入<code>SOURCES</code>目录下</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 5、创建SPEC模板文件熟悉</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SPEC完整版如下：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 6、打包编译</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 7、下载安装</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 二、fpm方式定制rpm包</h2>
<p>fpm工具其实是对rpmbuild进行封装，目的是使打包变成容易。由于此工具是ruby语言编写的，所以系统需要安装ruby，且ruby版本号大于1.8.5。<br>
fpm开源项目：<a href="https://github.com/jordansissel/fpm" target="_blank" rel="noopener noreferrer">https://github.com/jordansissel/fpm</a></p>
<h3> 1、安装ruby环境和gem命令（gem命令是从rubygem仓库安装软件，类似yum从yum仓库安装软件）</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 2、查看gem默认源</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 3、添加阿里云rubygems仓库</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 4、移除默认的国外源</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 5、查看gem源是否为阿里云</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 6、安装fpm工具</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>题外话：如果操作系统为CentOS6，可能会提示ruby版本问题，这个时候我们指定安装老版本（因为升级到新版本很麻烦）</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 7、查看版本</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 8、zabbix agent编辑安装</h3>
<p>参考官方cases：<a href="https://fpm.readthedocs.io/en/latest/use-cases/make-install.html" target="_blank" rel="noopener noreferrer">https://fpm.readthedocs.io/en/latest/use-cases/make-install.html</a></p>
<p>编辑安装zabbix agent：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 9、zabbix agent脚本</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 10、打包rpm</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 11、验证rpm包</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>制作RPM包之FPM</title>
      <link>https://haijunit.top/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/09.Shell%E8%84%9A%E6%9C%AC/81.RPM%E5%8C%85-fpm.html</link>
      <guid>https://haijunit.top/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/09.Shell%E8%84%9A%E6%9C%AC/81.RPM%E5%8C%85-fpm.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">制作RPM包之FPM</source>
      <description>FPM工具 官网: https://github.com/jordansissel/fpm FPM-dockerfile: https://github.com/aosolao/FPM-dockerfile</description>
      <category>编程技巧</category>
      <category>Shell脚本</category>
      <pubDate>Mon, 22 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> FPM工具</h2>
<ul>
<li>官网: <a href="https://github.com/jordansissel/fpm" target="_blank" rel="noopener noreferrer">https://github.com/jordansissel/fpm</a></li>
<li>FPM-dockerfile: <a href="https://github.com/aosolao/FPM-dockerfile" target="_blank" rel="noopener noreferrer">https://github.com/aosolao/FPM-dockerfile</a></li>
</ul>
<h2> 安装ruby和gem</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> FPM使用</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 使用docker制作</h2>
<ul>
<li>Dockerfile 请见： <a href="https://github.com/aosolao/FPM-dockerfile" target="_blank" rel="noopener noreferrer">https://github.com/aosolao/FPM-dockerfile</a></li>
<li>构建好的镜像请见： <a href="https://hub.docker.com/r/aosolao/fpm" target="_blank" rel="noopener noreferrer">https://hub.docker.com/r/aosolao/fpm</a></li>
</ul>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 查看rpm包信息</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> F&amp;Q安装遇到问题</h2>
<p>1.<code>Need executable 'rpmbuild' to convert dir to rpm {:level=&gt;:error}</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>2.如果里面有<code>gcc make</code>的错误</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 演示Demo</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>文档的操作</title>
      <link>https://haijunit.top/blog/91.%E5%A4%A9%E4%BF%A1%E7%91%9E%E5%AE%89/10.%E4%BA%91%E7%9B%98%E6%9C%8D%E5%8A%A1/50.%E6%96%87%E6%A1%A3%E7%9A%84%E6%93%8D%E4%BD%9C.html</link>
      <guid>https://haijunit.top/blog/91.%E5%A4%A9%E4%BF%A1%E7%91%9E%E5%AE%89/10.%E4%BA%91%E7%9B%98%E6%9C%8D%E5%8A%A1/50.%E6%96%87%E6%A1%A3%E7%9A%84%E6%93%8D%E4%BD%9C.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">文档的操作</source>
      <description>Stirling-PDF https://github.com/Frooodle/Stirling-PDF 一款功能强大、开箱即用的 PDF 工具，支持拆分/合并文件、添加/提取图片、压缩、加水印、添加/删除密码等功能，满足对 PDF 文件的所有需求。 version: &amp;apos;3.3&amp;apos; services: stirling-pdf: image: frooodle/s-pdf:latest ports: - &amp;apos;8080:8080&amp;apos; volumes: - ./data/trainingData:/usr/share/tesseract-ocr/4.00/tessdata - ./data/extraConfigs:/configs # - ./data/customFiles:/customFiles/ environment: - DOCKER_ENABLE_SECURITY=false ``</description>
      <category>天信瑞安</category>
      <category>云盘服务</category>
      <pubDate>Wed, 29 Nov 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> Stirling-PDF</h2>
<ul>
<li><a href="https://github.com/Frooodle/Stirling-PDF" target="_blank" rel="noopener noreferrer">https://github.com/Frooodle/Stirling-PDF</a></li>
</ul>
<blockquote>
<p>一款功能强大、开箱即用的 PDF 工具，支持拆分/合并文件、添加/提取图片、压缩、加水印、添加/删除密码等功能，满足对 PDF 文件的所有需求。</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>组件的命名</title>
      <link>https://haijunit.top/blog/60.%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/10.%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83/21.%E7%BB%84%E4%BB%B6%E7%9A%84%E5%91%BD%E5%90%8D.html</link>
      <guid>https://haijunit.top/blog/60.%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/10.%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83/21.%E7%BB%84%E4%BB%B6%E7%9A%84%E5%91%BD%E5%90%8D.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">组件的命名</source>
      <description>按照设计师和前端工程师的共同认知进行命名和归类 基础(Basic) 布局(Layout) 导航(Navigations) 数据类(Data) 沟通类（Notice） 输入类(Input) 其他 Others 色彩 Color 布局 Layout 选项卡 Tabs 图表 Diagram 全局提醒 Message 输入框 Input 模态抽屉 Drawer 字体 Fonts 栅格 Grid 步骤条 Steps 列表 List 文字提示 Tootip 日期选择器 DatePicker 锚点 Anchor 图标 Icon 卡片 Card 面包屑 Breadcrumb 表格 Table 加载中 Loading 时间选择器 TimePicker 标签 Tag 动效 Motion 走马灯 Carousel 分页 Pagination 表单 Form 警告提示 Alert 单选框 Radio 按钮 Button 分割线 Divider 导航菜单 Menu 树 Tree 徽标数 Badge 多选框 Checkbox 用户引导 Onboarding 搜索框 Search 气泡确认 Popconfirm 穿梭框 Transfer 对话框 Dialog 下拉菜单 Dropdown 消息通知 Notification 树选择 TreeSelect 上传 Upload 开关 Switch 选择器 Select</description>
      <category>项目管理</category>
      <category>代码规范</category>
      <pubDate>Wed, 22 Nov 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<blockquote>
<p>按照设计师和前端工程师的共同认知进行命名和归类</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:left"><strong>基础(Basic)</strong></th>
<th style="text-align:left"><strong>布局(Layout)</strong></th>
<th style="text-align:left"><strong>导航(Navigations)</strong></th>
<th style="text-align:left"><strong>数据类(Data)</strong></th>
<th style="text-align:left"><strong>沟通类（Notice）</strong></th>
<th style="text-align:left"><strong>输入类(Input)</strong></th>
<th style="text-align:left"><strong>其他 Others</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">色彩 Color</td>
<td style="text-align:left">布局 Layout</td>
<td style="text-align:left">选项卡 Tabs</td>
<td style="text-align:left">图表 Diagram</td>
<td style="text-align:left">全局提醒 Message</td>
<td style="text-align:left">输入框 Input</td>
<td style="text-align:left">模态抽屉 Drawer</td>
</tr>
<tr>
<td style="text-align:left">字体 Fonts</td>
<td style="text-align:left">栅格 Grid</td>
<td style="text-align:left">步骤条 Steps</td>
<td style="text-align:left">列表 List</td>
<td style="text-align:left">文字提示 Tootip</td>
<td style="text-align:left">日期选择器 DatePicker</td>
<td style="text-align:left">锚点 Anchor</td>
</tr>
<tr>
<td style="text-align:left">图标 Icon</td>
<td style="text-align:left">卡片 Card</td>
<td style="text-align:left">面包屑 Breadcrumb</td>
<td style="text-align:left">表格 Table</td>
<td style="text-align:left">加载中 Loading</td>
<td style="text-align:left">时间选择器 TimePicker</td>
<td style="text-align:left">标签 Tag</td>
</tr>
<tr>
<td style="text-align:left">动效 Motion</td>
<td style="text-align:left">走马灯 Carousel</td>
<td style="text-align:left">分页 Pagination</td>
<td style="text-align:left">表单 Form</td>
<td style="text-align:left">警告提示 Alert</td>
<td style="text-align:left">单选框 Radio</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left">按钮 Button</td>
<td style="text-align:left">分割线 Divider</td>
<td style="text-align:left">导航菜单 Menu</td>
<td style="text-align:left">树 Tree</td>
<td style="text-align:left">徽标数 Badge</td>
<td style="text-align:left">多选框 Checkbox</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left">用户引导 Onboarding</td>
<td style="text-align:left">搜索框 Search</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left">气泡确认 Popconfirm</td>
<td style="text-align:left">穿梭框 Transfer</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left">对话框 Dialog</td>
<td style="text-align:left">下拉菜单 Dropdown</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left">消息通知 Notification</td>
<td style="text-align:left">树选择 TreeSelect</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left">上传 Upload</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left">开关 Switch</td>
<td style="text-align:left"></td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left"></td>
<td style="text-align:left">选择器 Select</td>
<td style="text-align:left"></td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>CSS命名规范</title>
      <link>https://haijunit.top/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/11.CSSS/30.CSS%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83.html</link>
      <guid>https://haijunit.top/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/11.CSSS/30.CSS%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">CSS命名规范</source>
      <description>CSS 的命名，采用 BEM 命名规范，可以有效的避免组件间样式的相互污染，减少嵌套层级。具体规则如下： BEM 是什么? BEM 使用分隔符将类名区隔成三个部分： [prefix]-[block]__[element]--[modifier] prefix：全局的前缀，这里指代表 tdesign 的前缀，也就是 t- Block(块) ：组件的最外层父元素，这个类包含最通用和可重用的功能。 Element(元素) ：组件内可包含一个或多个元素，元素为块添加了新功能。无需重置任何属性。 Modifier(修饰类) ：块或元素都可以通过修饰词来表示为变体。</description>
      <category>编程技巧</category>
      <category>CSSS</category>
      <pubDate>Wed, 22 Nov 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>CSS 的命名，采用 <a href="http://getbem.com/" target="_blank" rel="noopener noreferrer">BEM</a> 命名规范，可以有效的避免组件间样式的相互污染，减少嵌套层级。具体规则如下：</p>
<h2> BEM 是什么?</h2>
<p>BEM 使用分隔符将类名区隔成三个部分：</p>
<p>[prefix]-[block]__[element]--[modifier]</p>
<ul>
<li><strong>prefix</strong>：全局的前缀，这里指代表 tdesign 的前缀，也就是 t-</li>
<li><strong>Block(块)</strong> ：组件的最外层父元素，这个类包含最通用和可重用的功能。</li>
<li><strong>Element(元素)</strong> ：组件内可包含一个或多个元素，元素为块添加了新功能。无需重置任何属性。</li>
<li><strong>Modifier(修饰类)</strong> ：块或元素都可以通过修饰词来表示为变体。</li>
</ul>
<h2> BEM 的特点</h2>
<ul>
<li>易于理解和学习</li>
<li>创建的结构易于扩展和维护</li>
</ul>
<h2> BEM 命名规则</h2>
<p>通过几个常见实例，来讲解一下项目实践中的注意事项。</p>
<h3> 1. 无元素和修饰类的块</h3>
<h3> 2. 含简单修饰类的组件</h3>
<ul>
<li>组件可能有变体，<strong>变体必须使用修饰类来表示</strong></li>
<li><strong>修饰类不能单独使用</strong>。修饰类旨在增强而非替代基类</li>
</ul>
<h3> 3. 含元素的组件</h3>
<p>稍微复杂的结构通常有子元素。</p>
<ul>
<li>每个需要设置样式的子元素<strong>必须</strong>包含一个类名。</li>
<li>不要省略 HTML 中子元素的类名，否则会对组件中的元素使用更高权重的选择器。BEM 目的之一是保持样式一致和较低的权重值（specificity）。</li>
<li>如果结构具有多个层级的子元素，<strong>类名无需反映出每个层级</strong>。</li>
<li>BEM 并不打算传达结构层级。表示组件中子元素的 BEM 类名<strong>只需包含块名和元素名</strong>。</li>
</ul>
<h3> 4. 含修饰类的元素</h3>
<p>在某些情况下，你可能希望更改组件中的单个元素。在这种情况下，<strong>不能</strong>在组件上添加修饰类，只能在元素上添加修饰类。</p>
<h3> 5. 基于组件修饰类调整元素样式</h3>
<p>如果需要以相同的方式调整同一个组件内的多个元素，可以在组件的基类上添加修饰类，再基于这个修饰类来调整次级元素的样式。虽然增加了样式权重值，但修改组件更加简单了。</p>
<h3> 6. 类名含有多个单词怎么办？</h3>
<p>使用双下划线与双连字符区隔块__元素--修饰类的意图正是为此。因此:</p>
<ul>
<li>使用<strong>连字符</strong>来区隔单词，保证样式类名全小写，<strong>不使用驼峰命名法（Camel-Case）</strong></li>
<li>类名应该易于阅读，因此除非缩写是普遍可识别的，否则缩写并不建议使用</li>
</ul>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 7. 如何表示组件状态？</h3>
<p>很多组件具有多种状态，比如 tab 组件有激活状态、禁用状态。</p>
<ul>
<li>使用独立的状态钩子来表示状态，状态类名以 t-is-开头，我们整理一套<strong>推荐使用的状态类名</strong>（见附）供君选用</li>
<li>设置状态样式时，状态类名<strong>必须</strong>与其作用的元素类名或者块类名联合使用（.a.b 形式），不能使用后代选择器、子选择器等其他方式设置样式，以减小对全局样式的污染</li>
<li>修饰类的作用是用来表示组件的另外一个变体，而非另外一种状态，所以状态<strong>不使用</strong>修饰符的形式（如 t-tabs__tab-disabled）</li>
</ul>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 组件命名</h2>
<p>参见<a href="/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/11.CSSS/naming.html" target="blank">团队语言规范</a></p>
<h3> 常见状态类名</h3>
<table>
<thead>
<tr>
<th style="text-align:center"><strong>状态</strong></th>
<th style="text-align:center"><strong>类名</strong></th>
<th style="text-align:center"><strong>说明</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">加载</td>
<td style="text-align:center">t-is-loading</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">禁用</td>
<td style="text-align:center">t-is-disabled</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">成功</td>
<td style="text-align:center">t-is-success</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">报错</td>
<td style="text-align:center">t-is-error</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">警告</td>
<td style="text-align:center">t-is-warning</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">聚焦</td>
<td style="text-align:center">t-is-focused</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">选中</td>
<td style="text-align:center">t-is-selected</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">勾选</td>
<td style="text-align:center">t-is-checked</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">关闭</td>
<td style="text-align:center">t-is-closable</td>
<td style="text-align:center">是否可关闭</td>
</tr>
<tr>
<td style="text-align:center">激活</td>
<td style="text-align:center">t-is-active</td>
<td style="text-align:center">比如当前 tab 选中项</td>
</tr>
<tr>
<td style="text-align:center">当前项</td>
<td style="text-align:center">t-is-current</td>
<td style="text-align:center">主要用于 step，表示当前步骤</td>
</tr>
<tr>
<td style="text-align:center">隐藏/显示</td>
<td style="text-align:center">t-is-hidden/t-is-visible</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">展开/折叠</td>
<td style="text-align:center">t-is-expanded/t-is-collapsed</td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
<h4> 推荐常用单词</h4>
<table>
<thead>
<tr>
<th style="text-align:center"><strong>状态</strong></th>
<th style="text-align:center"><strong>类名</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">头</td>
<td style="text-align:center">header</td>
</tr>
<tr>
<td style="text-align:center">身</td>
<td style="text-align:center">body</td>
</tr>
<tr>
<td style="text-align:center">尾</td>
<td style="text-align:center">footer</td>
</tr>
<tr>
<td style="text-align:center">容器/内容</td>
<td style="text-align:center">container / wrap / content</td>
</tr>
<tr>
<td style="text-align:center">侧边</td>
<td style="text-align:center">side / sidebar / sidemenu</td>
</tr>
<tr>
<td style="text-align:center">边框修饰</td>
<td style="text-align:center">xxx–bordered / xxx–borderless</td>
</tr>
</tbody>
</table>
<h4> 图标类，以 info 举例</h4>
<table>
<thead>
<tr>
<th style="text-align:center"><strong>说明</strong></th>
<th style="text-align:center"><strong>类名</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">默认</td>
<td style="text-align:center">t-icon-info</td>
</tr>
<tr>
<td style="text-align:center">其他颜色</td>
<td style="text-align:center">t-icon-info t-icon-info--danger</td>
</tr>
<tr>
<td style="text-align:center">其他尺寸</td>
<td style="text-align:center">t-icon-info t-size-l</td>
</tr>
</tbody>
</table>
<h4> 尺寸类</h4>
<table>
<thead>
<tr>
<th style="text-align:center"><strong>尺寸</strong></th>
<th style="text-align:center"><strong>类名</strong></th>
<th style="text-align:center"><strong>说明</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">较小</td>
<td style="text-align:center">t-size-xs</td>
<td style="text-align:center">extra small</td>
</tr>
<tr>
<td style="text-align:center">小</td>
<td style="text-align:center">t-size-s</td>
<td style="text-align:center">small</td>
</tr>
<tr>
<td style="text-align:center">中（默认）</td>
<td style="text-align:center">t-size-m</td>
<td style="text-align:center">middle</td>
</tr>
<tr>
<td style="text-align:center">大</td>
<td style="text-align:center">t-size-l</td>
<td style="text-align:center">large</td>
</tr>
<tr>
<td style="text-align:center">较大</td>
<td style="text-align:center">t-size-xl</td>
<td style="text-align:center">extra large</td>
</tr>
<tr>
<td style="text-align:center">高度 100%</td>
<td style="text-align:center">t-size-full-height</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">宽度 100%</td>
<td style="text-align:center">t-size-full-width</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">宽度自适应</td>
<td style="text-align:center">t-size-auto-width</td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>CSS的BEM规范</title>
      <link>https://haijunit.top/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/11.CSSS/31.CSS%E7%9A%84BEM%E8%A7%84%E8%8C%83.html</link>
      <guid>https://haijunit.top/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/11.CSSS/31.CSS%E7%9A%84BEM%E8%A7%84%E8%8C%83.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">CSS的BEM规范</source>
      <description>Css中BEM书写规范 BEM是Block（块）、Element（元素）、Modifier（修饰符）的简写，是一种组件化的 CSS 命名方法和规范 BEM是基于组件的web开发方法。其思想是将用户界面分隔为独立的块，从而使开发复杂的UI界面变得更简单和快，且不需要粘贴复制便可复用现有代码。 BEM由Block、Element、Modifier组成。选择器里用以下连接符扩展他们的关系： 引用：http://getbem.com/naming/</description>
      <category>编程技巧</category>
      <category>CSSS</category>
      <pubDate>Sun, 07 Mar 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> Css中BEM书写规范</h2>
<blockquote>
<p>BEM是Block（块）、Element（元素）、Modifier（修饰符）的简写，是一种组件化的 CSS 命名方法和规范</p>
<p>BEM是基于组件的web开发方法。其思想是将用户界面分隔为独立的块，从而使开发复杂的UI界面变得更简单和快，且不需要粘贴复制便可复用现有代码。</p>
<p>BEM由Block、Element、Modifier组成。选择器里用以下连接符扩展他们的关系：</p>
<p>引用：<a href="http://getbem.com/naming/" target="_blank" rel="noopener noreferrer">http://getbem.com/naming/</a></p>
</blockquote>
<ul>
<li><code>__</code>：双下划线 用来连接块和块的子元素</li>
<li><code>-</code>： 中划线，仅作为连字符使用</li>
<li><code>--</code>：双中划线 表示不同状态或不同版本</li>
</ul>
<h2> 基本概念</h2>
<ul>
<li>Block(块)
<blockquote>
<p>代码片段可能被复用且这段代码不依赖其他组件即可用Block。块可以互相嵌套,可以嵌套任意多层。</p>
</blockquote>
</li>
<li>Element（元素）
<blockquote>
<p>Element是Block的一部分，没有独立存在的意义。任何一个Element语义上是和Block绑定的。</p>
</blockquote>
</li>
<li>Modifier（修饰符）
<blockquote>
<p>Modifier是Block或Element上的标记。使用它们来改变样式，行为或状态。与块或元素连接符为'--'。</p>
</blockquote>
</li>
</ul>
<h2> 实例</h2>
<div class="language-less line-numbers-mode" data-ext="less"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>邮件配置</title>
      <link>https://haijunit.top/blog/91.%E5%A4%A9%E4%BF%A1%E7%91%9E%E5%AE%89/10.%E4%BA%91%E7%9B%98%E6%9C%8D%E5%8A%A1/20.%E9%82%AE%E4%BB%B6%E9%85%8D%E7%BD%AE.html</link>
      <guid>https://haijunit.top/blog/91.%E5%A4%A9%E4%BF%A1%E7%91%9E%E5%AE%89/10.%E4%BA%91%E7%9B%98%E6%9C%8D%E5%8A%A1/20.%E9%82%AE%E4%BB%B6%E9%85%8D%E7%BD%AE.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">邮件配置</source>
      <description>测试邮件 ## 安装依赖 yum install -y sendemail mailx ## 发送测试邮件 sendemail -f dev@bjtxra.com -t zhanghaijun@bjtxra.com -s smtp.exmail.qq.com:587 -xu dev@bjtxra.com -xp &amp;apos;Bedrock123!@#&amp;apos; -u &amp;quot;Test Email&amp;quot; -m &amp;quot;This is a test email.&amp;quot;</description>
      <category>天信瑞安</category>
      <category>云盘服务</category>
      <pubDate>Wed, 18 Oct 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 测试邮件</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> Postfix</h2>
<h3> 配置</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 测试</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>20230815</title>
      <link>https://haijunit.top/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/20.Java/81.20230815.html</link>
      <guid>https://haijunit.top/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/20.Java/81.20230815.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">20230815</source>
      <description>1、Redis 的单机、哨兵、集群的区别和选型？ 单机模式 在单机模式下，Redis 运行在单个实例上，所有的数据都存储在这一个实例中。优点包括部署简单、操作方便，适用于快速的数据缓存需求。 缺点 单点故障：如果 Redis 实例出现故障，数据可能会丢失。 有限的容量：内存容量受到物理服务器的限制。 不支持高可用性：无法提供自动故障转移或负载均衡。 哨兵模式</description>
      <category>编程技巧</category>
      <category>Java</category>
      <pubDate>Sun, 18 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 1、Redis 的单机、哨兵、集群的区别和选型？</h2>
<h3> 单机模式</h3>
<blockquote>
<p>在单机模式下，Redis 运行在单个实例上，所有的数据都存储在这一个实例中。优点包括部署简单、操作方便，适用于快速的数据缓存需求。</p>
</blockquote>
<ul>
<li>缺点
<ul>
<li>单点故障：如果 Redis 实例出现故障，数据可能会丢失。</li>
<li>有限的容量：内存容量受到物理服务器的限制。</li>
<li>不支持高可用性：无法提供自动故障转移或负载均衡。</li>
</ul>
</li>
</ul>
<h3> 哨兵模式</h3>
<blockquote>
<p>哨兵部署在单机部署的基础上，引入了哨兵节点，用于监控主节点的健康状态，并在主节点故障时自动进行切换。</p>
<p>哨兵模式提供了一定程度的高可用性，但不支持数据分片。</p>
</blockquote>
<ul>
<li>自动故障转移：当主节点出现问题时，哨兵节点会选举一个新的主节点，确保系统可用。</li>
<li>有限的扩展性：虽然可以通过增加哨兵节点来提高可用性，但在数据量和性能方面有限制。</li>
</ul>
<h3> 集群模式</h3>
<blockquote>
<p>集群部署适用于需要高性能和高可用性的大规模应用。在集群模式下，数据被分片存储在多个节点上，每个节点负责管理一部分数据。</p>
<p>这种方式可以水平扩展，支持更大的数据集和更高的吞吐量。</p>
<p>哨兵节点的数量建议是奇数，在主节点出现故障时，可以确保达成多数决策，以选择新的主节点。</p>
</blockquote>
<ul>
<li>数据分片：数据被均匀分布在多个节点上，可以充分利用多台服务器的资源。</li>
<li>自动分片和负载均衡：数据分片和负载均衡由集群自动管理，无需手动干预。</li>
<li>高可用性：集群中的节点可以自动进行故障转移，确保系统可用性。</li>
<li>部署复杂：配置和维护集群需要一些额外的工作，包括节点的添加和删除、数据迁移等。</li>
</ul>
<h2> Redis 的数据结构和应用场景</h2>
<h2> Redis 做数据库缓存，怎么解决双写的问题，是否有脏数据？</h2>
<h2> MySQL 默认的事务隔离机制</h2>
<h2> MySQL 执行 UPDAYE 是怎么执行的？</h2>
<h2> HashMap 是现场不安全的，满足线程安全应该怎么处理？</h2>
<h2> Executors.newCachedThreadPool()</h2>
<h2> 集成方案提供技术支持，典型的案例？</h2>
<h2> 高可用的部署方案？</h2>
]]></content:encoded>
    </item>
    <item>
      <title>家庭系统搭建</title>
      <link>https://haijunit.top/blog/10.%E9%9A%8F%E7%AC%94%E8%AE%B0%E5%BD%95/20.%E5%AE%B6%E5%BA%AD%E7%BB%84%E7%BD%91/20.%E5%AE%B6%E5%BA%AD%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA.html</link>
      <guid>https://haijunit.top/blog/10.%E9%9A%8F%E7%AC%94%E8%AE%B0%E5%BD%95/20.%E5%AE%B6%E5%BA%AD%E7%BB%84%E7%BD%91/20.%E5%AE%B6%E5%BA%AD%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">家庭系统搭建</source>
      <description>需求 全屋 Wifi 全屋 Wifi-软路由（非必须） 存储中心（例如 NAS、群晖） 存储中心-支持手机图片同步 存储中心-支持电视点播影视作品 存储中心-支持网盘备份 群晖 https://www.synology.cn/zh-cn/support/download https://www.synology.cn/zh-cn/dsm</description>
      <category>随笔记录</category>
      <category>家庭组网</category>
      <pubDate>Sat, 01 Jul 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<h2> 需求</h2>
<ul>
<li>全屋 Wifi</li>
<li>全屋 Wifi-软路由（非必须）</li>
<li>存储中心（例如 NAS、群晖）</li>
<li>存储中心-支持手机图片同步</li>
<li>存储中心-支持电视点播影视作品</li>
<li>存储中心-支持网盘备份</li>
</ul>
<h2> 群晖</h2>
<ul>
<li><a href="https://www.synology.cn/zh-cn/support/download" target="_blank" rel="noopener noreferrer">https://www.synology.cn/zh-cn/support/download</a></li>
<li><a href="https://www.synology.cn/zh-cn/dsm" target="_blank" rel="noopener noreferrer">https://www.synology.cn/zh-cn/dsm</a></li>
</ul>
<h3> 1、下载镜像</h3>
<p><a href="https://xpenology.club/downloads/" target="_blank" rel="noopener noreferrer">https://xpenology.club/downloads/</a><br>
<a href="https://xpenology.club/download/xpenoboot-ds3615xs-5-2-5644-5-iso/" target="_blank" rel="noopener noreferrer">https://xpenology.club/download/xpenoboot-ds3615xs-5-2-5644-5-iso/</a></p>
<h3> 2、U 盘制作</h3>
<p><a href="https://rufus.ie/zh/" target="_blank" rel="noopener noreferrer">https://rufus.ie/zh/</a></p>
<h3> 3、检查局域网的 NAS</h3>
<p>访问地址：<a href="https://finds.synology.com/" target="_blank" rel="noopener noreferrer">https://finds.synology.com/</a></p>
<h3> 4、下载 DSM</h3>
<p><a href="https://archive.synology.com/download/Os/DSM" target="_blank" rel="noopener noreferrer">https://archive.synology.com/download/Os/DSM</a></p>
<h2> iStoreOS</h2>
<ul>
<li><a href="https://mp.weixin.qq.com/s/-w_BYrmTLFl2TZQsf4tvDQ" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/-w_BYrmTLFl2TZQsf4tvDQ</a></li>
<li><a href="https://mp.weixin.qq.com/s/bEUIVgrloIWUomyI-aslWw" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/bEUIVgrloIWUomyI-aslWw</a></li>
</ul>
<blockquote>
<p>iStoreOS 目标是提供一个人人会用的路由兼轻 NAS 系统，不管是作为路由还是 NAS，你都有相似的操作体验。</p>
</blockquote>
<ul>
<li>系统本身开源免费，<a href="https://github.com/istoreos/istoreos" target="_blank" rel="noopener noreferrer">https://github.com/istoreos/istoreos</a></li>
<li>官网地址 <a href="https://www.istoreos.com/" target="_blank" rel="noopener noreferrer">https://www.istoreos.com/</a></li>
<li>相关文档 <a href="https://doc.linkease.com/zh/guide/istoreos/" target="_blank" rel="noopener noreferrer">https://doc.linkease.com/zh/guide/istoreos/</a></li>
</ul>
<h3> 下载 x86-64 的最新固件</h3>
<ul>
<li>镜像下载地址: <a href="https://fw.koolcenter.com/iStoreOS/x86_64/" target="_blank" rel="noopener noreferrer">https://fw.koolcenter.com/iStoreOS/x86_64/</a></li>
<li>目前 x86-64 的最新固件地址: <a href="https://fw0.koolcenter.com/iStoreOS/x86_64/istoreos-21.02.3-2023060914-x86-64-squashfs-combined.img.gz" target="_blank" rel="noopener noreferrer">https://fw0.koolcenter.com/iStoreOS/x86_64/istoreos-21.02.3-2023060914-x86-64-squashfs-combined.img.gz</a></li>
</ul>
<h2> 路由器科学上网插件</h2>
<ul>
<li>插件的地址是：<a href="https://github.com/hq450/fancyss" target="_blank" rel="noopener noreferrer">https://github.com/hq450/fancyss</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>用proxy改造你的console</title>
      <link>https://haijunit.top/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/15.VUE%E5%BA%94%E7%94%A8/13.%E7%94%A8proxy%E6%94%B9%E9%80%A0%E4%BD%A0%E7%9A%84console.html</link>
      <guid>https://haijunit.top/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/15.VUE%E5%BA%94%E7%94%A8/13.%E7%94%A8proxy%E6%94%B9%E9%80%A0%E4%BD%A0%E7%9A%84console.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">用proxy改造你的console</source>
      <description>解决方案 方案一，通过ast解析console 将变量名放在console后面，奈何esbuild不支持ast操作(不是我不会 哈哈哈哈), 故放弃。 方案二，既然vue能代理对象，那么console是不是也能被代理。 实践 第一步代理console,将原始的console,用全局变量originConsole保存起来，以便后续使用 withLogging 函数拦截console.log 重写log参数 js复制代码const originConsole = window.console; var console = new Proxy(window.console, { get(target, property) { if(property === &amp;apos;log&amp;apos;) { return withLogging(target[property]) } return target[property] }, })</description>
      <category>编程技巧</category>
      <category>VUE应用</category>
      <pubDate>Sun, 18 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 解决方案</h2>
<p>方案一，通过ast解析console 将变量名放在console后面，奈何esbuild不支持ast操作(不是我不会 哈哈哈哈), 故放弃。</p>
<p>方案二，既然vue能代理对象，那么console是不是也能被代理。</p>
<h2> 实践</h2>
<p>第一步代理console,将原始的console,用全局变量originConsole保存起来，以便后续使用 withLogging 函数拦截console.log 重写log参数</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>遇到问题，js中 无法获取获取变量的名称的字符串。就是说无法打印变量名。</p>
<p>解决方案，通过vite中的钩子函数transform，将console.log(name.x) 转化成 console.log(name.x, ['isPlugin', 'name.x'])</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样最终就实现了类型于这样的输出代码</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这样也就最终实现了通过变量输出变量名跟变量值的一一对应</p>
<h3> 最后</h3>
<p>我将其写成了一个vite插件，<a href="https://link.juejin.cn?target=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2Fvite-plugin-consoles" target="_blank" rel="noopener noreferrer">vite-plugin-consoles</a> 感兴趣的可以试试，有bug记得跟我说(●'◡'●)</p>
<p>源码地址： <a href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2FALiangTech%2Fvite-plugin-consoles%23readme" target="_blank" rel="noopener noreferrer">github.com/ALiangTech/…</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>docker搭建Asible测试环境</title>
      <link>https://haijunit.top/blog/80.%E8%BF%90%E7%BB%B4%E6%8A%80%E5%B7%A7/10.%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7/11.docker%E6%90%AD%E5%BB%BAAsible%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83.html</link>
      <guid>https://haijunit.top/blog/80.%E8%BF%90%E7%BB%B4%E6%8A%80%E5%B7%A7/10.%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7/11.docker%E6%90%AD%E5%BB%BAAsible%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">docker搭建Asible测试环境</source>
      <description>说明 宿主机需要安装Docker和Docker-compose 创建3个容器： 主机名分别为host1、host2和ansible2.11 host1和host2安装python3.7、openssh server ansible安装openssh server、openssh client、ansible 步骤 按如下目录结构创建文件 . ├── alpine │ └── Dockerfile ├── ansible │ └── Dockerfile └── docker-compose.yml</description>
      <category>运维技巧</category>
      <category>运维工具</category>
      <pubDate>Sun, 18 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 说明</h2>
<p>宿主机需要安装Docker和Docker-compose<br>
创建3个容器：<br>
主机名分别为host1、host2和ansible2.11<br>
host1和host2安装python3.7、openssh server<br>
ansible安装openssh server、openssh client、ansible</p>
<h2> 步骤</h2>
<p>按如下目录结构创建文件</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> alpine/Dockerfile内容为</h3>
<div class="language-docker line-numbers-mode" data-ext="docker"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> ansible/Dockerfile内容为</h3>
<div class="language-docker line-numbers-mode" data-ext="docker"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> docker-compose.yml内容为</h3>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行下面的命令构建镜像并启动服务：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>进入ansible容器</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行下面命令，复制公钥到远程机器：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>会提示输入密码，密码是<code>root</code></p>
<h2> 使用</h2>
<p>我们使用ping命令测试一下：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输出类似下面的信息：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>多路径软件</title>
      <link>https://haijunit.top/blog/80.%E8%BF%90%E7%BB%B4%E6%8A%80%E5%B7%A7/10.%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7/15.%E5%A4%9A%E8%B7%AF%E5%BE%84%E8%BD%AF%E4%BB%B6.html</link>
      <guid>https://haijunit.top/blog/80.%E8%BF%90%E7%BB%B4%E6%8A%80%E5%B7%A7/10.%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7/15.%E5%A4%9A%E8%B7%AF%E5%BE%84%E8%BD%AF%E4%BB%B6.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">多路径软件</source>
      <description>[[toc]]</description>
      <category>运维技巧</category>
      <category>运维工具</category>
      <pubDate>Thu, 08 Dec 2022 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>SSH配置多个GIT平台</title>
      <link>https://haijunit.top/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/05.Windows/17.SSH%E9%85%8D%E7%BD%AE%E5%A4%9A%E4%B8%AAGIT%E5%B9%B3%E5%8F%B0.html</link>
      <guid>https://haijunit.top/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/05.Windows/17.SSH%E9%85%8D%E7%BD%AE%E5%A4%9A%E4%B8%AAGIT%E5%B9%B3%E5%8F%B0.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">SSH配置多个GIT平台</source>
      <description>1、Git全局配置 如果之前设置过全局的user.name和user.email, 需要先删掉，删除命令如下 # 查看全局配置 git config --global --list # 删除全局配置的用户名 git config --global --unset user.name # 删除全局配置的邮箱 git config --global --unset user.email</description>
      <category>编程技巧</category>
      <category>Windows</category>
      <pubDate>Sun, 18 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 1、Git全局配置</h2>
<p>如果之前设置过全局的<code>user.name</code>和<code>user.email</code>, 需要先删掉，删除命令如下</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 2、生成SSH密钥</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><code>-C "example@163.com"</code> 替换成你的邮箱账号，</li>
<li><code>-f id_rsa_github</code> 文件名，可以自定义，默认为 <code>id_rsa</code></li>
<li><code>-C "Github"</code> 为描述信息</li>
</ul>
<blockquote>
<p>生成期间会要求输入两次密码，不用输入，直接回车</p>
</blockquote>
<h2> 3、配置 config</h2>
<p>完成上面ssh公钥后，需要配置config文件。打开 <code>.ssh</code> 文件夹查看是否有 <code>config</code> 文件，如果没有直接右键创建一个。然后可以复制下面的内容去填写你的config配置</p>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>根据你生成的内容，去修改对应的 <code>config</code> 信息</p>
</blockquote>
<h2> 4、验证</h2>
<p>然后输入以下命令，测试连接</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 5、远程仓库代码</h2>
<p>在本地用ssh方式拉取远程仓库代码，<code>git clone 仓库ssh地址</code></p>
<p>注意：不要配置git全局的user.name和user.email，只需要在不同的仓库路径文件夹中设置本地的<code>user.name</code>和<code>user.email</code>，如：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Linux中磁盘管理</title>
      <link>https://haijunit.top/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/06.CentOS/22.Linux%E4%B8%AD%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86.html</link>
      <guid>https://haijunit.top/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/06.CentOS/22.Linux%E4%B8%AD%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">Linux中磁盘管理</source>
      <description>一、磁盘分区 在Linux下，磁盘格式化、分区和挂载的详细步骤如下所示： 1.确定磁盘设备 使用以下命令来查看可用磁盘设备： fdisk -l # Disk /dev/mmcblk1: 7456 MB, 7818182656 bytes, 15269888 sectors # 238592 cylinders, 4 heads, 16 sectors/track # Units: sectors of 1 * 512 = 512 bytes # Disk /dev/mmcblk1 doesn&amp;apos;t contain a valid partition table # Disk /dev/mmcblk1boot0: 4 MB, 4194304 bytes, 8192 sectors # 128 cylinders, 4 heads, 16 sectors/track # Units: sectors of 1 * 512 = 512 bytes # Disk /dev/mmcblk1boot0 doesn&amp;apos;t contain a valid partition table # Disk /dev/mmcblk1boot1: 4 MB, 4194304 bytes, 8192 sectors # 128 cylinders, 4 heads, 16 sectors/track # Units: sectors of 1 * 512 = 512 bytes # Disk /dev/mmcblk1boot1 doesn&amp;apos;t contain a valid partition table # Disk /dev/mmcblk0: 15 GB, 15931539456 bytes, 31116288 sectors # 486192 cylinders, 4 heads, 16 sectors/track # Units: sectors of 1 * 512 = 512 bytes # Device Boot StartCHS EndCHS StartLBA EndLBA Sectors Size Id Type # /dev/mmcblk0p1 * 0,32,33 8,73,1 2048 133119 131072 64.0M c Win95 FAT32 (LBA) # /dev/mmcblk0p2 8,73,2 912,229,21 133120 31116287 30983168 14.7G 83 Linux</description>
      <category>编程技巧</category>
      <category>CentOS</category>
      <pubDate>Sun, 18 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 一、磁盘分区</h2>
<p>在Linux下，磁盘格式化、分区和挂载的详细步骤如下所示：</p>
<h3> 1.确定磁盘设备</h3>
<p>使用以下命令来查看可用磁盘设备：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从上面可以得出：</p>
<ul>
<li>/dev/mmcblk1：容量为7456 MB的磁盘。238592柱面，4个磁头，每个磁道16个扇区。磁盘上没有有效的分区表。</li>
<li>/dev/mmcblk1boot0和/dev/mmcblk1boot1是磁盘的引导区，大小为4 MB，但它们没有有效的分区表。</li>
<li>/dev/mmcblk0：容量为15 GB的磁盘。486192柱面，4个磁头，每个磁道16个扇区。包含两个分区：</li>
<li>/dev/mmcblk0p1是引导分区，大小为64.0M，使用Win95 FAT32（LBA）文件系统。</li>
<li>/dev/mmcblk0p2是第二个分区，大小为14.7G，使用Linux文件系统（ID为83）。</li>
</ul>
<h3> 2.使用fdisk命令对磁盘进行分区</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>此时命令栏提示输入<code>m</code>，可以看到有如下参数</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>使用命令<code>n</code>创建一个新的分区：</p>
</blockquote>
<ul>
<li>选择主分区（primary partition）类型，输入<code>p</code>。</li>
<li>输入分区号，这里选择<code>1</code>。</li>
<li>输入起始扇区，默认为16，可以直接按<code>回车键</code>使用默认值。</li>
<li>输入结束扇区或者分区大小，这里输入<code>+32M</code>表示分区大小为32MB。</li>
</ul>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>使用命令<code>n</code>再次创建一个新的分区：</p>
</blockquote>
<ul>
<li>选择主分区（primary partition）类型，输入<code>p</code>。</li>
<li>输入分区号，这里选择<code>2</code>。</li>
<li>输入起始扇区，默认为65552，可以直接按<code>回车键</code>使用默认值。</li>
<li>输入结束扇区或者分区大小，这里使用<code>默认值</code>15269887。</li>
</ul>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>使用命令<code>t</code>设置分区类型：</p>
</blockquote>
<ul>
<li>输入要设置类型的分区号，这里选择<code>1</code>。</li>
<li>输入十六进制代码（Hex code），这里输入<code>c</code>表示将分区1的系统类型设置为Win95 FAT32（LBA）。</li>
</ul>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>使用命令<code>a</code>设置引导标志：</p>
</blockquote>
<ul>
<li>输入要设置引导标志的分区号，这里选择<code>1</code>。</li>
</ul>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>使用命令<code>w</code>保存更改并退出：</p>
</blockquote>
<ul>
<li>确认分区表已经被修改，并且调用ioctl()重新读取分区表。</li>
<li>提示分区表已经被修改，并成功保存更改。</li>
</ul>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>最后，磁盘分区表将被修改，分区1被设置为Win95 FAT32（LBA）类型，并且设置为引导分区。</p>
<p>请注意，这些操作可能会对磁盘上的数据产生影响，请确保在进行此类操作之前备份重要数据。</p>
</blockquote>
<h2> 二、磁盘格式化</h2>
<p>磁盘格式化是指在磁盘上创建文件系统以准备存储数据的过程。通过格式化，磁盘将被分区划分为逻辑块，并创建用于存储和组织文件的文件系统结构。格式化磁盘将清除磁盘上的所有数据，并为其提供一个干净的文件系统环境，使其可以开始存储新的数据。</p>
<p>这里，我们将上面的两个分区分别格式化为Fat32格式的文件系统和ext4格式的文件系统</p>
<ul>
<li>将<code>/dev/mmcblk1p1</code>格式化为<code>Fat32</code>格式的文件系统</li>
<li>将<code>/dev/mmcblk1p2</code>格式化为<code>ext4</code>格式的文件系统</li>
</ul>
<blockquote>
<p>Fat32格式，使用命令如下：</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>每个选项的含义解释如下：</p>
<ul>
<li>-F 32：指定创建的文件系统类型为FAT32。</li>
<li>-n MyVolume：设置卷标为"MyVolume"，该卷标将作为文件系统的名称显示。</li>
<li><code>/dev/mmcblk1p1</code>：是要格式化的设备或分区</li>
</ul>
<p>ext4格式，使用命令如下：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>每个选项的含义解释如下：</p>
<ul>
<li>-F：强制进行格式化，即使设备已经被挂载。</li>
<li>-L "rootfs"：设置文件系统的标签为"rootfs"，该标签将作为文件系统的名称显示。</li>
<li><code>/dev/mmcblk1p2</code>：要格式化的设备或分区。</li>
</ul>
<p>这里我们的文件系统不支持mkfs.ext4格式，但是可以使用它的孪生兄弟“mke2fs”，指令如下：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 三、磁盘挂载</h2>
<h3> 1.创建挂载点</h3>
<p>首先，您需要选择一个目录作为挂载点。可以使用mkdir命令创建一个空目录作为挂载点，例如：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 2.执行挂载命令</h3>
<p>使用mount命令将文件系统挂载到指定的挂载点上，例如：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用“df”指令查看是否挂载成功，命令如下：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>很明显已经<code>/dev/mmcblk1p1</code>分区已经成功挂载到<code>/mnt/boot</code>目录下。</p>
<h3> 3.访问文件系统</h3>
<p>现在，可以通过挂载点来访问和操作文件系统中的文件和目录。</p>
<p>例如，您可以使用cd命令进入挂载点，并使用其他文件操作命令进行文件的读取、写入等操作：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后掉电重启开发板，再次查看<code>/mnt/boot</code>下是否有test.txt文件：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>很明显是没有test.txt文件，磁盘的<code>/dev/mmcblk1p1</code>分区未进行挂载到<code>/mnt/boot</code>目录下，因此在<code>/mnt/boot</code>下是看不到test.txt文件的。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>test.txt文件是保存在磁盘的<code>/dev/mmcblk1p1</code>分区，掉电后需要手动挂载到<code>/mnt/boot</code>该目录下，才能查看到test.txt文件，如下：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另一个分区挂载如下：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 四、开机自动挂载</h2>
<h3> 1.设备路径挂载</h3>
<p>如果希望在系统启动时自动挂载分区，可以编辑<code>/etc/fstab</code>文件并添加相应的条目。例如：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重新启动开发板，使用<code>df</code>命令查看是否自动挂载</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 2.UUID挂载</h3>
<p>另一种挂载方法，这里在教大家使用UUID来进行自动挂载，如下：</p>
<p>获取分区的UUID：使用以下命令各分区的UUID：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编辑<code>/etc/fstab</code>文件并添加相应的条目。例如：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>保存后，重启开发板，成功自动挂载，如下：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在挂载文件系统时，您可以使用设备路径（如 <code>/dev/mmcblk1p1</code>）或文件系统的UUID来标识要挂载的分区。这两种方法各有一些区别和好处：</p>
<h4> 1.设备路径 (/dev/mmcblk1p1)</h4>
<ul>
<li>标识分区的路径：使用设备路径是一种直接而简单的方法来标识要挂载的分区。它基于设备文件的物理路径，可以明确地指定要挂载的分区。例如，<code>/dev/mmcblk1p1</code> 表示第二个MMC类型的磁盘的第一个分区。</li>
<li>相对容易记忆：设备路径通常较短且易于记忆，因为它们直接与设备文件的名称相关。</li>
</ul>
<p>但是，设备路径可能会受到设备插入和拔出的影响。如果您的系统中存在多个磁盘或设备连接状态发生变化，设备路径可能会改变。</p>
<h4> 2.文件系统UUID</h4>
<ul>
<li>标识分区的唯一性：每个文件系统都有一个唯一的UUID（通用唯一标识符），用于识别分区。UUID是在创建文件系统时生成的，并且是全局唯一的。它不受设备连接状态的影响，因此即使设备路径发生变化，UUID仍将保持不变。</li>
<li>稳定性和持久性：使用UUID来挂载分区可以提供更稳定和持久的挂载方式，因为即使重新启动系统或更改设备连接状态，UUID标识的分区仍然可以准确地被找到。</li>
<li>更适合自动化和脚本：使用UUID可以更方便地进行自动化操作和脚本编写，因为UUID提供了一个固定的标识符来唯一标识特定的分区。</li>
</ul>
<p>总的来说，使用设备路径或UUID进行挂载都是可行的方法，具体取决于您的需求和使用场景。如果您的系统中没有频繁插拔设备并且不涉及自动化操作，使用设备路径可能更加简单和直接。而如果您需要更稳定和持久的挂载方式，以及更适合自动化操作，使用UUID则更为可靠和推荐。</p>
]]></content:encoded>
    </item>
    <item>
      <title>美化Centos的终端</title>
      <link>https://haijunit.top/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/06.CentOS/23.%E7%BE%8E%E5%8C%96Centos%E7%9A%84%E7%BB%88%E7%AB%AF.html</link>
      <guid>https://haijunit.top/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/06.CentOS/23.%E7%BE%8E%E5%8C%96Centos%E7%9A%84%E7%BB%88%E7%AB%AF.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">美化Centos的终端</source>
      <description>Centos的终端用起来太单一了。想着换成zsh终端，并配合oh my zsh的主题。从而打造不一样的终端吧。</description>
      <category>编程技巧</category>
      <category>CentOS</category>
      <pubDate>Sun, 18 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>Centos的终端用起来太单一了。想着换成zsh终端，并配合oh my zsh的主题。从而打造不一样的终端吧。</p>
<!-- more -->
<h2> 安装ZSH</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>编译完成安装之后，需要将zsh加入<code>/etc/shells</code></p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 安装oh-my-zsh</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 配置oh-my-zsh</h2>
<blockquote>
<p>安装完成后，我们需要对中文显示等进行简单的设计。</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 安装插件</h2>
<blockquote>
<p>zsh有很多好玩的插件。安装的插件默认在~/.oh-my-zsh/custom/plugins目录。如我们常用的语法高亮，历史命令提示，和路径补全等。</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> zsh主题</h2>
<p>oh-my-zsh自带很多主题，全部放在 <code>~/.oh-my-zsh/themes</code> 目录下，可以自己随意更换。更换主题只需要更换<code>.zshr</code>c文件中的 <code>ZSH_THEME="主题名称"</code>并 <code>source ~/.zshrc</code>就可以。默认的主题是 <code>robbyrussel</code>我们把主题换成：<code>agnoster</code></p>
]]></content:encoded>
    </item>
    <item>
      <title>Jar瘦身实例</title>
      <link>https://haijunit.top/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/20.Java/50.Jar%E7%98%A6%E8%BA%AB%E5%AE%9E%E4%BE%8B.html</link>
      <guid>https://haijunit.top/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/20.Java/50.Jar%E7%98%A6%E8%BA%AB%E5%AE%9E%E4%BE%8B.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">Jar瘦身实例</source>
      <description>1、依赖拆分配置 只需要在项目pom.xml文件中添加下面的配置： &amp;lt;build&amp;gt; &amp;lt;plugins&amp;gt; &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-maven-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;executable&amp;gt;true&amp;lt;/executable&amp;gt; &amp;lt;layout&amp;gt;ZIP&amp;lt;/layout&amp;gt; &amp;lt;!-- 这里是填写需要包含进去的jar， 必须项目中的某些模块，会经常变动，那么就应该将其坐标写进来 如果没有则nothing ，表示不打包依赖 --&amp;gt; &amp;lt;includes&amp;gt; &amp;lt;include&amp;gt; &amp;lt;groupId&amp;gt;nothing&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;nothing&amp;lt;/artifactId&amp;gt; &amp;lt;/include&amp;gt; &amp;lt;!-- 除了第三方依赖，会将子模块的引用加进来 --&amp;gt; &amp;lt;!-- &amp;lt;include&amp;gt; &amp;lt;groupId&amp;gt;com.example&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;example-util&amp;lt;/artifactId&amp;gt; &amp;lt;/include&amp;gt; --&amp;gt; &amp;lt;/includes&amp;gt; &amp;lt;/configuration&amp;gt; &amp;lt;/plugin&amp;gt; &amp;lt;!--拷贝依赖到jar外面的lib目录--&amp;gt; &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-dependency-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;executions&amp;gt; &amp;lt;execution&amp;gt; &amp;lt;id&amp;gt;copy&amp;lt;/id&amp;gt; &amp;lt;phase&amp;gt;package&amp;lt;/phase&amp;gt; &amp;lt;goals&amp;gt; &amp;lt;goal&amp;gt;copy-dependencies&amp;lt;/goal&amp;gt; &amp;lt;/goals&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;!--指定的依赖路径--&amp;gt; &amp;lt;outputDirectory&amp;gt;${project.build.directory}/lib&amp;lt;/outputDirectory&amp;gt; &amp;lt;/configuration&amp;gt; &amp;lt;/execution&amp;gt; &amp;lt;/executions&amp;gt; &amp;lt;/plugin&amp;gt; &amp;lt;/plugins&amp;gt; &amp;lt;/build&amp;gt;</description>
      <category>编程技巧</category>
      <category>Java</category>
      <pubDate>Sun, 18 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 1、依赖拆分配置</h2>
<p>只需要在项目pom.xml文件中添加下面的配置：</p>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>虽然这样打包，三方依赖的大小并没有任何的改变，但有个很大的不同就是我们自己的<code>业务包</code>和<code>依赖包</code>分开了；</p>
<p>在不改变依赖的情况下，也就<code>只需要第一次上传lib目录到服务器</code>，后续业务的调整、bug修复，在没调整依赖的情况下，就只需要上传更新小小的业务包即可；</p>
<h2> 2、总结</h2>
<p>使用瘦身部署，你的业务包确实小了 方便每次的迭代更新，不用每次都上传一个很大的 jar 包，从而节省部署时间。</p>
<p>但这种方式也有一个弊端就是增加了Jar包的管理成本，多人协调开发，构建的时候，还需要专门去关注是否有人更新依赖。</p>
]]></content:encoded>
    </item>
    <item>
      <title>Netty介绍</title>
      <link>https://haijunit.top/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/20.Java/60.Netty%E4%BB%8B%E7%BB%8D.html</link>
      <guid>https://haijunit.top/blog/30.%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/20.Java/60.Netty%E4%BB%8B%E7%BB%8D.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">Netty介绍</source>
      <description>一、Netty 简介 Netty 是由 Jboss 提供的一个 Java 开源框架，现为 Github 上的独立项目。Netty 提供异步的、时间驱动的网络应用程序框架和工具，用以快速开发高性能、高可靠性的网络服务器和客户端程序。 也就是说，Netty 是一个基于 NIO 的客户、服务器端编程框架，使用 Netty 可以确保你快速和简单的开发出一个网络应用，例如实现了某种协议的客户、服务端应用。Netty 相当于简化和流线化了网络应用的编程开发过程，例如：基于 TCP 和 UDP 的 socket 服务开发。 二、Hello Netty</description>
      <category>编程技巧</category>
      <category>Java</category>
      <pubDate>Sun, 18 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 一、Netty 简介</h2>
<p>Netty 是由 Jboss 提供的一个 Java 开源框架，现为 Github 上的独立项目。Netty 提供异步的、时间驱动的网络应用程序框架和工具，用以快速开发高性能、高可靠性的网络服务器和客户端程序。</p>
<p>也就是说，Netty 是一个基于 NIO 的客户、服务器端编程框架，使用 Netty 可以确保你快速和简单的开发出一个网络应用，例如实现了某种协议的客户、服务端应用。Netty 相当于简化和流线化了网络应用的编程开发过程，例如：基于 TCP 和 UDP 的 socket 服务开发。</p>
<h2> 二、Hello Netty</h2>
<p>接下来我们就开始从一个简单地 demo，进入 netty 的世界吧。</p>
<p>该 demo 实现了创建一个 Netty 服务器和一个 netty 客户端，服务端接收到客户端请求的时候便打印相应的信息。</p>
<h3> 1、NettyServer</h3>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 2、NettyServerHandler</h3>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 3、NettyClient</h3>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 4、NettyClientHandler</h3>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 三、总结</h2>
<p>使用 Netty 大大简化了我们的开发工作量，并将原生 JDK 复杂的 Selector、ByteBuffer、ServerSocketChannel、SocketChannel 等组件进行封装。使我们开发者不需要关系具体底层的运行原理和机制。进行模板化的开发。提高开发的效率、以及容错率。</p>
]]></content:encoded>
    </item>
    <item>
      <title>自建yum仓库</title>
      <link>https://haijunit.top/blog/80.%E8%BF%90%E7%BB%B4%E6%8A%80%E5%B7%A7/10.%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7/20.%E8%87%AA%E5%BB%BAyum%E4%BB%93%E5%BA%93.html</link>
      <guid>https://haijunit.top/blog/80.%E8%BF%90%E7%BB%B4%E6%8A%80%E5%B7%A7/10.%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7/20.%E8%87%AA%E5%BB%BAyum%E4%BB%93%E5%BA%93.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">自建yum仓库</source>
      <description>安装 yum install -y epel-release ## createrepo和httpd用于创建内网仓库和提供http协议访问 yum install -y createrepo httpd ## 创建本地 YUM 仓库目录 我定义的是repos 你也可以改成其他名称 mkdir -p /var/www/html/repos/{base,extras,updates} ## 上传centos镜像到服务器并挂载然后copy所有软件包到我刚才创建的仓库目录里 mount /dev/cdrom /mnt # 这个是vmware虚拟机时候用 下边是镜像时候用 # 挂磁盘镜像到/mnt的话执行 mount -o loop CentOS-7-x86_64-DVD-1804.iso /mnt cp -R /mnt/Packages/* /var/www/html/repos/base umount /mnt ## 创建本地 YUM 仓库 建立元数据 createrepo /var/www/html/repos/base createrepo /var/www/html/repos/extras createrepo /var/www/html/repos/updates ## 修改http配置访问yum仓库 vi /etc/httpd/conf.d/repos.conf Alias /repos &amp;quot;/var/www/html/repos&amp;quot; &amp;lt;Directory &amp;quot;/var/www/html/repos&amp;quot;&amp;gt; Options Indexes FollowSymLinks Require all granted &amp;lt;/Directory&amp;gt; ## 启动并开启 httpd 服务 systemctl start httpd systemctl enable httpd</description>
      <category>运维技巧</category>
      <category>运维工具</category>
      <pubDate>Sun, 18 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 安装</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 配置yum仓库 用yum下载软件的目录</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 在内网其他服务器上配置 YUM 仓库 我的IP需改成你的</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Alist</title>
      <link>https://haijunit.top/blog/90.%E5%AE%9E%E6%88%98%E9%A1%B9%E7%9B%AE/06.%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/10.Alist.html</link>
      <guid>https://haijunit.top/blog/90.%E5%AE%9E%E6%88%98%E9%A1%B9%E7%9B%AE/06.%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/10.Alist.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">Alist</source>
      <description>安装 alist的安装很简单。官方提供了多种安装方式，有一键安装、docker安装、手动安装等多种安装方式供你选择。 文档：https://alist.nn.ci/zh/ ## 一键安装 curl -fsSL &amp;quot;https://alist.nn.ci/v3.sh&amp;quot; | bash -s install</description>
      <category>实战项目</category>
      <category>文件存储</category>
      <pubDate>Sun, 18 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 安装</h2>
<p>alist的安装很简单。官方提供了多种安装方式，有一键安装、docker安装、手动安装等多种安装方式供你选择。</p>
<ul>
<li>文档：<a href="https://alist.nn.ci/zh/" target="_blank" rel="noopener noreferrer">https://alist.nn.ci/zh/</a></li>
</ul>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>kubernates中的DevOps平台</title>
      <link>https://haijunit.top/blog/61.%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/61.kubernetes%E5%BB%BA%E8%AE%BE/16.kubernates%E4%B8%AD%E7%9A%84DevOps%E5%B9%B3%E5%8F%B0.html</link>
      <guid>https://haijunit.top/blog/61.%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/61.kubernetes%E5%BB%BA%E8%AE%BE/16.kubernates%E4%B8%AD%E7%9A%84DevOps%E5%B9%B3%E5%8F%B0.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">kubernates中的DevOps平台</source>
      <description>Harbor ## https://artifacthub.io/packages/helm/harbor/harbor cat &amp;gt; values.harbor.yaml &amp;lt;&amp;lt; EOF expose: type: ingress ingress: hosts: core: docker.devops.kk notary: harbor.devops.kk externalURL: https://docker.devops.kk harborAdminPassword: Harbor12345 EOF helm repo add harbor https://helm.goharbor.io helm repo update helm install my-release harbor/harbor helm upgrade harbor harbor/harbor --install --namespace devops --create-namespace --values values.harbor.yaml --version 1.11.2</description>
      <category>容器技术</category>
      <category>kubernetes建设</category>
      <pubDate>Tue, 06 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<h2> Harbor</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> GitLab</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> Nexus</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> SonarQube</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>减少Docker镜像大小</title>
      <link>https://haijunit.top/blog/61.%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/10.Docker/23.%E5%87%8F%E5%B0%91Docker%E9%95%9C%E5%83%8F%E5%A4%A7%E5%B0%8F.html</link>
      <guid>https://haijunit.top/blog/61.%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/10.Docker/23.%E5%87%8F%E5%B0%91Docker%E9%95%9C%E5%83%8F%E5%A4%A7%E5%B0%8F.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">减少Docker镜像大小</source>
      <description>为什么要减小 docker 镜像大小？ 安装不必要的软件包会增加攻击面，从而增加安全风险。 镜像传输需要更多时间。 部署大镜像需要更多时间。 1：最小化镜像层 我们可以减少 Dockerfile 中的层数。 dockerfile 中的每个 FROM、RUN、COPY 命令都会创建一个单独的层，并增加镜像的整体大小和构建时间。 要减小 docker镜像大小，请在单个RUN或 COPY指令中执行多个命令来最小化 Dockerfile 中的层数。</description>
      <category>容器技术</category>
      <category>Docker</category>
      <pubDate>Fri, 02 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

<h2> 为什么要减小 docker 镜像大小？</h2>
<ol>
<li>安装不必要的软件包会增加攻击面，从而增加安全风险。</li>
<li>镜像传输需要更多时间。</li>
<li>部署大镜像需要更多时间。</li>
</ol>
<h2> 1：最小化镜像层</h2>
<p>我们可以减少 <code>Dockerfile</code> 中的层数。</p>
<p><code>dockerfile</code> 中的每个 FROM、RUN、COPY 命令都会创建一个单独的层，并增加镜像的整体大小和构建时间。</p>
<p>要减小 <code>docker</code>镜像大小，请在单个<code>RUN</code>或 <code>COPY</code>指令中执行多个命令来最小化 <code>Dockerfile</code> 中的层数。</p>
<div class="language-docker line-numbers-mode" data-ext="docker"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 2：使用 <code>Docker Squash</code>减小镜像大小</h2>
<p>Docker 在构建镜像时创建了很多层。压缩有助于在逻辑层中组织镜像。我们可以控制镜像的结构，而不是让镜像具有多个不必要的层。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 3：使用较小的基础镜像</h2>
<p>减小 docker 镜像大小最明显的方法是使用较小的基础镜像。</p>
<p>如果希望为 python 应用程序创建镜像，请考虑使用 <code>python:3.9-slim</code> 镜像而不是 <code>python:3.9</code>。</p>
<p><code>python:3.9</code> 的大小约为 1.3 GB，而 <code>python:3.9-slim</code> 的大小仅为 1 GB 左右。</p>
<p>您可以使用 alpine 版本进一步减少镜像。alpine 镜像是专门为作为容器运行而设计的，而且体积非常小。python:3.9-alpine 镜像只有 49 MB。</p>
<h2> 4：使用多阶段构建来减小大小</h2>
<p>为了显着减小大小，我们可以使用 docker 多阶段构建的概念。这里我们使用不同的 <code>images</code>/<code>Dockerfile</code> 来构建和打包应用代码。</p>
<p>它将 Dockerfile 分成多个阶段，并将所需的工件从一个阶段传递到另一个阶段，然后在最后一个阶段交付缩小镜像大小的最终镜像。它显着减小镜像尺寸。</p>
<div class="language-docker line-numbers-mode" data-ext="docker"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里我们使用两个阶段从 docker 文件创建镜像。在 Stage-1 中，我们复制代码并构建它，在 stage-2 中，我们使用在 stage-1 中构建的代码在 Nginx 中运行。</p>
<h2> 5：<code>apt</code>安装中使用 <code>--no-install-recommends</code> 标志</h2>
<p>当我们运行 apt install 命令来安装某些包时，它会安装一些不需要的推荐包。使用 <code>--no-install-recommends</code> 标志可以显着减小镜像大小。</p>
<div class="language-docker line-numbers-mode" data-ext="docker"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>您可以在 <code>apk add</code> 命令中添加 <code>--no-cache</code></p>
<h2> 6：在 <code>apt install</code> 命令后添加<code>rm -rf /var/lib/apt/lists/*</code></h2>
<p>我们可以在 apt install 之后添加这个命令来减少 docker 镜像的大小。</p>
<div class="language-docker line-numbers-mode" data-ext="docker"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 7：使用 <code>.dockerignore</code>文件</h2>
<p>如果您不想将某些文件复制到 docker 镜像，那么使用 <code>.dockerignore</code> 文件可以为您节省一些空间。</p>
<p>在构建上下文中有一些隐藏的文件/文件夹，您可以使用 ADD 或 COPY 命令（如 .git 等）将其传输到镜像。包含一个 .dockerignore 文件以减小 docker 镜像大小是一个很好的做法。</p>
<p><code>.dockerignore</code> 文件示例。</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 8：在 RUN 之后放置 COPY</h2>
<p>在某些情况下，您对代码进行了细微的更改，并且需要反复从 <code>dockerfile</code> 构建镜像。<br>
在这种情况下，将 COPY 命令放在 RUN 命令之后将有助于减小镜像大小，因为在这种情况下 docker 将能够更好地使用缓存功能。</p>
<p>它将为安装了依赖项的镜像创建缓存，每次更改代码时，docker 都会使用该缓存并创建镜像。它还将减少 docker 构建时间。</p>
<div class="language-docker line-numbers-mode" data-ext="docker"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上述情况下，dockerfile-1 将能够比 dockerfile-2 表现得更好。另外，搜索公众号后端架构师后台回复“架构整洁”，获取一份惊喜礼包。</p>
<h2> 9：安装后删除软件包</h2>
<p>如果您需要在 docker 镜像中安装一些包，并且您是从外部下载它们，那么最好在安装后删除这些包。</p>
<p>例如，如果您希望从 zip 文件安装 AWS CLI V2，那么在成功安装后请记住也删除该 zip 文件。</p>
<div class="language-docker line-numbers-mode" data-ext="docker"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 10：使用 <code>Docker</code>镜像缩容工具</h2>
<p>有几个<strong>dockerfile 优化工具</strong>可以帮助你减少 docker 镜像的大小。下面列出了其中一些。</p>
<ol>
<li>
<p><code>Dive</code>：Dive 是一个开源工具，用于探索 Docker 镜像及其层内容，然后发现缩小 Docker/OCI 镜像大小的方法。</p>
<blockquote>
<p><a href="https://github.com/wagoodman/dive" target="_blank" rel="noopener noreferrer">https://github.com/wagoodman/dive</a></p>
</blockquote>
</li>
<li>
<p><code>fromlatest.io</code>：此工具将检查您的 Dockerfile 并检查可以执行的更多步骤以减小镜像大小。</p>
<blockquote>
<p><a href="https://www.fromlatest.io/" target="_blank" rel="noopener noreferrer">https://www.fromlatest.io/</a></p>
</blockquote>
</li>
<li>
<p><code>Docker Slim</code>：它让你的容器更好、更小、更安全。您可以使用dockerslim 来最小化容器镜像。</p>
</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>Argo CD</title>
      <link>https://haijunit.top/blog/61.%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/62.kubernetes%E5%AE%9E%E6%88%98/15.Argo%20CD.html</link>
      <guid>https://haijunit.top/blog/61.%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/62.kubernetes%E5%AE%9E%E6%88%98/15.Argo%20CD.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">Argo CD</source>
      <description>https://mp.weixin.qq.com/s/SmH663CN5cBDe86-WToAXg</description>
      <category>容器技术</category>
      <category>kubernetes实战</category>
      <pubDate>Fri, 02 Jun 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<blockquote>
<p><a href="https://mp.weixin.qq.com/s/SmH663CN5cBDe86-WToAXg" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/SmH663CN5cBDe86-WToAXg</a></p>
</blockquote>
<!-- more -->

<h2> 部署 ArgoCD</h2>
<h3> yaml部署</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> helm部署</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 查看运行</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 安装 Argo CD CLI</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>JDK 自签证书</title>
      <link>https://haijunit.top/blog/80.%E8%BF%90%E7%BB%B4%E6%8A%80%E5%B7%A7/21.%E8%AF%81%E4%B9%A6%E8%AE%A4%E8%AF%81/20.%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6.html</link>
      <guid>https://haijunit.top/blog/80.%E8%BF%90%E7%BB%B4%E6%8A%80%E5%B7%A7/21.%E8%AF%81%E4%B9%A6%E8%AE%A4%E8%AF%81/20.%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">JDK 自签证书</source>
      <description>[[toc]] Certbot keytool可视化工具 官方网址为 https://keystore-explorer.org/index.html (https://keystore-explorer.org/index.html) 证书格式 .DER或.CER文件： 这样的证书文件是二进制格式，只含有证书信息，不包含私钥。; .CRT文件： 这样...</description>
      <category>运维技巧</category>
      <category>证书认证</category>
      <pubDate>Thu, 08 Dec 2022 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

<h2> Certbot</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> keytool可视化工具</h2>
<blockquote>
<p><a href="https://keystore-explorer.org/index.html" target="_blank" rel="noopener noreferrer">官方网址为 https://keystore-explorer.org/index.html</a></p>
</blockquote>
<h2> 证书格式</h2>
<ul>
<li><code>*.DER或*.CER文件</code>： 这样的证书文件是二进制格式，只含有证书信息，不包含私钥。</li>
<li><code>*.CRT文件</code>： 这样的证书文件可以是二进制格式，也可以是文本格式，一般均为文本格式，功能与 <em>.DER及</em>.CER证书文件相同。</li>
<li><code>*.PEM文件</code>： 这样的证书文件一般是文本格式，可以存放证书或私钥，或者两者都包含。 <em>.PEM 文件如果只包含私钥，一般用</em>.KEY文件代替。</li>
<li><code>*.PFX或*.P12文件</code>： 这样的证书文件是二进制格式，同时包含证书和私钥，且一般有密码保护。可以使用记事本直接打开。</li>
</ul>
<h2> 密钥库文件格式【Keystore】</h2>
<h3> keytool 命令</h3>
<p>keytool</p>
<ul>
<li><code>- genkey</code></li>
<li><code>- alias tomcat</code> (别名)</li>
<li><code>- keypass 123456</code> (别名密码)</li>
<li><code>- keyalg RSA</code> (生证书的算法名称，RSA是一种非对称加密算法)</li>
<li><code>- keysize 2048</code> (密钥长度,证书大小)</li>
<li><code>- validity 365</code> (证书有效期，天单位)</li>
<li><code>- keystore ./tomcat.keystore</code> (指定生成证书的位置和证书名称)</li>
<li><code>- storepass 123456</code> (获取keystore信息的密码)</li>
<li><code>- storetype PKCS12</code> (指定密钥仓库类型)</li>
</ul>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> keytool可视化工具</h3>
<blockquote>
<p><a href="https://keystore-explorer.org/index.html" target="_blank" rel="noopener noreferrer">官方网址为 https://keystore-explorer.org/index.html</a></p>
</blockquote>
<h3> keytool 命令</h3>
<p>keytool</p>
<ul>
<li><code>- genkey</code></li>
<li><code>- alias tomcat</code> (别名)</li>
<li><code>- keypass 123456</code> (别名密码)</li>
<li><code>- keyalg RSA</code> (生证书的算法名称，RSA是一种非对称加密算法)</li>
<li><code>- keysize 2048</code> (密钥长度,证书大小)</li>
<li><code>- validity 365</code> (证书有效期，天单位)</li>
<li><code>- keystore ./tomcat.keystore</code> (指定生成证书的位置和证书名称)</li>
<li><code>- storepass 123456</code> (获取keystore信息的密码)</li>
<li><code>- storetype PKCS12</code> (指定密钥仓库类型)</li>
</ul>
<h2> 证书格式</h2>
<ul>
<li><code>*.der文件</code>或<code>*.cer文件</code>： 这样的证书文件是二进制格式，只含有证书信息，不包含私钥。</li>
<li><code>*.crt文件</code>： 这样的证书文件可以是二进制格式，也可以是文本格式，一般均为文本格式，功能与 <code>*.der</code>及<code>*.cer</code>证书文件相同。</li>
<li><code>*.pem文件</code>： 这样的证书文件一般是文本格式，可以存放证书或私钥，或者两者都包含。 <code>*.pem</code> 文件如果只包含私钥，一般用<code>*.key</code>文件代替。</li>
<li><code>*.pfx文件</code>或<code>*.p12文件</code>： 证书交换格式，是二进制格式，同时包含证书和私钥，用于交换传输，且一般有密码保护。</li>
</ul>
<p>自签名证书：用自己的私钥签发自己的公钥即主体信息生成的证书。<br>
证书签名：对证书固定值进行hash后用密钥对中的私钥对hash值加密</p>
<h2> keytool</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> openssl</h2>
<blockquote>
<p>OpenSSL官方文档: <a href="https://www.openssl.org/docs/manpages.html" target="_blank" rel="noopener noreferrer">https://www.openssl.org/docs/manpages.html</a></p>
</blockquote>
<h3> RSA</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> SM2</h3>
<blockquote>
<p>openssl版本低于<code>1.0.1</code>版本不支持国密算法, <code>Openssl1.1.1+</code>上版本的资源包，下载地址：<a href="https://github.com/openssl/openssl/releases" target="_blank" rel="noopener noreferrer">https://github.com/openssl/openssl/releases</a></p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 国密证书</h2>
<blockquote>
<p>GMSSL国密试验室网站生成: <a href="https://www.gmssl.cn/gmssl/index.jsp" target="_blank" rel="noopener noreferrer">https://www.gmssl.cn/gmssl/index.jsp</a></p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 1.背景</h2>
<h3> 1.2 证书内容格式 ( RSA为例 )</h3>
<h4> 1.2.1 <code>PKCS#1</code></h4>
<blockquote>
<p>只是一个 RSA 密钥，即只有PKCS#8 中的密钥对象部分，前面没有版本或算法标识符。</p>
</blockquote>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例：</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 1.2.2 <code>PKCS#8</code></h4>
<blockquote>
<p>补充了一些相关信息，不单单只是秘钥值。其实这里可以看到，开头的RSA字眼已经消失了，因为我们能从<a href="https://baike.baidu.com/item/%E5%AF%B9%E8%B1%A1%E6%A0%87%E8%AF%86%E7%AC%A6/21125614?fromtitle=OID&amp;fromid=2723970&amp;fr=aladdin" target="_blank" rel="noopener noreferrer">OID</a>中查看到（后方有图）。</p>
</blockquote>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例：</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 1.3 证书文件格式</h3>
<p><a href="https://blog.csdn.net/fengshenyun/article/details/124596279" target="_blank" rel="noopener noreferrer">参考：PEM 与 DER 格式详解</a></p>
<blockquote>
<p>PEM 与 DER是用于存储、传输密钥和证书的标准格式，两者紧密关联，可以互相转换。</p>
</blockquote>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 1.3.2 DER</h4>
<blockquote>
<p>类比上面的PKCS#1，Distinguished Encoding Rules，可分辩编码规则。</p>
</blockquote>
<p>DER格式文件后缀通常为 <code>.der</code> 和 <code>.cer</code>，后缀名并不会影响 DER 格式文件的解析。</p>
<h4> 1.3.1 PEM</h4>
<blockquote>
<p>类比上面的PKCS#8</p>
</blockquote>
<p>PEM格式文件后缀通常为<code>.pem</code>、<code>.cer</code>、<code>.crt</code>、<code>.key</code>，后缀名并不会影响 PEM 格式文件的解析。</p>
<h4> 1.3.3 PEM 转 DER</h4>
<ul>
<li>先将 PEM 文件里面首尾的 <code>----BEGIN xxx----</code> 和 <code>----END xxx----</code>两行去掉</li>
<li>再将内容合并为一行（去掉换行符<code>\r\n</code>）</li>
<li>接着将内容进行 Base64 解码</li>
</ul>
<blockquote>
<p>通过 openssl 命令转换如下：</p>
</blockquote>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 1.3.4 DER 转 PEM</h4>
<ul>
<li>先将 DER 二进制内容进行 Base64 编码</li>
<li>再按每行 64 个字节进行切分</li>
<li>最后在切分后的内容前后加上 <code>----BEGIN xxx----</code>和 <code>----END xxx----</code></li>
</ul>
<blockquote>
<p>通过 openssl 命令转换如下：</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 2.RSA</h2>
<h3> 2.1 私钥部分</h3>
<h4> 2.1.1 生成私钥：<code>PKCS#1</code></h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 2.1.2 私钥：<code>PKCS1</code> -&gt; <code>PKCS8</code></h4>
<blockquote>
<p>pem格式转der格式</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 2.1.3 私钥：PKCS8 -&gt; PKCS1</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 2.2 公钥部分</h3>
<h4> 2.2.1 导出公钥：从PKCS1私钥 导出PKCS8公钥</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 2.2.2 导出公钥：从PKCS8私钥 导出PKCS8公钥</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 2.2.3 公钥：<code>PKCS8</code> -&gt; <code>PKCS1</code></h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 2.2.4 公钥：<code>pkcs1</code> -&gt; <code>pkcs8</code></h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 2.3 扩展</h3>
<h4> 2.3.1 单行私钥值format成多行</h4>
<blockquote>
<p>有时候配置文件里写的是单行的配置信息，想format一下，一行一行敲回车太累了。</p>
</blockquote>
<ul>
<li>
<p>解析ASN1结构，判断是PKCS8还是PKCS1</p>
<blockquote>
<p>PKCS8带扩展信息，PKCS1不带。</p>
</blockquote>
</li>
<li>
<p>根据对应的结构，添加上头尾标识字符。</p>
<blockquote>
<p>比如这里添加上PKCS8的头尾信息。</p>
</blockquote>
</li>
</ul>
<p>[<img src="https://markdown-1258124344.cos.ap-guangzhou.myqcloud.com/ image/202210171724790.png" alt="image-20220831150413041" loading="lazy">](<a href="https://markdown-1258124344.cos.ap-guangzhou.myqcloud.com/" target="_blank" rel="noopener noreferrer">https://markdown-1258124344.cos.ap-guangzhou.myqcloud.com/</a> image/202210171724790.png)</p>
<ul>
<li>
<p>执行命令</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>[<img src="https://markdown-1258124344.cos.ap-guangzhou.myqcloud.com/ image/202210171724901.png" alt="image-20220831150856541" loading="lazy">](<a href="https://markdown-1258124344.cos.ap-guangzhou.myqcloud.com/" target="_blank" rel="noopener noreferrer">https://markdown-1258124344.cos.ap-guangzhou.myqcloud.com/</a> image/202210171724901.png)</p>
</li>
</ul>
<h2> 3.SM2</h2>
<blockquote>
<p>是否支持国密</p>
</blockquote>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 3.1 私钥部分</h3>
<h4> 3.1.1 生成私钥：EC格式</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 3.1.2 私钥：EC -&gt; PKCS1</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 3.1.3 私钥：EC -&gt;PKCS8</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 2.1.4 私钥：<code>PKCS1</code> -&gt; <code>PKCS8</code></h4>
<blockquote>
<p>从EC格式转成PKCS1/PKCS8格式后，其余的命令和RSA那里就是相通的了。</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 2.1.5 私钥：<code>PKCS8</code> -&gt; <code>PKCS1</code></h4>
<blockquote>
<p>注意openssl后面的形参从rsa变成了ec</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 3.2 公钥部分</h3>
<h4> 2.2.1 导出公钥：从EC私钥 导出PKCS8公钥</h4>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 2.2.2 导出公钥：从PKCS8私钥 导出PKCS8公钥</h4>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 2.2.3 公钥：PKCS8 -&gt; PKCS1</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 2.2.4 公钥：pkcs1 -&gt; pkcs8</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 3.3 签名</h3>
<h4> 3.3.1 PKCS1私钥进行签名</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 3.4 验签</h3>
<h4> 3.4.1 PKCS1公钥验证签名</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 4.数字证书</h2>
<h3> 4.1 查看证书序列号</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 4.2 获取证书中的公钥(PKCS8)</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>]]></content:encoded>
      <enclosure url="https://markdown-1258124344.cos.ap-guangzhou.myqcloud.com/%20image/202210171724790.png" type="image/png"/>
    </item>
    <item>
      <title>个人技术博客管理</title>
      <link>https://haijunit.top/blog/10.%E9%9A%8F%E7%AC%94%E8%AE%B0%E5%BD%95/10.%E7%94%9F%E6%B4%BB/10.%E4%B8%AA%E4%BA%BA%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2%E7%AE%A1%E7%90%86.html</link>
      <guid>https://haijunit.top/blog/10.%E9%9A%8F%E7%AC%94%E8%AE%B0%E5%BD%95/10.%E7%94%9F%E6%B4%BB/10.%E4%B8%AA%E4%BA%BA%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2%E7%AE%A1%E7%90%86.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">个人技术博客管理</source>
      <description>[[toc]] 前言 本篇和大家聊聊如何运营个人技术博客，定位下做技术写作的目的，有哪些交流平台和输出方式，如何把控内容质量，整理了一些写作技巧和自己常用的写作工具，最后分享下如何在有限的时间里合理安排保证写作与工作的平衡。 先说说自己，我开始正式进行技术写作的时间零零总总大概有2年多了，最早入门是在CSDN，后来以掘金为据点并在CSDN、博客园等技术...</description>
      <category>随笔记录</category>
      <category>生活</category>
      <pubDate>Tue, 09 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

<h2> 前言</h2>
<p>本篇和大家聊聊如何运营个人技术博客，定位下做技术写作的目的，有哪些交流平台和输出方式，如何把控内容质量，整理了一些写作技巧和自己常用的写作工具，最后分享下如何在有限的时间里合理安排保证写作与工作的平衡。</p>
<p>先说说自己，我开始正式进行技术写作的时间零零总总大概有2年多了，最早入门是在CSDN，后来以掘金为据点并在CSDN、博客园等技术社区保持内容同步，逐渐地也开始维护起个人技术公众号做同步更新，后面也开始把文章内容、项目demo代码更新到Github上做沉淀，与此同时，也在公司内部保持一定频率的内容更新和输出。</p>
<h2> 明确目的</h2>
<p>做任何事情必然有它的初衷和目的，技术写作这件事也是如此，我大致从个人理解拆分为<strong>个人学习成长、技术分享交流、影响力扩散、知识变现</strong>等来论述下。</p>
<h3> 1. 个人学习成长</h3>
<p>无论你的出发点是否是为了个人的技术成长进行技术博客写作的，它都一定会对你的技术积累成长有非常大的帮助，只要动手开始写、开始整理内容就是对知识的一种简易学习和复盘，具体的收益程度到底吸收了多少内容，具体收获几许便要看具体写作过程中的投入度。</p>
<p>比如有一些学生朋友、或是某个知识领域的初学者，可以通过类似<strong>笔记、学后总结</strong>等载体形式进行内容输出，而且未来当你使用到的时候还可以回过头来进行翻阅、复习，特别是在求职面试时派上一定用场。</p>
<p>对于一个技术人来说，技术博客可能是会影响自己一生的存在，可能你会觉得有些夸张，但我个人的经历在告诉我它正在潜移默化地影响着我。大致影响来自两个方面的积累：一是<strong>技术积累</strong>，二是<strong>能力积累</strong>。关于技术积累，虽然大家都应职于技术岗位，但相信绝大部分人在职业初期很长的一段经历中，更多的工作实践内容是技术使用，代表技术能力水平高低更多是依赖学习和项目经验累积，通过写技术博客除了简单的记录能力，还可以在过程中思考、反思、总结，前者是面向人的记忆弱点，后者是延展向人的能力突破，这也许是性价比最高的一种“学而时习之”的落地策略；关于能力积累，更多需要现实工作项目、问题来历练，需要和人面对面讲究技巧的沟通交流，最终让工作目标任务达成，通过业绩产出来体现自身价值和能力，写博客的过程就是非常好的交流、思考、与自己对话的机会。贯穿职业生涯受益终身的，我想是在工作中逐渐从青涩变得成熟，从无厘头、撞墙尝试的做事方式到科学客观、能够把控得游刃有余，让自己从一个“不太行”的小伙子变成“六边形战士”的大家伙。</p>
<h3> 2. 技术分享交流</h3>
<p>类似地，技术博客的另外一个强大潜在作用就是可以增加与同道中人的交流机会，这个交流是双向过程的。首先，你可以把自身的想法、知识传播并影响到其他人，此外，还可以收到新个体或团队的反馈。关于这个双向沟通交流我把它拆解如下：</p>
<table>
<thead>
<tr>
<th style="text-align:left">个人能力水平阶段</th>
<th style="text-align:left">正向输出到受众</th>
<th style="text-align:left">受众反馈到个人</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">入门级</td>
<td style="text-align:left">帮助同级伙伴，更多暴露的是不足</td>
<td style="text-align:left">正向鼓励，优化认知</td>
</tr>
<tr>
<td style="text-align:left">熟练级</td>
<td style="text-align:left">熟练应用和实战经验，丰富受众阅历</td>
<td style="text-align:left">印证实践成果</td>
</tr>
<tr>
<td style="text-align:left">专家级</td>
<td style="text-align:left">超层次认知输出，高屋建瓴式布道</td>
<td style="text-align:left">认知度、影响力</td>
</tr>
</tbody>
</table>
<p>既然是交流就一定会存在潜在的认知碰撞甚至冲突。</p>
<p>软件工程是知识与实践的结合产物，需要每一个人保持客观、科学、严谨的态度来面对知识原理的细枝末节，难免在成长的过程中要查漏补缺，而实践充满了条件、环境等个性化的差异性，我们只能通过大量的实操、教训总结出通用的、共情的经验，其余差异性部分还需要具体情况具体分析并进行具体实践才可以得到最佳答案或方向。</p>
<p>如果你认同上述交流的客观基础，那么面对分歧的时候至少要保证面向客观现实而非上升到人或者其他不相干的事情，让交流归源于本身，注意容易引起不必要交流性质变化的态度、语气、措词等，<em>Keep Love&amp;Peace</em>！</p>
<p>当参与者能够保持积极的交流目的、使用正向的方式后，我们就可以步入技术交流了。技术交流的收益是可以<strong>增加技术知识的积累</strong>以及<strong>实践经验的获得</strong>，说白了就是可以扩宽技术视野，通过别人的试错成本来获取能力借鉴和输入。</p>
<h3> 3. 影响力扩散</h3>
<p>当个人技术博客能够<strong>保质保量、保持一定频率</strong>进行持续输出后，相信也会吸引很多读者受众，逐渐积累起自己的读者圈或受众圈，这是一个双向选择的过程，大家一定会根据自己的阅读兴趣、求知目的来对焦到自己喜欢的技术博客或创作者，比如前端朋友一定很难去对一个后端博主提起太大兴趣，再如有的读者比较喜欢轻松戏虐的内容和画风，也有读者喜欢严谨的学院风格，等等，正所谓萝卜白菜各有所爱。</p>
<p>除了收获兴趣相投的“小迷弟”、“小迷妹”之外，个人技术博客也是很好的一张个人名牌，这里能体现一个人在某个或某些领域的认知、实践，代表一定的知识积累和水平。我们常说技术圈子不大，虽然大家工作在不同的公司，服务着不同的业务，但是技术语言是共通的，对于技术业务交流、寻找同道中人、求职等都会有一定帮助作用。</p>
<p>此外，技术博客也是很好的个人IP，这里能够洞察到一个人的成长过程甚至心路历程。上学的时候老师总说“字如其人”，同理，技术博客也蕴含着“文如其人”的味道，内容编排、文笔运用、画图排版等都体现着一个人的软素质和能力。代码写得贼溜说明你是一个合格的打工人啦，但我想再香的砖也比不上做一个搞砖模的人，搬砖是实实在在的体力活，设计砖模则是富有创造性的工作，是可以引领砖友们，让自己的思想、理念影响别人、影响团体乃至社会行业，甚至这个世界。这就是在做影响力扩散、思想输出、技术布道，而它的载体必然缺少不了文字载体，各大久负盛名、开发者云集的技术博客平台是非常不错的切入点和出发站，此外Github、公众号、个人技术网站也是很不错的选择，后面会展开聊到。</p>
<h3> 4. 知识变现</h3>
<p>提到知识变现，不得不提到那个“罗胖”，每年一次的“时间的朋友”可谓是最强最大的知识变现现场，我也曾是这场盛宴的追随者。知识变现首先第一位是要有可以变现的高质量、对口味的知识，且能够持续输出到受众，保持稳定的价值交换链路。</p>
<table>
<thead>
<tr>
<th style="text-align:left">知识的价值</th>
<th style="text-align:left">知识的使用价值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">受众需求</td>
<td style="text-align:left">求职 技术成长 兴趣爱好 技术消遣 ......</td>
</tr>
</tbody>
</table>
<p>先聊下知识商品的概念，如果把知识作为商品来看待的话，它必须要有商品的本质属性，那就是<strong>价值</strong>和<strong>使用价值</strong>，这两者的界定可能有些复杂，简单结合技术领域的知识变现来说就是，知识的价值来源比较单一，主要是看受众者的需求，这是用户上车的基本条件，如果根本不感兴趣或不需要那就等同废品，所以变现的第一步要寻找受众，营销学中深谙此道，因为受众错了等于对牛弹琴，一切都是徒劳的；而知识的使用价值大致可以分为<strong>求职、技术成长、兴趣爱好、技术消遣</strong>等，没有做过详尽的调查无从得知具体占比，相信求职、技术成长占了大头，兴趣爱好也会有一部分，小部分也会有朋友喜欢技术消遣，可能不会深入学习和参与但就是喜欢这种技术“奶头乐”，如同刷抖音、微博一样，愿意为之付费。而这也正好验证了商品属性关系，使用价值的存在实现了知识的价值，驱使人们情愿付费。</p>
<h2> 技术社区</h2>
<p>当前国内的技术社区可谓是百家争鸣，根据《稀土掘金2022中国开发者生态报告》调研结果公布的数据来看，<strong>Github、CSDN、B站、博客园、掘金</strong>等最受开发者青睐，这些统计数据里肯定会存在一些由于被访对象背景、个人喜好等导致的信息差，但是也足见技术平台的发展趋势和受欢迎程度。</p>
<p>对于想要分享更多技术内容、交流想法的朋友，可以多多在这些头部社区保持活跃，坚持更新文章，精力允许的情况下可以多多参与技术平台的活动，提高自己的出镜率多结识一些朋友和受众。</p>
<p>下面从一个所谓的创作者角度分享下我所维护和更新的社区现状、无软文的纯个人感受。</p>
<h3> 1.  掘金</h3>
<p>[1] 编辑器体验好，支持插件丰富，渲染样式可选多 [2] 平台活动多，运营支持互动氛围好 [3] 平台激励丰富，有流量扶持，对开发者友好 [4] 没有机器人虚假互动和广告，都是真人交流</p>
<h3> 2.  CSDN</h3>
<p>[1] 老牌技术平台，生态较为完整 [2] 编辑器体验好，插件丰富 [3] 用户流量大，容易形成风口效应</p>
<h3> 3.  博客园</h3>
<p>老牌技术平台，更加纯粹，活跃用户也很多</p>
<h3> 4. 知乎</h3>
<p>[1] 不管真的假的精英很多 [2] 容易找到趣味相投的受众和朋友 [3] 编辑器还不错 [4] 社区功能完善运营比较nice</p>
<h3> 5. 公众号</h3>
<p>最早一批搞公众号的吃饱了红利，培训班的软文赚到手麻。现在起家比较晚了，我个人权当是因为微信这个社交平台方便扩散和交流把公众号也进行了内容维护和同步更新。</p>
<h3> 6. Github</h3>
<p>[1] 支持Markdown语法编辑 [2] 能够维护项目代码，这是其他所有平台不具备的 [3] 没有花里胡哨的修饰，纯干货很多</p>
<h3> 7. B站</h3>
<p>[1] 干货多，受众多，流量很大 [2] 优质创作者多，氛围好，不存在“劣币驱逐良币” [3] PGC做的非常nice，对优质创作有激励</p>
<h3> 8. 个人技术网站</h3>
<p>很多人都喜欢做一些个人技术网站，打造个人流量IP，比较有名且能够持之以恒做下去的较少，大多半途而废，更多是一时起兴，为了特立独行的网页特效，面试加分等，个人推荐和崇拜的是阮一峰老师的坚持，内容质量、更新频率都很可观。</p>
<h3> 9. 公司内部社区</h3>
<p>一般在公司内部都会有技术社区，特别是大厂中的技术社区根本不亚于公共技术平台的内容质量，内容也更多地会涉及关于公司业务的细枝末节和实践经验，对于个人来说会有比较好的针对性成长，容易找到良师益友，此外内部分享也是很好的个人影响力输出平台。</p>
<h2> 运营方式</h2>
<h3> 丰富你的内容</h3>
<p>内容质量是技术博客运营的根本，建议大家永葆技术初心，能够保持 <strong>“客观、严谨、真诚、开放、分享精神”</strong> ，下面从几个方面展开聊聊。</p>
<ul>
<li><strong>「正确内容取材」</strong><br>
  可能大家也都发现了，现在技术平台的受众越来越喜欢参与匿名社交那套玩意了，高品质的技术干货鲜有问津，<strong>“年薪百万”、“小姐姐”、“擦边球”、“情感纠纷”、“字节面试题”</strong> 等夸夸其谈、颠覆客观的标题党、娱乐素材充斥着技术社区，更多的是为了博眼球赚流量，直击你的需求割掉受众一茬茬韭菜。<br>
  ❌ 如果你也想快速起量、极速吸粉、变现，可以找找合作平台、交流群，弄点面试题PDF、通用技术软文，给粉丝免费发点福利、红包，搞搞个人粉丝群；或者给自己贴贴标签，1年大厂技术总监、2年北京靠技术买房、3年进入福布斯富豪榜...<br>
  ✅ 罗马不是一天建成的。技术内容最起码是 <strong>“客观、严谨”</strong> 的，要对自己输出的内容有保证，尽管可能会因理解或知识差异出现差池也是向好的，而不是从根上就是烂的，踏实在你的学习、工作中取材找到分享和写作题材，输出对自己和他人有帮助的干货；技术交流是 <strong>“真诚、开放”</strong> 的，无论你是什么公司背景、学历水平都可以基于求知、成长而进行沟通和互动，个人观点的保护主义是不可取的，需要打开心扉，而且技术交流不是光为了一味追逐几个大咖的光环来碰瓷，打铁还要自身硬，踏实学习，一步一个台阶成长，爱惜自己的羽毛。</li>
<li><strong>「质量&gt;数量」</strong><br>
  很多朋友为了追平台活动或提高存在感，刻意刷文章数量，一篇文章都不足500字，内容也很不堪，真就是自我戏虐那样是“水文”。我觉得大可不必，你写文章的目的是什么呢？学习到了什么？为了活动小礼品费时费力折腾流水文是非常舍本逐末的行为，而且，技术成长需要沉淀，无法速成，欲速则不达。</li>
</ul>
<h3> 找到你的受众</h3>
<p>“对牛弹琴”是对双方都很尴尬和痛苦的事情，既浪费创作者的技术感情，也白搭受众的时间，下面和大家分享下如何找到自己的受众。</p>
<ul>
<li><strong>「写好个人介绍」</strong> 大多数博主都是昵称，无法体现真实信息，可以通过好好想想个人介绍内容，言简意赅的表达你的擅长、爱好、目的。让受众最快地通过最少的信息源来了解你。</li>
<li><strong>「确定自己擅长的领域」</strong><br>
  首先要确定自己擅长的技术领域，自己擅长的领域决定了自己的内容输出，这是自己作为一个技术内容生产者、分享者的价值存在。比如我是服务端开发，除了编程语言Golang/Java等，还有数据库、消息队列、大数据等中间件，以上都是我可以展开的技术点，此外我也有很多年项目实践经验，能够结合项目输出很多技术实战干货、问题分析、性能优化方面的内容，甚至也可以结合自身协作经历做一定程度的团队、项目管理内容分享和沉淀。</li>
<li><strong>「找到精准客户」</strong><br>
  营销哲学中最重要的一点是要<strong>找到精准客户</strong>。其实这里面还有一层意思是过滤掉不匹配的用户，比如我是服务端领域的博主，前端、客户端小伙伴想必不太对我的输出内容感兴趣，我们彼此是不match的，没必要费心“讨好”他们。<br>
  每个博主都会有自己的风格和行文思路，这也会很深刻地影响用户，比如有的受众偏爱欢快娱乐逗比型，有的喜欢严谨干货的学院风，有的可能都可以接受......如果你发现逗比型风格很容易吸粉且你也擅长，那么你尝试下也不是不可，如果你不擅长建议还是保持现状，老实地“讨好”和你对口味的受众，做自己擅长的事情一定没错。</li>
</ul>
<h3> 了解平台规则</h3>
<p>无论你是做个人网站还是在技术平台上做内容输出，都要熟悉对应规则，个人网站要学会seo优化以获取更多检索网站的爬虫支持，技术平台的话要熟悉或者能够洞察流量规则、推荐算法等。</p>
<ul>
<li><strong>「文章标题、摘要」</strong><br>
  一篇文章的标题、摘要会被作为网站内外检索的核心内容暴露被索引，比如Golang是一个高频搜索词，如果你的文章内容就是Golang，但是你的标题、摘要却只字不提，那么大概率你要和流量擦肩而过了。好的标题是文章运营的开始，摘要认真写不要空着或者用系统默认提取的。</li>
<li><strong>「坚持更新频率」</strong> 保持一定的更新频率会让你的出镜率增加，而且技术社区都会有博主的成长运营机制，这是一个先快后慢的成长曲线，而且越到后面“升级”越困难。比如掘金的掘金值，可以通过发文、被点赞、被收藏、被阅读等机制进行增长，越到后面流量扶持越大，L4之前是没有自动推荐能力的，L4之后发文自动推荐到首页流量会有一个扶持巨变。</li>
<li><strong>「多贴标签」</strong> 如果有能力尽量去参加一些活动来获得认证标识或标签，标签的作用既可以帮助用户识别你，也可以让自己被认可，比如某某公司背景、某某领域专家等，标签是通过关键词最快识别你的方式。</li>
</ul>
<h3> 提高曝光度</h3>
<p>如果你写了很多技术干货却没人阅读是不是非常沮丧？有没有一种怀才不遇的感觉，我在刚开始进行写博的时候曾经也感同身受，一方面的确没有积累内容吸引力不够排版也差质量不高，另一方面也缺少合理的运营方式来和受众互动。</p>
<ul>
<li><strong>「爆款文章」</strong><br>
  想让文章变成爆款有很多途径，可以碰瓷热点和主流话题，比如微博来个大瓜，直接硬靠上去输出一篇，还有找工作多赚钱是主流话题，面试题吊打面试官系列非常吸睛.....<br>
  <strong>写好一文胜过千文</strong>。这是我自己一直坚持的创作理念，我不太会刻意迎合受众，甚至会刻意躲开这些口水内容。真实做好自己能力范围内的，把技术学习、实践过程整理好、输出好，在自己有所成长的同时能够帮助到更多“道友”，这是一个Geek狭隘、偏见地表达对这个世界想法的单纯心态和起点。</li>
<li><strong>「专栏影响力」</strong><br>
  如果你很擅长某个领域或方向，建议你可以创建一个专栏进行输出，提前规划章节，好处是既可以让内容内聚吸引更多读者，还能避免自己的灵感源泉枯竭，一个好的专栏可以持续输出很多篇内容。</li>
<li><strong>「学会发传单」</strong><br>
  这里的“发传单”指的是学会宣传自己的文章内容，比如你可以用技术社区的分享动态推广内容，和别人积极互动，分享到朋友圈或技术交流群，还有公众号也可以多点击在看等推广到精选等，都是很好的推广方式，千万不要手懒，日积月累，点点滴滴遂成江海。<br>
  “友情互赞”的行为你支持吗？甚至在一些交流群成为日常行为，互助无可厚非，但是相比那些发自内心给你鼓励的一定是因为你的内容很精彩或符合Ta的品味，自然流露更真实和实在，其他都是浮云，千万不要迷失在资源互换之中，要清楚自己的内容质量是否经得住考验！</li>
</ul>
<h2> 写文技巧</h2>
<h3> 1. 选题来源</h3>
<p>写文章的第一步是要考虑我这次要写什么内容？选题作为第一步我的来源是什么呢？下面分享下几个我自己的选题来源。</p>
<ul>
<li><strong>「学习笔记」</strong><br>
  如果最近我对某个技术领域非常感兴趣会持续学习，看书、看视频、练习demo等等，这个过程我会先记录xmind拆分好内容，记录过程中的工具和资源链接，最后会进行整理并输出，这更像是学习笔记类的博文，因为输出是学习加工的再加工过程，对自己来说能够深化理解，未来也可以继续参考回顾，对于其他初学者来说也是一个很好的帮助文档和入门布道，因此这类博客尽量要详尽过程特别是相关资料链接、问题解决过程等。</li>
<li><strong>「实战干货」</strong><br>
  工作中总会有各种各样的实践积累，很多方法论都是通用的，经验具有一般普适的代表性，这部分对其他未经历的小伙伴来说是一次经验汲取之旅，对于有相同背景共识的同仁来说更容易产生共鸣和互动。这类选题需要项目机会和大量实战积累，有一定的门槛，但是对个人成长非常有帮助、有提升，对于自己的技术视野界限有突破帮助，看到自己的不足也能看到自己的下一阶段的方向，是我个人最喜欢的题材。</li>
<li><strong>「问题分析」</strong><br>
  通过我的观察来看，这部分题材特别受欢迎，原因是会有很多大家工作中共性的问题，大家遇到问题的第一件事想必都要百度、Google问题来找的答案，尤其爆款问题、一般性问题特别受到流量照顾。这部分题材话题比较离散，像快餐一样即食即消，主要是面向问题解决过程，沉淀度一般，如果有精力的话再剖析下原理会更受用和被欢迎。</li>
<li><strong>「面试求职」</strong><br>
  至少在我行笔至今还没开始做这部分的内容，这是技术社区的主流甚至顶流话题域。工作中无论我自己求职还是面试别人，我都进行了过程记录，也有一肚子个人心得体会和经验可以分享，后续或许我也会尝试涉猎这部分内容，让自己的技术博客内容更加丰富和多样。</li>
<li><strong>「项目管理」</strong><br>
  对于一个程序员来说，职业生涯简单来说是<strong>低头写代码，抬头做项目</strong>。一个个Feature贯穿了职业生涯的每一次排期，开始只是参与代码开发任务，中途独立承担设计和开发，最后就要Own项目协作更多伙伴达成更远大的目标。大部分初入职场的朋友都聚焦自己的技术能力和成长，对于这个影响自己职业生涯一生的项目管理却鲜有深入了解和学习，工作到今日的我可以很负责的和各位分享一个经验，学习项目管理的方法论对于工作中规避风险、问题有超出你想象的帮助，这部分内容我也有很多感悟，也是很不错的一个分享选题方向。</li>
<li><strong>「阶段总结」</strong><br>
  驱使我做这部分内容输出的是社区活动的参与。我觉得也很不错，既对自己做一次盘点和整理，也是很好的一次和受众展示自己真实生活、工作状态的机会，可以轻松愉快地聊一些技术外的话题。</li>
</ul>
<h3> 2. 标题的重要性</h3>
<ul>
<li><strong>「标题是脸面」</strong><br>
  如果说看人的第一眼是脸，看文章的第一眼就是标题了。其次是摘要，受众了解文字的三层次分别是<strong>标题、摘要、内容</strong>。最好的文章是，标题足够吸引力，摘要具备概括性，内容丰富有料。</li>
<li><strong>「标题党」</strong><br>
  使用好的标题不等于“标题党”，“标题党”的套路就是吸引你的眼球让你有动力了解内容，如果标题和内容形成呼应是最好的，如果标题和内容是虎头蛇尾就有点“狼来了”的味道，每个人都有公众信用账户，慎用不要过度透支。这也从侧面说明了标题的重要性，所以标题肯定需要一定程度的考究和粉饰，但不是造假、夸大、扯淡！</li>
</ul>
<h3> 3. 罗列内容大纲</h3>
<ul>
<li>
<p><strong>「骨架很重要」</strong><br>
  很多朋友写作容易变成流水账，说的就是想到啥写啥。我有写作三步骤分享给你：</p>
<ul>
<li><strong>想选题</strong><br>
  参考上面我说的选题。</li>
<li><strong>画框架</strong><br>
  选定后可以在Markdown标记好标题分层，能够写好一二级题目就可以，具体是否有三级或更细分层可以在过程中渐进明细。<br>
  如果你是写专栏，可以使用Xmind来罗列下章节，比如原理篇、实战篇、总结篇等，每大章节大体有哪些篇目。</li>
<li><strong>填内容</strong><br>
  <em>其实画框架结束后，你的文章已经写完了，不知道你是否能够认同或理解我说的观点</em>。做技术的你是否会有共鸣，搭框架做规划是最难的，编码反而是最简单的。写文章也是同理的，文章框架具备后，其余就是丰富和完善细节内容，这也是一种<strong>分而治之</strong>的思想，先把整体文章按大纲拆解，然后分而击破。</li>
</ul>
</li>
<li>
<p><strong>「脉络要串联」</strong><br>
  文章内容一定是一个相对分离但是又彼此联系、能够承上启下的整体，举例最简单的三段式，开篇背景、中篇细节、末篇总结，推荐大家阅读《金字塔原理》的讲解学习下，除了写文章，对于人际沟通和演讲表达也会非常有帮助。</p>
</li>
</ul>
<h3> 4. 排版要精致</h3>
<p><strong>字如其人，排版如斯</strong>。语文老师总提醒我们，你的作文内容好坏决定分数上限，字写得是否好看决定分数下限。很遗憾的是，技术平台上欣赏不到每位博主的真实书法，排版就成了很重要的替代，既体现写作基础能力的熟练度，也是个人软实力的体现，更是对受众的一种尊重。</p>
<h3> 5. 图文并茂</h3>
<p><strong>千字难抵一图</strong>。文字的陈述终究是略显“枯燥”的，特别是技术文章，好的绘图不光能减少很多口舌描述，还能更快、更完整的帮助阅读受众理解博主的表达意图和内容。而且图文搭配也会充盈整个文章，变得更加丰富，表达力更好，对于媒体传播也会友好一些。</p>
<h3> 6. 时刻充电</h3>
<p>最后想说的是，如果一直输出而不进行输入，那就是在无情地消耗自己，一定会有江郎才尽的那天，我也切实体会到有些博主真的是在靠“<strong>一招鲜，吃遍天</strong>”的套路在消耗自己，两三年一直在搞单一垂直技术，没有其他任何进步或扩展。不要放弃学习，时刻保持充电，让自己的技术内容和职业生涯有能力续航到更远的未来和目的地，才可以看到更多更美的风景呀。</p>
<h2> 写作工具</h2>
<h3> 编辑器</h3>
<p>目前流行的文本编写格式是<strong>Markdown</strong>，对于一个技术人来说，这和使用Git一样已经趋向是一个基本功，大部分技术平台都支持这种格式，它功能强大便于排版编辑，也能支持很多文本式图绘功能（具体要看技术平台对插件支持程度），而且也推荐使用<strong>Markdown</strong>来进行内容编写，它可以很轻松的转化成其他平台的格式内容，如微信公众号、富文本等。</p>
<h3> 绘图工具</h3>
<ul>
<li>ProcessOn 支持Xmind、流程图等，架构图、时序图等都可以有很好的素材支持，非常顺手，我是资深中毒会员。</li>
</ul>
<p><img src="https://mmbiz.qpic.cn/mmbiz_png/3fmcbamQEpGQAn5icNSfDXnfkKd2byuiansOlLnQCZnbCN2qBcNHMh1EgK3SX75tCscZ1kv59myHqabTX9c6MHEw/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" loading="lazy"><br>
  除了写作配图会用到，日常学习也会通过它来描绘，整理好文件夹目录进行归类，就变成非常好的日常记录素材和技术图片资源库，未来使用能快速检索。</p>
<figure><img src="https://mmbiz.qpic.cn/mmbiz_png/3fmcbamQEpGQAn5icNSfDXnfkKd2byuianeuFMtsQblpDr1IKQFVZmm3spXnuUCr5INjr1xnD66PZGaM2NQO4P4Q/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure>
<ul>
<li>Excalidraw 它支持手绘风格的画图，亲和力很好，不会像标准图绘那样生硬，有一定数量的资源库素材来支持，想象空间很大，我已经在很多系列文章中使用它，受众很喜欢，如下是之前一篇文章的绘图示例，文章实例OMS系统实战的三两事。</li>
</ul>
<figure><img src="https://mmbiz.qpic.cn/mmbiz_png/3fmcbamQEpGQAn5icNSfDXnfkKd2byuianRjicCWNZmUhib1lIs2tcsWr8Ra89uHfaicPrPISZiaI2CTDAwFdmvKK7sg/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure>
<h3> Banner</h3>
<ul>
<li>Canva可画 这是一个我偶然中搜到的网站，虽然是付费的，但是有很多免费模板和素材可以使用，对于简单的Banner运营需求基本可以满足，筛选关键字 <strong>“科技”、“蓝色”、“Banner”</strong> 即可，可以用作文章Baner或者公众号上进行投放。</li>
</ul>
<h3> 动图</h3>
<ul>
<li><strong>PPT</strong> Windows推荐PPT，可以配合islide使用更佳，也是未来工作汇报、分享的利器！</li>
<li><strong>Keynote</strong> MacOS推荐Keynote，B站有很多教程，多学多用就好，交互很丝滑。</li>
</ul>
<h3> 表情符号</h3>
<figure><img src="https://mmbiz.qpic.cn/mmbiz_png/3fmcbamQEpGQAn5icNSfDXnfkKd2byuianzdeBt5PHsFPe3HGasmZ8df5W7M1brj6uVYZ4OTrNVDlqIC06lEgT6w/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure>
<ul>
<li>markdown-emoji 这是我一直使用的表情符号库。Markdown支持符号展示，这些小符号就像是枯燥文章的小精灵🧚‍♀️，大家可以适当进行插入，让文章内容活跃起来，而且也可以较好的浓缩表达内容到标题上，也可以起到内容分类、分层等效果。</li>
</ul>
<h3> 视频工具</h3>
<figure><img src="https://mmbiz.qpic.cn/mmbiz_png/3fmcbamQEpGQAn5icNSfDXnfkKd2byuiannowo8jC0soSCBlibnMibPZdAgich84xnz8RpSbHUKia7CPDr3RvtYMsibfw/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure>
<p>我还没有涉猎这部分，还是小白，后续打算扩展下。视频大佬会有很多AE之类专业工具制作，这里推荐<strong>ViedoScrib</strong>来做入门，有一个我之前收藏的比较好的Up主，大家如果感兴趣可以参考Ta的使用，幼麟实验室。</p>
<h2> 时间管理</h2>
<ul>
<li><strong>「制定计划表」</strong></li>
</ul>
<p>一边上班一边坚持写作的确非常不易，开始最大的阻碍是容易忙碌中毅力不足，因为精力的确有限，凡事在于坚持，时间像海绵挤挤总会有的，不忙的时间多输出一些，忙碌的时候少输出一些但不要断开。</p>
<ul>
<li><strong>工作日</strong></li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:left">时间段</th>
<th style="text-align:left">适合做什么</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">上班路上</td>
<td style="text-align:left">固定时长的零碎时间段，适合做短小篇阅读，我一般会读短文或整本书中不需要敲代码实践、不需要特别记忆的知识内容</td>
</tr>
<tr>
<td style="text-align:left">午休时间</td>
<td style="text-align:left">固定时长的中长度时间段，一般吃完午饭到开工，能有1到1.5小时的时间，我一般会在公司提前预定会议室在安静环境下做小篇章写作输出</td>
</tr>
<tr>
<td style="text-align:left">下班路上</td>
<td style="text-align:left">固定时长的零碎时间段，同样适合短小篇阅读，和上班路上类似</td>
</tr>
<tr>
<td style="text-align:left">晚上居家</td>
<td style="text-align:left">相对较长的居家时间，是一天中最适合学习、写作的时间，可以做大块事情的时间，详细研究案例，扣问题细节等</td>
</tr>
</tbody>
</table>
<ul>
<li><strong>休息日</strong></li>
</ul>
<p>一般两天中会有一天的家庭活动日，出行游玩的话看情况会晚上学习、写作；如果不出行，休息日上午一般选择陪娃，下午娃学习、玩耍的时候我可能会睡觉休息，也可能会学习、写作下，晚上基本娃睡了都会继续学习和写作。</p>
<p>所以总结下来，要给自己的一年有计划和预期，比如我现在设定我要坚持周更，工作日的零散时间是在学习和内容的小篇幅准备，休息日做大篇幅的整理和最终的输出，保持这个节奏，即使日常工作忙碌了占用一些时间无法面面俱到落实到每一个时间段，总体方向也会大差不差的。</p>
<ul>
<li><strong>「不要断更」</strong></li>
</ul>
<p>在技术写作上要保持持之以恒的兴趣和动力的确不易，不要因为没有受众而沮丧，也不要因为工作忙碌时间而借口拖延，这些错误我都犯过。即使再忙也要找些内容来保持写作动作，哪怕你输出一篇工具使用，一个问题解决过程......一件事情坚持下来很不易，如果中间断开再重启会非常吃力。</p>
<p>学习或技术写作是自己的事情，对自己成长和积累有受益的事情需要自己来驱动，自己既是第一责任人也是第一执行人，既当裁判员又当运动员，需要一颗自我明镜之心，天道酬勤，未来的自己一定非常感谢过去狠狠努力、坚持不懈的自己。</p>
]]></content:encoded>
      <enclosure url="https://mmbiz.qpic.cn/mmbiz_png/3fmcbamQEpGQAn5icNSfDXnfkKd2byuiansOlLnQCZnbCN2qBcNHMh1EgK3SX75tCscZ1kv59myHqabTX9c6MHEw/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" type="image/"/>
    </item>
    <item>
      <title>线性表-栈</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/10.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/10.%E7%BA%BF%E6%80%A7%E8%A1%A8-%E6%A0%88.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/10.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/10.%E7%BA%BF%E6%80%A7%E8%A1%A8-%E6%A0%88.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">线性表-栈</source>
      <description>栈是是一种特殊的线性表，仅能够在栈顶操作数据，其特点是先进后出（后进先出）</description>
      <category>结构与算法</category>
      <category>数据结构</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>栈是是一种特殊的线性表，仅能够在栈顶操作数据，其特点是先进后出（后进先出）</p>
<!-- more -->

<h2> 栈的实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>基于链表实现栈</summary>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 栈的应用</h2>
<ol>
<li>
<p>合法括号</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>实例代码</summary>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
</li>
<li>
<p>逆波兰表达式（后缀表达式）</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>实例代码</summary>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>线性表-队列</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/10.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/11.%E7%BA%BF%E6%80%A7%E8%A1%A8-%E9%98%9F%E5%88%97.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/10.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/11.%E7%BA%BF%E6%80%A7%E8%A1%A8-%E9%98%9F%E5%88%97.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">线性表-队列</source>
      <description>队列是一种特殊的线性表，其特殊是值允许在队列的头部删除元素，在队列的尾部添加新的元素。</description>
      <category>结构与算法</category>
      <category>数据结构</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>队列是一种特殊的线性表，其特殊是值允许在队列的头部删除元素，在队列的尾部添加新的元素。</p>
<!-- more -->

<h2> 队列的实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>基于连边实现队列</summary>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 队列的应用</h2>
<ol>
<li>
<p>约瑟夫环</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><details class="hint-container details"><summary>实例代码</summary>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
</li>
<li>
<p>斐波那契数列</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><details class="hint-container details"><summary>详情</summary>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>线性表-链表</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/10.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/12.%E7%BA%BF%E6%80%A7%E8%A1%A8-%E9%93%BE%E8%A1%A8.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/10.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/12.%E7%BA%BF%E6%80%A7%E8%A1%A8-%E9%93%BE%E8%A1%A8.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">线性表-链表</source>
      <description>链表是物理存储单元上非连续的，非顺序的存储结构，由一系列节点组成。</description>
      <category>结构与算法</category>
      <category>数据结构</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>链表是物理存储单元上非连续的，非顺序的存储结构，由一系列节点组成。</p>
<!-- more -->

<h2> 单向链表的实现</h2>
<details class="hint-container details"><summary>实例代码</summary>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 链表的应用</h2>
<ol>
<li>
<p>快乐数 - <a href="https://leetcode-cn.com/problems/happy-number" target="_blank" rel="noopener noreferrer">LeetCode 连接</a></p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>实例代码</summary>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>线性表-链表-Java</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/10.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/13.%E7%BA%BF%E6%80%A7%E8%A1%A8-%E9%93%BE%E8%A1%A8-Java.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/10.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/13.%E7%BA%BF%E6%80%A7%E8%A1%A8-%E9%93%BE%E8%A1%A8-Java.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">线性表-链表-Java</source>
      <description>[[toc]] java 实现</description>
      <category>结构与算法</category>
      <category>数据结构</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

<h2> java 实现</h2>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>树</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/10.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/20.%E6%A0%91.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/10.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/20.%E6%A0%91.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">树</source>
      <description>数据结构示例网站：https://www.cs.usfca.edu/~galles/visualization/Algorithms.html 树是一种非线性的数据结构，是由 n(n&amp;gt;=0)个节点组成的集合。 如果 n=0,是一棵空数 如果 n&amp;gt;0,树有一个特殊的节点，这个节点没有父节点，被称为根节点（root） 除根结点之外的其余数据元素被分为 m（m≥0）个互不相交的集合 T1，T2，……Tm-1，其中每一个集合 Ti（1&amp;lt;=i&amp;lt;=m）本身也是一棵树，被称作原树的子树</description>
      <category>结构与算法</category>
      <category>数据结构</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>数据结构示例网站：<a href="https://www.cs.usfca.edu/~galles/visualization/Algorithms.html" target="_blank" rel="noopener noreferrer">https://www.cs.usfca.edu/~galles/visualization/Algorithms.html</a></p>
<p>树是一种非线性的数据结构，是由 n(n&gt;=0)个节点组成的集合。</p>
<ul>
<li>如果 n=0,是一棵空数</li>
<li>如果 n&gt;0,树有一个特殊的节点，这个节点没有父节点，被称为根节点（root）</li>
<li>除根结点之外的其余数据元素被分为 m（m≥0）个互不相交的集合 T1，T2，……Tm-1，其中每一个集合 Ti（1&lt;=i&lt;=m）本身也是一棵树，被称作原树的子树</li>
</ul>
<!-- more -->

]]></content:encoded>
    </item>
    <item>
      <title>图</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/10.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/30.%E5%9B%BE.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/10.%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/30.%E5%9B%BE.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">图</source>
      <description>图通常用来表示和存储具有多对多关系的数据，是数据结构中非常重要的一种结构。 图（Graph）是由顶点的有穷非空集合和顶点之间边的集合组成，通常表示为：G(V, E)，其中，G 表示一个图，V 是图 G 中顶点的集合，E 是图 G 中边的集合。</description>
      <category>结构与算法</category>
      <category>数据结构</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>图通常用来表示和存储具有<code>多对多</code>关系的数据，是数据结构中非常重要的一种结构。</p>
<blockquote>
<p>图（Graph）是由顶点的有穷非空集合和顶点之间边的集合组成，通常表示为：G(V, E)，其中，G 表示一个图，V 是图 G 中顶点的集合，E 是图 G 中边的集合。</p>
</blockquote>
<!-- more -->

<h2> 在图中需要注意</h2>
<ul>
<li>线性表和树可以看做特殊的图。</li>
<li>线性表中我们把数据元素叫元素，树中将数据元素叫结点，在图中数据元素，我们则称之为顶点（Vertex）</li>
<li>线性表可以没有元素，称为空表；树中可以没有节点，称为空树；但是，在图中不允许没有顶点（有穷非空性）</li>
<li>线性表中的各元素是线性关系，树中的各元素是层次关系，而图中各顶点的关系是用边来表示（边集可以为空）。</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Jenkins模板文件</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/09.%E9%9B%86%E6%88%90%E6%9E%84%E5%BB%BA/10.Jenkins%E6%A8%A1%E6%9D%BF%E6%96%87%E4%BB%B6.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/09.%E9%9B%86%E6%88%90%E6%9E%84%E5%BB%BA/10.Jenkins%E6%A8%A1%E6%9D%BF%E6%96%87%E4%BB%B6.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">Jenkins模板文件</source>
      <description>Jenkinsfile声明模板 // Jenkinsfile声明模板 pipeline { // Agent: 表示整个流水线或特定阶段中的步骤和命令执行的位置 // Agent any 在任何可用的代理上执行流水线 // Agent none 表示该 Pipeline 脚本没有全局的 agent 配置。当顶层的 agent 配置为 none 时， 每个 stage 部分都需要包含它自己的 agent agent any // 全局变量，会在所有stage中生效 environment { NAME= &amp;apos;ZHANG&amp;apos; // 动态变量 returnStdout: 将命令的执行结果赋值给变量，比如下述的命令返回的是 clang，此时 CC 的值为“clang”。 CC = &amp;quot;&amp;quot;&amp;quot;${sh( returnStdout: true, script: &amp;apos;echo -n &amp;quot;clang&amp;quot;&amp;apos; //如果使用shell命令的echo赋值变量最好加-n取消换行 )}&amp;quot;&amp;quot;&amp;quot; // 动态变量 returnStatus: 将命令的执行状态赋值给变量，比如下述命令的执行状态为 1，此时 EXIT_STATUS 的值为 1 EXIT_STATUS = &amp;quot;&amp;quot;&amp;quot;${sh( returnStatus: true, script: &amp;apos;exit 1&amp;apos; )}&amp;quot;&amp;quot;&amp;quot; // 加密文本 AWS_ACCESS_KEY_ID = credentials(&amp;apos;txt1&amp;apos;) AWS_SECRET_ACCESS_KEY = credentials(&amp;apos;txt2&amp;apos;) } // Options: Jenkins 流水线支持很多内置指令，比如 retry 可以对失败的步骤进行重复执行 n 次，可以根据不同的指令实现不同的效果。 // buildDiscarder : 保留多少个流水线的构建记录 // disableConcurrentBuilds : 禁止流水线并行执行，防止并行流水线同时访问共享资源导致流水线失败。 // disableResume : 如果控制器重启，禁止流水线自动恢复。 // newContainerPerStage : agent 为 docker 或 dockerfile 时，每个阶段将在同一个节点的新容器中运行，而不是所有的阶段都在同一个容器中运行。 // quietPeriod : 流水线静默期，也就是触发流水线后等待一会在执行。 // retry : 流水线失败后重试次数。 // timeout : 设置流水线的超时时间，超过流水线时间，job 会自动终止。如果不加 unit 参数默认为 1 分。 // timestamps : 为控制台输出时间戳。 options { timeout(time: 1, unit: &amp;apos;HOURS&amp;apos;) // 超时时间1小时，如果不加unit参数默认为1分 timestamps() // 所有输出每行都会打印时间戳 buildDiscarder(logRotator(numToKeepStr: &amp;apos;3&amp;apos;)) //保留三个历史构建版本 quietPeriod(10) // 注意手动触发的构建不生效 retry(3) // 流水线失败后重试次数 } // Parameters: 提供了一个用户在触发流水线时应该提供的参数列表 只能定义在 pipeline 顶层。 // 插件: imageTag | gitParameter parameters { string(name: &amp;apos;DEPLOY_ENV&amp;apos;, defaultValue: &amp;apos;staging&amp;apos;, description: &amp;apos;1&amp;apos;) // 执行构建时需要手动配置字符串类型参数，之后赋值给变量 text(name: &amp;apos;DEPLOY_TEXT&amp;apos;, defaultValue: &amp;apos;One\nTwo\nThree\n&amp;apos;, description: &amp;apos;2&amp;apos;) // 执行构建时需要提供文本参数，之后赋值给变量 booleanParam(name: &amp;apos;DEBUG_BUILD&amp;apos;, defaultValue: true, description: &amp;apos;3&amp;apos;) // 布尔型参数 choice(name: &amp;apos;CHOICES&amp;apos;, choices: [&amp;apos;one&amp;apos;, &amp;apos;two&amp;apos;, &amp;apos;three&amp;apos;], description: &amp;apos;4&amp;apos;) // 选择形式列表参数 password(name: &amp;apos;PASSWORD&amp;apos;, defaultValue: &amp;apos;SECRET&amp;apos;, description: &amp;apos;A secret password&amp;apos;) // 密码类型参数，会进行加密 imageTag(name: &amp;apos;DOCKER_IMAGE&amp;apos;, description: &amp;apos;&amp;apos;, image: &amp;apos;kubernetes/kubectl&amp;apos;, filter: &amp;apos;.*&amp;apos;, defaultTag: &amp;apos;&amp;apos;, registry: &amp;apos;https://192.168.10.15&amp;apos;, credentialId: &amp;apos;harbor-account&amp;apos;, tagOrder: &amp;apos;NATURAL&amp;apos;) //获取镜像名称与tag gitParameter(branch: &amp;apos;&amp;apos;, branchFilter: &amp;apos;origin/(.*)&amp;apos;, defaultValue: &amp;apos;&amp;apos;, description: &amp;apos;Branch for build and deploy&amp;apos;, name: &amp;apos;BRANCH&amp;apos;, quickFilterEnabled: false, selectedValue: &amp;apos;NONE&amp;apos;, sortMode: &amp;apos;NONE&amp;apos;, tagFilter: &amp;apos;*&amp;apos;, type: &amp;apos;PT_BRANCH&amp;apos;) } // 定时构建 注意: H 的意思不是 HOURS 的意思，而是 Hash 的缩写。主要为了解决多个流水线在同一时间同时运行带来的系统负载压力。 triggers { cron(&amp;apos;H */4 * * 1-5&amp;apos;) // 周一到周五每隔四个小时执行一次 cron(&amp;apos;H/12 * * * *&amp;apos;) // 每隔12分钟执行一次 cron(&amp;apos;H * * * *&amp;apos;) // 每隔1小时执行一次 } // 定义流水线 stages { // 执行某阶段 stage(&amp;apos;Build&amp;apos;) { steps { echo &amp;apos;Build&amp;apos; } } stage(&amp;apos;Stage For Build&amp;apos;){ // label: 以节点标签形式选择某个具体的节点执行 Pipeline 命令 agent { label &amp;apos;role-master&amp;apos; } steps { sh &amp;quot;&amp;quot;&amp;quot; echo &amp;apos;role-master&amp;apos; echo &amp;apos;role-master&amp;apos; &amp;quot;&amp;quot;&amp;quot; } } stage(&amp;apos;Stage For Build&amp;apos;){ agent { // node: 和 label 配置类似，只不过是可以添加一些额外的配置，比如 customWorkspace(设置默认工作目录) node { label &amp;apos;role-master&amp;apos; customWorkspace &amp;quot;/tmp/zhangzhuo/data&amp;quot; } } steps { sh &amp;quot;echo role-master &amp;gt; 1.txt&amp;quot; } } agent { // dockerfile: 使用从源码中包含的 Dockerfile 所构建的容器执行流水线或 stage dockerfile { filename &amp;apos;Dockerfile.build&amp;apos; //dockerfile文件名称 dir &amp;apos;build&amp;apos; //执行构建镜像的工作目录 label &amp;apos;role-master&amp;apos; //执行的node节点，标签选择 additionalBuildArgs &amp;apos;--build-arg version=1.0.2&amp;apos; //构建参数 } } agent{ // docker: 相当于 dockerfile，可以直接使用 docker 字段指定外部镜像即可，可以省去构建的时间。比如使用 maven 镜像进行打包，同时可以指定 args docker{ image &amp;apos;192.168.10.15/kubernetes/alpine:latest&amp;apos; //镜像地址 label &amp;apos;role-master&amp;apos; //执行的节点，标签选择 args &amp;apos;-v /tmp:/tmp&amp;apos; //启动镜像的参数 } } // docker 的示例 stage(&amp;apos;Example Build&amp;apos;) { agent { docker &amp;apos;maven:3-alpine&amp;apos; } steps { echo &amp;apos;Hello, Maven&amp;apos; sh &amp;apos;mvn --version&amp;apos; } } stage(&amp;apos;env1&amp;apos;) { // 定义在stage中的变量只会在当前stage生效，其他的stage不会生效 environment { HARBOR = &amp;apos;https://192.168.10.15&amp;apos; } steps { sh &amp;quot;env&amp;quot; } } stage(&amp;apos;env1&amp;apos;) { options { // 定义在这里这对这个stage生效 timeout(time: 2, unit: &amp;apos;SECONDS&amp;apos;) // 超时时间2秒 timestamps() // 所有输出每行都会打印时间戳 retry(3) // 流水线失败后重试次数 } steps { sh &amp;quot;env &amp;amp;&amp;amp; sleep 2&amp;quot; } } // Parameters 测试 stage(&amp;apos;git&amp;apos;) { steps { // 使用gitParameter，必须有这个 git branch: &amp;quot;$BRANCH&amp;quot;, credentialsId: &amp;apos;gitlab-key&amp;apos;, url: &amp;apos;git@192.168.10.14:root/env.git&amp;apos; } } // Input 字段可以实现在流水线中进行交互式操作 stage(&amp;apos;Example&amp;apos;) { input { message &amp;quot;还继续么?&amp;quot; ok &amp;quot;继续&amp;quot; submitter &amp;quot;alice,bob&amp;quot; // 可选，允许提交 input 操作的用户或组的名称，如果为空，任何登录用户均可提交 input； parameters { string(name: &amp;apos;PERSON&amp;apos;, defaultValue: &amp;apos;Mr Jenkins&amp;apos;, description: &amp;apos;Who should I say hello to?&amp;apos;) } } steps { echo &amp;quot;Hello, ${PERSON}, nice to meet you.&amp;quot; } } stage(&amp;apos;Example Deploy&amp;apos;) { when { // beforeAgent: 如果 beforeAgent 为 true，则会先评估 when 条件。在 when 条件为 true 时，才会进入该 stage // beforeInput: 如果 beforeInput 为 true，则会先评估 when 条件。在 when 条件为 true 时，才会进入到 input 阶段； // beforeOptions: 如果 beforeInput 为 true，则会先评估 when 条件。在 when 条件为 true 时，才会进入到 options 阶段； // beforeOptions 优先级大于 beforeInput 大于 beforeAgent beforeAgent true branch &amp;apos;main&amp;apos; // 多分支流水线，分支为main才会执行。 expression { BRANCH_NAME ==~ /(main|master)/ } // 并且 满足正则表达式 anyOf { // 并且 DEPLOY_TO 为 master 或 main environment name: &amp;apos;DEPLOY_TO&amp;apos;, value: &amp;apos;main&amp;apos; environment name: &amp;apos;DEPLOY_TO&amp;apos;, value: &amp;apos;master&amp;apos; } } steps { echo &amp;apos;Deploying&amp;apos; } } // Parallel: 很方便的实现并发构建 stage(&amp;apos;Parallel Stage&amp;apos;) { failFast true // 表示其中只要有一个分支构建执行失败，就直接推出不等待其他分支构建 parallel { stage(&amp;apos;Branch A&amp;apos;) { steps { echo &amp;quot;On Branch A&amp;quot; } } stage(&amp;apos;Branch B&amp;apos;) { steps { echo &amp;quot;On Branch B&amp;quot; } } stage(&amp;apos;Branch C&amp;apos;) { stages { stage(&amp;apos;Nested 1&amp;apos;) { steps { echo &amp;quot;In stage Nested 1 within Branch C&amp;quot; } } stage(&amp;apos;Nested 2&amp;apos;) { steps { echo &amp;quot;In stage Nested 2 within Branch C&amp;quot; } } } } } } // 静态变量 // Jenkins 有许多内置变量可以直接在 Jenkinsfile 中使用，可以通过 JENKINS_URL/pipeline/syntax/globals#env 获取完整列表。目前比较常用的环境变量如下 // BUILD_ID: 当前构建的 ID，与 Jenkins 版本 1.597+中的 BUILD_NUMBER 完全相同 // BUILD_NUMBER: 当前构建的 ID，和 BUILD_ID 一致 // BUILD_TAG: 用来标识构建的版本号，格式为: jenkins-{BUILD_NUMBER}， 可以对产物进行命名，比如生产的 jar 包名字、镜像的 TAG 等； // BUILD_URL: 本次构建的完整 URL，比如: http://buildserver/jenkins/job/MyJobName/17/%EF%BC%9B // JOB_NAME: 本次构建的项目名称 // NODE_NAME: 当前构建节点的名称； // JENKINS_URL: Jenkins 完整的 URL，需要在 SystemConfiguration 设置； // WORKSPACE: 执行构建的工作目录。 stage(&amp;apos;STATIC_ENV&amp;apos;) { steps { echo &amp;quot;$env.BUILD_ID&amp;quot; echo &amp;quot;$env.BUILD_NUMBER&amp;quot; echo &amp;quot;$env.BUILD_TAG&amp;quot; } } //Post: 一般用于流水线结束后的进一步处理 | 一般情况下 post 部分放在流水线的底部 post { // always: 无论 Pipeline 或 stage 的完成状态如何，都允许运行该 post 中定义的指令； // changed: 只有当前 Pipeline 或 stage 的完成状态与它之前的运行不同时，才允许在该 post 部分运行该步骤； // fixed: 当本次 Pipeline 或 stage 成功，且上一次构建是失败或不稳定时，允许运行该 post 中定义的指令； // regression: 当本次 Pipeline 或 stage 的状态为失败、不稳定或终止，且上一次构建的 状态为成功时，允许运行该 post 中定义的指令； // failure: 只有当前 Pipeline 或 stage 的完成状态为失败（failure），才允许在 post 部分运行该步骤，通常这时在 Web 界面中显示为红色 // success: 当前状态为成功（success），执行 post 步骤，通常在 Web 界面中显示为蓝色 或绿色 // unstable: 当前状态为不稳定（unstable），执行 post 步骤，通常由于测试失败或代码 违规等造成，在 Web 界面中显示为黄色 // aborted: 当前状态为终止（aborted），执行该 post 步骤，通常由于流水线被手动终止触发，这时在 Web 界面中显示为灰色； // unsuccessful: 当前状态不是 success 时，执行该 post 步骤； // cleanup: 无论 pipeline 或 stage 的完成状态如何，都允许运行该 post 中定义的指令。和 always 的区别在于，cleanup 会在其它执行之后执行。 always { echo &amp;apos;I will always say Hello again!&amp;apos; } failure { echo &amp;apos;I will failure say Hello again!&amp;apos; } } } }</description>
      <category>集成配置</category>
      <category>集成构建</category>
      <pubDate>Sat, 22 Apr 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> Jenkinsfile声明模板</h2>
<div class="language-JavaScript line-numbers-mode" data-ext="JavaScript"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>设计模式和设计原则</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/09.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%92%8C%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/09.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%92%8C%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">设计模式和设计原则</source>
      <description>[[toc]] 设计模式的三个分类 创建型模式：对象实例化的模式，创建型模式用于解耦对象的实例化过程。; 结构型模式：把类或对象结合在一起形成一个更大的结构。; 行为型模式：类和对象如何交互，及划分责任和算法。; 23种设计模式 创建型: 01. 单例模式（Singleton）：某个类只能有一个实例，提供一个全局的访问点。 02. 抽象工厂（Abstr...</description>
      <category>结构与算法</category>
      <category>设计模式</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<figure><img src="https://static001.geekbang.org/horde/e8/e812cf142371fed874cd5faaa797cc5d.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<!-- more -->

<h2> 设计模式的三个分类</h2>
<ul>
<li>创建型模式：对象实例化的模式，创建型模式用于解耦对象的实例化过程。</li>
<li>结构型模式：把类或对象结合在一起形成一个更大的结构。</li>
<li>行为型模式：类和对象如何交互，及划分责任和算法。</li>
</ul>
<h2> 23种设计模式</h2>
<blockquote>
<p>创建型:</p>
</blockquote>
<ol>
<li>单例模式（Singleton）：某个类只能有一个实例，提供一个全局的访问点。</li>
<li>抽象工厂（Abstract Factory）：创建相关或依赖对象的家族，而无需明确指定具体类。</li>
<li>工厂方法（Factory Method）：定义一个创建对象的接口，让子类决定实例化那个类。</li>
<li>建造模式（Builder）：封装一个复杂对象的构建过程，并可以按步骤构造。</li>
<li>原型模式（Prototype）：通过复制现有的实例来创建新的实例。</li>
</ol>
<blockquote>
<p>行为型：</p>
</blockquote>
<ol start="6">
<li>迭代器模式（Iterator）：一种遍历访问聚合对象中各个元素的方法，不暴露该对象的内部结构。</li>
<li>观察者模式（Observer）：对象间的一对多的依赖关系。</li>
<li>模板方法（Template Method）：定义一个算法结构，而将一些步骤延迟到子类实现。</li>
<li>命令模式（Command）：将命令请求封装为一个对象，使得可以用不同的请求来进行参数化。</li>
<li>状态模式（State）：允许对象在其内部状态改变时改变他的行为。对象看起来似乎改变了他的类。</li>
<li>策略模式（Strategy）：定义一系列算法，把他们封装起来，并且使它们可以相互替换。</li>
<li>职责链模式（China of Responsibility）：将请求的发送者和接收者解耦，使的多个对象都有处理这个请求的机会。</li>
<li>中介者模式（Mediator）：用一个中介对象来封装一系列的对象交互。</li>
<li>访问者模式（Visitor）：在不改变数据结构的前提下，增加作用于一组对象元素的新功能。</li>
<li>解释器模式（Interpreter）：给定一个语言，定义它的文法的一种表示，并定义一个解释器。</li>
<li>备忘录模式（Memento）：在不破坏封装的前提下，保持对象的内部状态。</li>
</ol>
<blockquote>
<p>结构型：</p>
</blockquote>
<ol start="17">
<li>组合模式（Composite）：将对象组合成树形结构以表示“部分-整体”的层次结构。</li>
<li>外观模式（Facade）：对外提供一个统一的方法，来访问子系统中的一群接口。</li>
<li>代理模式（Proxy）：为其他对象提供一种代理以控制对这个对象的访问。</li>
<li>适配器模式（Adapter）：将一类的接口转换成客户希望的另外一个接口。</li>
<li>装饰模式（Decrator）：动态的给对象添加新的功能。</li>
<li>桥模式（Bridge）：将抽象部分和它的实现部分分离，使它们都可以独立的变化。</li>
<li>享元（蝇量）模式（Flyweight）：通过共享技术来有效的支持大量细粒度的对象。</li>
</ol>
<h2> 设计模式分析</h2>
<ol>
<li>单例模式：</li>
</ol>
<blockquote>
<p>特点：1、只有一个实例。 2、自我实例化。 3、提供全局访问点。</p>
<p>优点：节约系统资源、提高了系统效率，同时也能够严格控制客户对它的访问。</p>
<p>缺点：单例类的职责过重，违背了“单一职责原则”，同时也没有抽象类，所以扩展起来有一定的困难。</p>
</blockquote>
]]></content:encoded>
      <enclosure url="https://static001.geekbang.org/horde/e8/e812cf142371fed874cd5faaa797cc5d.png" type="image/png"/>
    </item>
    <item>
      <title>单例模式</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/10.%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/10.%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">单例模式</source>
      <description>[[TOC]] 保证一个类只有一个实例，并提供一个全局访问点。当一个对象在整个系统中都可以用到时，单例模式就比较有用了。客户端不在考虑是否要实例化的问题，而把责任都交给应该负责的类去处理。他属性创建型设计模式。 单例模式旨在创建一个类的实例，创建一个类的实例我们用全局静态变量或者约定也能办到单例的作用。 1.1单例如何形成的 平常创建一个对象需要new...</description>
      <category>结构与算法</category>
      <category>设计模式</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

<h1> 1、简介</h1>
<p>保证一个类只有一个实例，并提供一个全局访问点。当一个对象在整个系统中都可以用到时，单例模式就比较有用了。客户端不在考虑是否要实例化的问题，而把责任都交给应该负责的类去处理。他属性创建型设计模式。</p>
<p>单例模式旨在创建一个类的实例，创建一个类的实例我们用全局静态变量或者约定也能办到单例的作用。</p>
<h2> 1.1单例如何形成的</h2>
<p>平常创建一个对象需要new对象，假如有一个对象ObjectClass我们实例化它。<br>
<code>new ObjectClass()</code><br>
如果另外一个类要使用ObjectClass则可以再通过new来创建另外一个实例化，如果这个类是public 则我们可以在使用的时候多次实例化对象。</p>
<p>那我们怎么保证类不被其他类实例化，利用private关键字我们可以采用私有构造函数来阻止外部实例化该类。</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样一来我们无法实例化ObjectClass则我们就无法使用它。那我们要怎么实例化呢？</p>
<p>由于私有构造方法我们只能在内部访问，所以我们可以用一个内部方法实例化ObjectClass，为了外部能够访问这个方法我们将这个方法设置成static。</p>
<p>这样做了之后确保返回对象始终是第一次创建的对象，我们用一个私有静态对象来存储实例化的对象，如果对象没创建我们则立即创建，如果已经创建就返回已经创建的对象。</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><strong>单例模式：确保一个类只有一个实例，并提供一个全局访问点。</strong></li>
</ul>
<h2> 1.2 多线程导致单例模式问题</h2>
<p>启用多线程测试单例返回对象</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://img2018.cnblogs.com/blog/993045/201911/993045-20191110221915487-252198249.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>启了10个线程获得单例对象然后打印对象的HashCode。测试发现有HashCode不一致的情况，证明单例返回的对象并不是只有一个。</p>
<p>因为多线程运行的时候可能会同时进行if (singleton == null)的判断，如果此时singleton变量还没被实例化则可能有多个线程进入到实例化代码，以至于返回的实例化对象不是同一个。</p>
<h2> 1.3 解决多线程单例问题</h2>
<p>由于多线程导致if检查变量问题，则争对检查问题我们可以有两类解决办法：</p>
<ol>
<li>"急切"创建实例，不用延迟实例化做法</li>
</ol>
<p>急切实例化就是在静态初始化器中创建对象，这样就保证了程序运行阶段单例对象已经创建好，去除if判断。</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2">
<li>加锁<br>
为了让创建对象只能有一个线程操作，则我们对创建对象代码进行加锁处理，再次改造GetSingletone方法。</li>
</ol>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>加锁对性能有一定的损耗，如果你的系统对性能要求比较高，我们对于加锁的处理还有一种优化方式：双重检查加锁</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用双重检查加锁，则多线程在运行的时候如果已经创建了单例对象后就不会再进入到lock代码段以此减少锁带来的性能损耗。</p>
<p>然后我们再来测试一波，启用50个线程，可以看到输出的HashCode是一致的。<br>
<img src="https://img2018.cnblogs.com/blog/993045/201911/993045-20191110233511414-127936645.jpg" alt="" loading="lazy"></p>
<h1> 2、适用场景</h1>
<ol>
<li>确保在任何情况下都只要一个实例</li>
<li>想要可以简单的访问实例类</li>
<li>让类自己控制它的实例化</li>
<li>希望可以限制类的实例数</li>
<li>要求生成唯一序列化的环境</li>
<li>在整个项目中需要一个共享访问点或共享数据，例如一个Web页面上的计数器，可以不用把每次刷新都记录到数据中，使用单例模式保持计数器的值，并确保是线程安全的。</li>
<li>
</li>
<li>需要定义大量的静态常量和静态方法（如工具类） 的环境，可以采用单例模式。（当然，也可以直接声明为static的方式）。</li>
</ol>
<p>像，如果出现多个可能导致程序的行为异常，资源使用过度，或者不一致的情况。</p>
<h2> 2.1 通用代码-线程安全</h2>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1> 3、优点</h1>
<p>1、只有一个实例，减少内存开销<br>
2、对资源没有多重占用<br>
3、设置全局访问点，严格控制访问</p>
<h1> 4、缺点</h1>
<p>没有接口，扩展困难</p>
<h1> 5、存在问题</h1>
<p>1、如果存在多个类加载器，那么就会有多个实例，解决：自行指定类加载器，并且是相同的加载器。<br>
2、1.2之前垃圾收集器有个bug，会把单例对象回收，1.2之后这个bug已经解决了。<br>
3、不适合作为父类。</p>
<h1> 6、结合其他模式</h1>
<p>1、抽象工厂模式，建造者模式，原型模式，享元模式都可以使用单例模式<br>
2、Facade对象都是一个实例，因为只需要一个Facade对象<br>
3、状态对象通常也只需要一个实例</p>
<h1> 7、重要条件</h1>
<p>1、<br>
2、<br>
3、</p>
<h1> 8、示例代码</h1>
<h2> 8.1 懒加载单例</h2>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该模式在单线程下是没有问题的，但是在多线程的情况下，就不能保证只创建一个实例了。<br>
我们来模拟多线程debug，看看输出的实例。</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 8.2 懒加载多线程解决</h2>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用双重检查锁的性能要比之前在方法上加锁要好，但是也会有问题，会出现指令重排序问题。</p>
<p>此时线程2判断为null的时候，发现不为null，就会执行第4步，这样就出现问题了。<br>
在变量中增加volatile来修饰，可以防止指令重排序。</p>
<h2> 8.4 静态内部类</h2>
<p>为了解决指令重排序，可以使用静态内部类，让指令重排序对其他线程不可见，如：</p>
<p>代码示例：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 8.5 饿汉式</h2>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因为类在加载的时候就被创建了，所以叫饿汉式。延迟加载是在类使用的时候才被创建，所以叫懒汉式。</p>
<h2> 8.6 序列化反序列化破坏单例</h2>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>false<br>
发现经过反序列化之后，不是同一个类了。<br>
在HungrySerializableSingleton中加入下面代码</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>反序列出来的是同一个类，原因分析：<br>
ObjectInputStream类中，如下代码：</p>
</blockquote>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>hasReadResolveMethod该方法会先判断是否存在readResolve()方法，如果存在，那么会通过反射去调用类里面的readResolve()方法，反射调用主要是通过invokeReadResolve方法。</p>
<h2> 8.7 反射防御</h2>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过反射创建出来两个实例，那么如何来防御呢？</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在私有构造函数中判断变量是否为空，如果不为空就抛出异常。但是在懒加载中是不起效果的。</p>
<h2> 8.8 枚举单例</h2>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到如果是枚举的话，会根据name获取枚举的对象。可以通过jad反编译来查看枚举类，使用枚举来创建单例是比较推荐的做法。</p>
<h2> 8.9 容器单例</h2>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以通过该方法来存储一堆单例对象，但是存在反射和序列化的问题，可以使用ConcurrentHashMap来控制并发问题。</p>
<h2> 8.10 克隆破坏</h2>
<p>第一不要实现Cloneable接口<br>
第二，如果实现了，那么clone方法需要写成如下：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1> 9、源码分析</h1>
<h2> 9.1 jdk中应用</h2>
<p>java.langRuntime类中也使用了单例，如代码：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 9.2 MyBatis中应用</h2>
<blockquote>
<p><code>ErrorContext</code>类使用了单例，这边使用了<code>ThreadLocal&lt;ErrorContext&gt;</code>的单例模式。</p>
</blockquote>
<h2> 9.3 spring中应用</h2>
<p>AbstractBeanFactory使用了单例，</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>部分代码.......</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>是把bean放到ConcurrentHashMap对象中。</p>
]]></content:encoded>
      <enclosure url="https://img2018.cnblogs.com/blog/993045/201911/993045-20191110221915487-252198249.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>抽象工厂</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/11.%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/11.%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">抽象工厂</source>
      <description>[[TOC]]</description>
      <category>结构与算法</category>
      <category>设计模式</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

]]></content:encoded>
    </item>
    <item>
      <title>工厂方法</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/12.%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/12.%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">工厂方法</source>
      <description>[[TOC]]</description>
      <category>结构与算法</category>
      <category>设计模式</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

]]></content:encoded>
    </item>
    <item>
      <title>建造模式</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/13.%E5%BB%BA%E9%80%A0%E6%A8%A1%E5%BC%8F.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/13.%E5%BB%BA%E9%80%A0%E6%A8%A1%E5%BC%8F.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">建造模式</source>
      <description>[[TOC]]</description>
      <category>结构与算法</category>
      <category>设计模式</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

]]></content:encoded>
    </item>
    <item>
      <title>原型模式</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/14.%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/14.%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">原型模式</source>
      <description>[[TOC]]</description>
      <category>结构与算法</category>
      <category>设计模式</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

]]></content:encoded>
    </item>
    <item>
      <title>迭代器模式</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/20.%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/20.%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">迭代器模式</source>
      <description>[[TOC]]</description>
      <category>结构与算法</category>
      <category>设计模式</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

]]></content:encoded>
    </item>
    <item>
      <title>观察者模式</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/21.%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/21.%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">观察者模式</source>
      <description>[[TOC]]</description>
      <category>结构与算法</category>
      <category>设计模式</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

]]></content:encoded>
    </item>
    <item>
      <title>模板方法</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/22.%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/22.%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">模板方法</source>
      <description>[[TOC]]</description>
      <category>结构与算法</category>
      <category>设计模式</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

]]></content:encoded>
    </item>
    <item>
      <title>命令模式</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/23.%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/23.%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">命令模式</source>
      <description>[[TOC]]</description>
      <category>结构与算法</category>
      <category>设计模式</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

]]></content:encoded>
    </item>
    <item>
      <title>状态模式</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/24.%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/24.%E7%8A%B6%E6%80%81%E6%A8%A1%E5%BC%8F.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">状态模式</source>
      <description>[[TOC]]</description>
      <category>结构与算法</category>
      <category>设计模式</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

]]></content:encoded>
    </item>
    <item>
      <title>策略模式</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/25.%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/25.%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">策略模式</source>
      <description>[[TOC]]</description>
      <category>结构与算法</category>
      <category>设计模式</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

]]></content:encoded>
    </item>
    <item>
      <title>职责链模式</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/26.%E8%81%8C%E8%B4%A3%E9%93%BE%E6%A8%A1%E5%BC%8F.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/26.%E8%81%8C%E8%B4%A3%E9%93%BE%E6%A8%A1%E5%BC%8F.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">职责链模式</source>
      <description>[[TOC]]</description>
      <category>结构与算法</category>
      <category>设计模式</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

]]></content:encoded>
    </item>
    <item>
      <title>中介者模式</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/27.%E4%B8%AD%E4%BB%8B%E8%80%85%E6%A8%A1%E5%BC%8F.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/27.%E4%B8%AD%E4%BB%8B%E8%80%85%E6%A8%A1%E5%BC%8F.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">中介者模式</source>
      <description>[[TOC]]</description>
      <category>结构与算法</category>
      <category>设计模式</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

]]></content:encoded>
    </item>
    <item>
      <title>访问者模式</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/28.%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/28.%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">访问者模式</source>
      <description>[[TOC]]</description>
      <category>结构与算法</category>
      <category>设计模式</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

]]></content:encoded>
    </item>
    <item>
      <title>解释器模式</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/29.%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/29.%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">解释器模式</source>
      <description>[[TOC]]</description>
      <category>结构与算法</category>
      <category>设计模式</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

]]></content:encoded>
    </item>
    <item>
      <title>备忘录模式</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/30.%E5%A4%87%E5%BF%98%E5%BD%95%E6%A8%A1%E5%BC%8F.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/30.%E5%A4%87%E5%BF%98%E5%BD%95%E6%A8%A1%E5%BC%8F.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">备忘录模式</source>
      <description>[[TOC]]</description>
      <category>结构与算法</category>
      <category>设计模式</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

]]></content:encoded>
    </item>
    <item>
      <title>组合模式</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/40.%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/40.%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">组合模式</source>
      <description>[[TOC]]</description>
      <category>结构与算法</category>
      <category>设计模式</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

]]></content:encoded>
    </item>
    <item>
      <title>外观模式</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/41.%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/41.%E5%A4%96%E8%A7%82%E6%A8%A1%E5%BC%8F.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">外观模式</source>
      <description>[[TOC]]</description>
      <category>结构与算法</category>
      <category>设计模式</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

]]></content:encoded>
    </item>
    <item>
      <title>代理模式</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/42.%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/42.%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">代理模式</source>
      <description>[[TOC]]</description>
      <category>结构与算法</category>
      <category>设计模式</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

]]></content:encoded>
    </item>
    <item>
      <title>适配器模式</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/43.%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/43.%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">适配器模式</source>
      <description>[[TOC]]</description>
      <category>结构与算法</category>
      <category>设计模式</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

]]></content:encoded>
    </item>
    <item>
      <title>装饰模式</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/44.%E8%A3%85%E9%A5%B0%E6%A8%A1%E5%BC%8F.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/44.%E8%A3%85%E9%A5%B0%E6%A8%A1%E5%BC%8F.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">装饰模式</source>
      <description>[[TOC]]</description>
      <category>结构与算法</category>
      <category>设计模式</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

]]></content:encoded>
    </item>
    <item>
      <title>桥模式</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/45.%E6%A1%A5%E6%A8%A1%E5%BC%8F.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/45.%E6%A1%A5%E6%A8%A1%E5%BC%8F.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">桥模式</source>
      <description>[[TOC]]</description>
      <category>结构与算法</category>
      <category>设计模式</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

]]></content:encoded>
    </item>
    <item>
      <title>享元模式</title>
      <link>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/46.%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F.html</link>
      <guid>https://haijunit.top/blog/20.%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/46.%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">享元模式</source>
      <description>[[TOC]]</description>
      <category>结构与算法</category>
      <category>设计模式</category>
      <pubDate>Sun, 21 Feb 2021 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

]]></content:encoded>
    </item>
    <item>
      <title>MyBatis中xml写法</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/11.MyBatis/10.MyBatis%E4%B8%ADxml%E5%86%99%E6%B3%95.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/11.MyBatis/10.MyBatis%E4%B8%ADxml%E5%86%99%E6%B3%95.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">MyBatis中xml写法</source>
      <description>[[toc]] concat模糊查询 choose (when, otherwise)标签 selectKey 标签 if标签 foreach</description>
      <category>集成配置</category>
      <category>MyBatis</category>
      <pubDate>Mon, 27 Mar 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

<h2> concat模糊查询</h2>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> choose (when, otherwise)标签</h2>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> selectKey 标签</h2>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> if标签</h2>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> foreach</h2>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>MybatisPlus更新Null字段</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/11.MyBatis/21.MybatisPlus%E6%9B%B4%E6%96%B0Null%E5%AD%97%E6%AE%B5.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/11.MyBatis/21.MybatisPlus%E6%9B%B4%E6%96%B0Null%E5%AD%97%E6%AE%B5.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">MybatisPlus更新Null字段</source>
      <description>本文介绍【Mybatis-plus】updateById()方法不能更新字段为null的原因及解决办法。 一、问题描述 在日常项目开发过程中，经常会使用MybatisPlus的updateById()方法，快速将接收到的参数或者查询结果中原本不为null的字段更新为null，并且该字段在数据库中可为null，这个时候使用updateById()并不能实现这个操作，不会报错，但是对应的字段并没有更新为null。 二、问题原因</description>
      <category>集成配置</category>
      <category>MyBatis</category>
      <pubDate>Tue, 16 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<blockquote>
<p>本文介绍【Mybatis-plus】updateById()方法不能更新字段为null的原因及解决办法。</p>
</blockquote>
<h2> 一、问题描述</h2>
<blockquote>
<p>在日常项目开发过程中，经常会使用MybatisPlus的<code>updateById()</code>方法，快速将接收到的参数或者查询结果中原本不为null的字段更新为null，并且该字段在数据库中可为null，这个时候使用updateById()并不能实现这个操作，不会报错，但是对应的字段并没有更新为null。</p>
</blockquote>
<h2> 二、问题原因</h2>
<p>Mybatis-plus的字段策略（FieldStrategy）有三种策略：</p>
<ul>
<li><strong>IGNORED</strong>：0 忽略</li>
<li><strong>NOT_NULL</strong>：1 非 NULL，默认策略</li>
<li><strong>NOT_EMPTY</strong>：2 非空</li>
</ul>
<p>而默认的更新策略是NOT_NULL：非NULL; 即通过接口更新数据时数据为NULL值时将不更新进数据库。</p>
<h2> 三、解决方案</h2>
<h3> 1. 直接在mapper.xml中写sql</h3>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 2. 全局配置field-strategy (不推荐)</h3>
<p>在配置文件中修改全局策略</p>
<p>properties文件格式：</p>
<div class="language-properties line-numbers-mode" data-ext="properties"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样做是进行全局配置，在更新时会忽略对所有字段的判断。但是如果一些字段没有传值过来，会被直接更新为null，可能会影响其它业务数据的准确性。不推荐使用此方法。</p>
<h3> 3. 单独配置field-strategy</h3>
<p>根据具体情况，在需要更新的字段中调整验证注解，如验非空：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这样的话，我们只需要在需要更新为null的字段上，设置忽略策略，如下：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>设置好了之后，在更新时就可以直接使用mybatisPlus中的<code>updateById</code>方法就可以成功将字段更新为null,但是这样做存在一定的弊端，就是当需要这样处理的字段比较多时，要给对应的字段都要添加上这样的注解。</p>
<h3> 4. 结合UpdateWrapper方式更新 (推荐)</h3>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>这种方法不会影响其它方法，不需要修改全局配置，也不需要在字段上单独加注解，</p>
<p>只需要在使用的时候设置一下要修改的字段为null就可以更新成功，推荐使用方法4。</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>springboot构建清单</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/10.SpringBoot/01.springboot%E6%9E%84%E5%BB%BA%E6%B8%85%E5%8D%95.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/10.SpringBoot/01.springboot%E6%9E%84%E5%BB%BA%E6%B8%85%E5%8D%95.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">springboot构建清单</source>
      <description>SpringBoot 中很重要的一个概念就是，「约定优于配置」，通过特定方式的配置，可以减少很多步骤来实现想要的功能。</description>
      <category>集成配置</category>
      <category>SpringBoot</category>
      <pubDate>Tue, 08 Mar 2022 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>SpringBoot 中很重要的一个概念就是，「约定优于配置」，通过特定方式的配置，可以减少很多步骤来实现想要的功能。</p>
<!-- more -->

<p>一、引入依赖<br>
二、配置 Swagger 参数<br>
一、引入依赖<br>
二、配置邮箱的参数<br>
三、写模板和发送内容<br>
一、引用 Redis 依赖<br>
二、参数配置<br>
三、代码使用<br>
一、添加 mybatis 和 druid 依赖<br>
二、配置数据库和连接池参数<br>
三、其他 mybatis 配置<br>
@ExceptionHandler 错误处理<br>
@ModelAttribute 视图属性<br>
常规配置<br>
HTTPS 配置<br>
构建项目<br>
SpringBoot 基础配置<br>
Spring Boot Starters<br>
@SpringBootApplication<br>
Web 容器配置<br>
@ConfigurationProperties<br>
Profile<br>
@ControllerAdvice 用来处理全局数据<br>
CORS 支持，跨域资源共享<br>
注册 MVC 拦截器<br>
开启 AOP 切面控制<br>
整合 Mybatis 和 Druid<br>
整合 Redis<br>
发送 HTML 样式的邮件<br>
整合 Swagger (API 文档)<br>
总结<br>
参考资料</p>
<h2> 构建项目</h2>
<p>Spring 官网：<a href="https://start.spring.io/" target="_blank" rel="noopener noreferrer">https://start.spring.io/</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>SpringBoot应用</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/10.SpringBoot/02.SpringBoot%E5%BA%94%E7%94%A8.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/10.SpringBoot/02.SpringBoot%E5%BA%94%E7%94%A8.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">SpringBoot应用</source>
      <description>[[toc]] 项目搭建 1. 生成 maven 项目</description>
      <category>集成配置</category>
      <category>SpringBoot</category>
      <pubDate>Tue, 08 Mar 2022 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

<h2> 项目搭建</h2>
<ol>
<li>生成 maven 项目</li>
</ol>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>基础知识复习手册</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/10.SpringBoot/10.%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%A4%8D%E4%B9%A0%E6%89%8B%E5%86%8C.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/10.SpringBoot/10.%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%A4%8D%E4%B9%A0%E6%89%8B%E5%86%8C.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">基础知识复习手册</source>
      <description>本文设计的知识包括：配置常用注解、Spring Boot 自动配置、配置原理、如何修改默认配置、静态资源处理、Rest 映射、Spring Boot 常用注解、文件上传、拦截器、错误处理、数据层整合：MyBatis、JDBC、Druid、Redis 等等。</description>
      <category>集成配置</category>
      <category>SpringBoot</category>
      <pubDate>Tue, 08 Mar 2022 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>本文设计的知识包括：配置常用注解、Spring Boot 自动配置、配置原理、如何修改默认配置、静态资源处理、Rest 映射、Spring Boot 常用注解、文件上传、拦截器、错误处理、数据层整合：MyBatis、JDBC、Druid、Redis 等等。</p>
<!-- more -->

<h2> 配置注解</h2>
<ul>
<li>
<p>@Configuration &amp; @Bean<br><br>
Spring Boot 不同于传统的 Spring，它不提倡使用配置文件，而是使用配置类来代替配置文件，所以该注解就是用于将一个类指定为配置类：</p>
</li>
<li>
<p>@Configuration</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在配置类中使用方法对组件进行注册，它的效果等价于：</p>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是 Spring Boot 默认会以方法名作为组件的 id，也可以在 @Bean() 中指定 value 值作为组件的 id。</p>
</li>
<li>
<p>@Import<br>在 Spring 中，我们可以使用@Component、@Controller、@Service、@Repository 注解进行组件的注册，而对于一些第三方的类，我们无法在类上添加这些注解，为此，我们可以使用@Import 注解将其注册到容器中。</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过@Import 注解注册的组件，其 id 为全类名。</p>
</li>
<li>
<p>@Conditional <br>该注解为条件装配注解，大量运用于 SpringBoot 底层，由该注解衍生出来的注解非常多：</p>
<p>这里以@ConditionalOnBean 和@ConditionalOnMissingBean 举例。其中@ConditionalOnBean 注解的作用是判断当前容器中是否拥有指定的 Bean，若有才生效，比如：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若如此，则 SpringBoot 在注册 User 对象之前，会先判断容器中是否已经有 id 为 dog 的对象，若有才创建，否则不创建。@ConditionalOnBean 注解共有三种方式判断容器中是否已经存在指定的对象，除了可以判断组件的 id 外，也能够通过判断组件的全类名：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>还可以通过判断组件的类型：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>尤其需要注意的是，因为代码是从上至下依次执行的，所以在注册组件时的顺序要特别注意，比如：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这段程序中，SpringBoot 会先注册 User 对象，而此时 Dog 对象还没有被注册，所以会导致 User 对象无法注册。</p>
<p>而@ConditionalOnMissingBean 注解的作用与@ConditionalOnBean 注解正好相反，它会判断当前容器中是否不存在指定的 Bean，若不存在则生效，否则不生效。</p>
<p>这些注解除了能够标注在方法上，还能作用于类上，当被标注在类上时，若条件成立，则配置类的所有注册方法生效；若条件不成立，则配置类的所有注册方法均不成立。</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>@ImportResource<br>该注解用于导入资源，比如现在有一个 Spring 的配置文件：</p>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若是想将其转化为配置类，代码少一点倒还好说，当配置文件中注册的 Bean 非常多时，采用人工的方式显然不是一个好的办法，为此，SpringBoot 提供了@ImportResource 注解，该注解可以将 Spring 的配置文件直接导入到容器中，自动完成组件注册。</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>@ConfigurationProperties<br>该注解用于配置绑定，也大量运用于 SpringBoot 底层。首先在配置文件中编写两个键值：</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后使用该注解将其绑定到 User 类上：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但结果却有些出乎意料：</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这是因为我们将前缀 prefix 指定为了 user，而 user 可能和我们的系统配置产生了重复，所以导致了这个问题，此时我们只需将前缀修改一下即可：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>前缀修改了，配置文件的内容也需要做相应的修改：</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是，若是想实现配置绑定，就必须要将这个待绑定的类注册到容器中，比如使用@Component 注解，当然，SpringBoot 也提供了一个注解与其配套使用，它就是：@EnableConfigurationProperties 。</p>
<p>该注解必须标注在配置类上：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>作用是开启指定类的配置绑定功能，它的底层其实也是通过@Import 注解实现的，此时 User 类就无需将其注册到容器中：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Spring Boot 会自动将属性值绑定到 User 类，并将其注册到容器中。</p>
</li>
</ul>
<h2> 自动配置原理</h2>
<p>有了前面的注解基础之后，我们就能够更深入地了解 Spring Boot 的自动配置原理，自动配置正是建立在这些强大的注解之上的。</p>
<p>我们首先观察一下主启动类上的注解：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>翻阅源码可以得知，@SpringBootApplication 注解其实是由三个注解组成的：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中@SpringBootConfiguration 底层是@Configuration 注解，它表示主启动类是一个配置类；而@ComponentScan 是扫描注解，它默认扫描的是主启动类当前包及其子包下的组件；最关键的就是@EnableAutoConfiguration 注解了，该注解便实现了自动配置。</p>
<p>查看@EnableAutoConfiguration 注解的源码，又会发现它是由两个注解组合而成的：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们继续查看@AutoConfigurationPackage 注解的源码：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>@Import 注解我们非常熟悉，它是用来导入一个组件的，然而它比较特殊：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里的 Registrar 组件中有两个方法，它是用来导入一系列组件的，而该注解又被间接标注在了启动类上，所以它会将主启动类所在包及其子包下的所有组件均注册到容器中。</p>
<p>接下来我们继续看@EnableAutoConfiguration 的第二个合成注解：@Import({AutoConfigurationImportSelector.class}) 该注解也向容器中注册了一个组件，翻阅该组件的源码：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个方法是用来选择导入哪些组件的，该方法又调用了 getAutoConfigurationEntry()方法得到需要导入的组件，所以我们查看该方法：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 getCandidateConfigurations()方法处打一个断点，通过 debug 运行后我们可以发现，configurations 集合中就已经得到了 127 个自动配置类：</p>
<p>那么这些类究竟从何而来呢？我们需要探究一下 getCandidateConfigurations()方法做了什么操作，它其实是调用了 loadFactoryNames()方法：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>最终调用的是 loadSpringFactories()方法来得到一个 Map 集合：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到，它其实是从 META-INF/spring.factories 文件中获取的组件，我们可以看看导入的依赖中：</p>
<p>在 spring-boot-autoconfigure-2.3.7.RELEASE.jar 的 META-INF 目录下就有一个 spring.factories 文件，打开看看文件内容：</p>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>文件里的内容其实就是在最开始需要注册的组件，这些组件都是一些配置类，只要项目一启动，Spring Boot 就会将这些配置类全部注册到容器中。<br>
按需开启自动配置</p>
<p>虽然配置类会被 Spring Boot 自动注册到容器中，但并不是每个配置类都会默认生效，SpringBoot 会根据当前的场景按需开启自动配置。比如 Thymeleaf 模板引擎的自动配置类：</p>
<p>@ConditionalOnClass 注解的作用是检查当前项目是否有指定的.class 文件，若有则生效；否则不生效。因为我们并未引入 Thymeleaf 的依赖，导致 TemplateMode.class 和 SpringTemplatengine.class 都是不存在的，所以 ThymeleafAutoCinfiguration 并不会生效。</p>
<p>修改默认配置<br>
既然 SpringBoot 帮助我们进行了大量的自动配置，那么对于特殊的一些应用场景，我们该如何修改它的默认配置呢？如果你不了解 SpringBoot 的配置原理，那么当你需要修改默认配置时，你肯定是束手无策的。我们可以找到 SpringMVC 的默认配置，看看 SpringBoot 是如何帮我们进行配置的：</p>
<p>@EnableConfigurationPropertie(WebMvcProperties.class)注解在之前也有介绍，它是用来开启指定类的配置绑定的，所以我们来看看 WebMvcProperties 类：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置绑定的前缀时 spring.mvc，所以我们若是想修改 SpringBoot 的默认配置，则必须要将前缀写为 spring.mvc，至于我们可以修改哪些配置，只需要查看该类中有哪些成员变量即可，比如：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 WebMvcProperties 类中有这样一个内部类，内部类中有 prefix 和 suffix 两个成员变量，它们是分别用来设置视图的前缀和后缀的，所以我们若想进行配置，则需要在配置文件中这样编写：</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> Web 开发</h2>
<ul>
<li>
<p>静态资源处理</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以通过配置来设置资源的访问前缀：</p>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此时若想访问静态资源，就必须添加 res 前缀才行。</p>
<p>我们还可以修改 Spring Boot 的默认资源路径，只需添加配置：</p>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>若如此做，则我们只能将静态资源放在 myImg 目录下，之前的所有静态资源目录都将失效。</p>
</li>
<li>
<p>欢迎页</p>
<p>Spring Boot 提供了两种方式来实现欢迎页，第一种便是在资源目录放置欢迎页：</p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第二种方式是通过 Controller 处理/index 请求：</p>
<p>@Controller<br>
public class HelloController {</p>

<p>}</p>
</li>
<li>
<p>Favicon</p>
<p>Spring Boot 也提供了自动设置网站图标的方式，只需要将名为 favicon.ico 的图片放在静态资源目录下即可：</p>
</li>
<li>
<p>Rest 映射</p>
<p>在 Spring Boot 中，默认已经注册了 HiddenHttpMethodFilter，所以可以直接编写 Rest 风格的 url，只需在表单中添加一个_method 属性的请求域即可：</p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写 Controller 处理请求：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后需要在配置文件中开启对 Rest 的支持：</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>
</ul>
<h2> 常用参数及注解</h2>
<p>下面介绍 Web 开发中的一些常用参数和注解。</p>
<ul>
<li>
<p>@PathVariable</p>
<p>该注解用于获取路径变量，比如：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时若请求 url 为 <a href="http://localhost:8080/user/2%EF%BC%8C%E5%88%99%E8%8E%B7%E5%8F%96%E5%88%B0" target="_blank" rel="noopener noreferrer">http://localhost:8080/user/2，则获取到</a> id 值为 2。</p>
</li>
<li>
<p>@RequestHeader</p>
<p>该注解用于获取请求头，比如：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>它还能够通过一个 Map 集合获取所有的请求头信息：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>@RequestParam</p>
<p>该注解用于获取请求参数，比如：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时若请求 url 为 <a href="http://localhost:8080/param?name=zhangsan&amp;age=20%EF%BC%8C%E5%88%99%E5%BE%97%E5%88%B0%E5%80%BC" target="_blank" rel="noopener noreferrer">http://localhost:8080/param?name=zhangsan&amp;age=20，则得到值</a> zhangsan:20 。</p>
</li>
<li>
<p>@CookieValue</p>
<p>该注解用于获取 Cookie 值，比如：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>它还可以通过 Cookie 键名获取一个 Cookie 对象：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>@RequestBody</p>
<p>该注解用于获取获取请求体的值，比如：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>既然是获取请求体的值，那么只有 Post 请求才有请求体，所以编写一个表单：</p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过该表单提交数据后，得到 username=admin&amp;password=123 。</p>
</li>
<li>
<p>@RequestAttribute</p>
<p>该注解用于获取 request 域的数据，比如：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过键名即可获取 request 域中的数据。</p>
</li>
<li>
<p>@MatrixVariable</p>
<p>该注解用于获取矩阵变量，比如：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于该注解的使用，需要注意几点，首先矩阵变量是绑定在路径中的，所以请求映射中一定要携带一个${path}；其次在 SpringBoot 中默认禁用掉了矩阵变量的功能，所以我们还需要手动去开启该功能：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时访问请求 url：<a href="http://localhost:8080/matrix/test;name=zhangsan;age=20%EF%BC%8C" target="_blank" rel="noopener noreferrer">http://localhost:8080/matrix/test;name=zhangsan;age=20，</a> 得到结果：test---zhangsan:20 。</p>
</li>
</ul>
<h2> 拦截器</h2>
<p>一个完善的 Web 应用一定要考虑安全问题，比如，只有登录上系统的用户才能查看系统内的资源，或者只有具备相关权限，才能访问对应的资源，为此，我们需要学习一下拦截器，通过拦截器我们就能够实现这些安全认证。</p>
<p>这里以登录检查为例：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写好拦截器后需要将其配置到容器中：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要指定该拦截器需要拦截哪些资源，需要放行哪些资源，这样一个简单的登录校验就完成了。</p>
<h2> 文件上传</h2>
<p>Spring Boot 中该如何实现文件上传呢？现有如下的一个表单：</p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写控制方法：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过@RequestPart 注解即可将上传的文件封装到 MultipartFile 中，通过该对象便可以获取到文件的所有信息。</p>
<p>若是上传多个文件，则先修改表单信息：</p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在文件框位置添加 multiple 属性即可支持多文件上传，然后修改控制器代码：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若是需要将上传的文件保存到服务器，则可以如此做：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因为 Spring Boot 默认的文件上传大小限制为 1MB，所以只要文件稍微大了一点就会上传失败，为此，可以修改 SpringBoot 的默认配置：</p>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 错误处理</h2>
<p>默认情况下，SpringBoot 应用出现了异常或错误会自动跳转至/error 页面。</p>
<p>然而一般情况下，我们都不会选择出异常时显示这个页面，而是想要显示我们自己定制的页面，为此，我们可以在/static 或/templates 目录下新建一个 error 目录，并在/error 目录下放置命名为 4xx、5xx 的页面，SpringBoot 会自动帮助我们解析。</p>
<p>此时当出现 5xx 的异常时，SpringBoot 会自动跳转至 5xx.html 页面，当然你也可以对每个状态码都做一个页面进行对应，比如放置 500.html、501.html、502.html 文件，当服务器出现对应的异常时，就会跳转至对应的页面。</p>
<h2> 数据层</h2>
<ul>
<li>
<p>JDBC</p>
<p>若想使用原生的 JDBC 进行开发，SpringBoot 已经为我们配置好了 JDBC 的相关信息，只需要引入依赖：</p>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Spring Boot 底层自动配置了 HikariDataSource 数据源，所以我们只需指定数据源的地址、用户名和密码即可：</p>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因为 SpringBoot 已经自动配置好了 JdbcTemplate，所以我们直接使用就可以了：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>Druid</p>
<p>若是不想使用 Spring Boot 底层的数据源，我们也可以修改默认配置，以 Druid 数据源为例，首先引入依赖：</p>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>并对 Druid 进行配置：</p>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时访问 <a href="http://localhost:8080/druid%EF%BC%8C%E5%B0%86%E4%BC%9A%E6%9D%A5%E5%88%B0" target="_blank" rel="noopener noreferrer">http://localhost:8080/druid，将会来到</a> Druid 的监控页：</p>
</li>
<li>
<p>MyBatis</p>
<p>接下来我们将整合 MyBatis 框架，并介绍它的简单使用。首先引入依赖：</p>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后编写 Mapper 接口：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写 Mappe 配置文件：</p>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后配置一下 MyBatis：</p>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样就可以使用 MyBatis 了：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>Redis</p>
<p>若是想要整合 Redis，也非常地简单，首先引入依赖：</p>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后进行配置：</p>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>只需要配置 Redis 的主机地址就可以操作 Redis 了，操作步骤如下：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若是想使用 Jedis 操作 Redis，则需要导入 Jedis 的依赖：</p>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>并配置：</p>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr>
<p>以下是 redis 的补充</p>
<details class="hint-container details"><summary>RedisConfig</summary>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<details class="hint-container details"><summary>RedisUtils</summary>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
</li>
</ul>
<h2> springboot 启动为所欲为</h2>
<ul>
<li>
<p>@PostConstruct</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>InitializingBean</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>ApplicationListener</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>Constructor</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>CommandLineRunner</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>SmartLifecycle</p>
<p>还有一种更高级的方法来实现我们的逻辑。这可以 Spring 高级开发必备技能哦。</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>SpringBoot-MySQL读写分离</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/10.SpringBoot/11.SpringBoot-MySQL%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/10.SpringBoot/11.SpringBoot-MySQL%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">SpringBoot-MySQL读写分离</source>
      <description>首先思考一个问题:在高并发的场景中,关于数据库都有哪些优化的手段？</description>
      <category>集成配置</category>
      <category>SpringBoot</category>
      <pubDate>Tue, 08 Mar 2022 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>首先思考一个问题:在高并发的场景中,关于数据库都有哪些优化的手段？</p>
<!-- more -->

<p>常用的有以下的实现方法:</p>
<ul>
<li>读写分离</li>
<li>加缓存</li>
<li>主从架构集群</li>
<li>分库分表</li>
<li>读写分离</li>
</ul>
<h2> 读写分离</h2>
<p>主库的职能是负责写,从库主要是负责读,可以建立读库集群,通过读写职能在数据源上的隔离达到减少读写冲突、 释压数据库负载、保护数据库的目的。</p>
<p>在实际的使用中,凡是涉及到写的部分直接切换到主库，读的部分直接切换到读库，这就是典型的读写分离技术。</p>
<p>主从同步的局限性：数据的延迟性。需要时间主从同步。</p>
<h2> 主从数据源的配置</h2>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 数据源路由的配置</h2>
<p>路由在主从分离是非常重要的,基本是读写切换的核心。Spring 提供了 AbstractRoutingDataSource 根据用户定义的规则选择当前的数据源，作用就是在执行查询之前，设置使用的数据源,实现动态路由的数据源，在每次数据库查询操作前执行它的抽象方法 determineCurrentLookupKey() 决定使用哪个数据源。</p>
<p>为了能有一个全局的数据源管理器,此时我们需要引入 DataSourceContextHolder 这个数据库上下文管理器,可以理解为全局的变量,随时可取(见下面详细介绍),它的主要作用就是保存当前的数据源;</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 数据源上下文环境</h2>
<p>数据源上下文保存器,便于程序中可以随时取到当前的数据源,它主要利用 ThreadLocal 封装,因为 ThreadLocal 是线程隔离的,天然具有线程安全的优势。这里暴露了 set 和 get、clear 方法，set 方法用于赋值当前的数据源名,get 方法用于获取当前的数据源名称,clear 方法用于清除 ThreadLocal 中的内容,因为 ThreadLocal 的 key 是 weakReference 是有内存泄漏风险的,通过 remove 方法防止内存泄漏；</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 切换注解和 Aop 配置</h2>
<p>首先我们来定义一个@DataSourceSwitcher 注解,拥有两个属性 ① 当前的数据源 ② 是否清除当前的数据源,并且只能放在方法上,(不可以放在类上,也没必要放在类上,因为我们在进行数据源切换的时候肯定是方法操作),该注解的主要作用就是进行数据源的切换,在 dao 层进行操作数据库的时候,可以在方法上注明表示的是当前使用哪个数据源;</p>
<p>@DataSourceSwitcher 注解的定义:</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>DataSourceAop 配置</p>
<p>为了赋予@DataSourceSwitcher 注解能够切换数据源的能力,我们需要使用 AOP,然后使用@Aroud 注解找到方法上有@DataSourceSwitcher.class 的方法,然后取注解上配置的数据源的值,设置到 DataSourceContextHolder 中,就实现了将当前方法上配置的数据源注入到全局作用域当中;</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 用法以及测试</h2>
<p>在配置好了读写分离之后,就可以在代码中使用了,一般而言我们使用在 service 层或者 dao 层,在需要查询的方法上添加@DataSourceSwitcher(DataSourceEnum.SLAVE),它表示该方法下所有的操作都走的是读库;在需要 update 或者 insert 的时候使用@DataSourceSwitcher(DataSourceEnum.MASTER)表示接下来将会走写库。</p>
<p>其实还有一种更为自动的写法,可以根据方法的前缀来配置 AOP 自动切换数据源,比如 update、insert、fresh 等前缀的方法名一律自动设置为写库,select、get、query 等前缀的方法名一律配置为读库,这是一种更为自动的配置写法。缺点就是方法名需要按照 aop 配置的严格来定义,否则就会失效</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 总结</h2>
<p>介绍了如何实现数据库读写分离,注意读写分离的核心点就是数据路由,需要继承 AbstractRoutingDataSource,复写它的 determineCurrentLookupKey 方法,同时需要注意全局的上下文管理器 DataSourceContextHolder,它是保存数据源上下文的主要类,也是路由方法中寻找的数据源取值,相当于数据源的中转站.再结合 jdbc-Template 的底层去创建和管理数据源、事务等，我们的数据库读写分离就完美实现了</p>
]]></content:encoded>
    </item>
    <item>
      <title>springboot+FastDFS</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/10.SpringBoot/12.springboot_FastDFS.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/10.SpringBoot/12.springboot_FastDFS.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">springboot+FastDFS</source>
      <description>[[toc]] FastDFS springboot 整合 加入依赖 在 springboot 启动类上加 创建 FastDFSClient 工具类 配置 yml 文件 测试类</description>
      <category>集成配置</category>
      <category>SpringBoot</category>
      <pubDate>Tue, 08 Mar 2022 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

<h2> FastDFS</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> springboot 整合 加入依赖</h2>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 在 springboot 启动类上加</h2>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 创建 FastDFSClient 工具类</h2>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 配置 yml 文件</h2>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 测试类</h2>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>springboot+bizlog日志</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/10.SpringBoot/13.springboot_bizlog%E6%97%A5%E5%BF%97.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/10.SpringBoot/13.springboot_bizlog%E6%97%A5%E5%BF%97.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">springboot+bizlog日志</source>
      <description>Springboot-注解-通用操作日志组件 此组件解决的问题是： 「谁」在「什么时间」对「什么」做了「什么事」 github地址：https://github.com/mouzt/mzt-biz-log</description>
      <category>集成配置</category>
      <category>SpringBoot</category>
      <pubDate>Tue, 08 Mar 2022 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<blockquote>
<p>Springboot-注解-通用操作日志组件</p>
<p>此组件解决的问题是： 「谁」在「什么时间」对「什么」做了「什么事」</p>
<p>github地址：<a href="https://github.com/mouzt/mzt-biz-log" target="_blank" rel="noopener noreferrer">https://github.com/mouzt/mzt-biz-log</a></p>
</blockquote>
<!-- more -->

<h2> maven 依赖添加 SDK 依赖</h2>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 添加 @EnableLogRecord 注解</h2>
<p>tenant 是代表租户的标识，一般一个服务或者一个业务下的多个服务都写死一个 tenant 就可以</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 日志埋点</h2>
<h3> 1. 普通的记录日志</h3>
<div class="language-java line-numbers-mode" data-ext="java"><div class="highlight-lines"><br><br><br><br><br><br><br><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 2. 期望记录失败的日志, 如果抛出异常则记录 fail 的日志，没有抛出记录 success 的日志</h3>
<div class="language-java line-numbers-mode" data-ext="java"><div class="highlight-lines"><br><br><div class="highlight-line">&nbsp;</div><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 3. 日志支持种类</h3>
<p>对日志做分类，查询方便，支持更多的业务。</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="highlight-lines"><br><br><br><br><div class="highlight-line">&nbsp;</div><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 4. 支持记录操作的详情或者额外信息</h3>
<p>如果一个操作修改了很多字段，但是 success 的日志模版里面防止过长不能把修改详情全部展示出来，这时候需要把修改的详情保存到 detail 字段， detail 是一个 String ，需要自己序列化。</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="highlight-lines"><br><br><br><div class="highlight-line">&nbsp;</div><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 5. 如何指定操作日志的操作人是什么？框架提供了两种方法</h3>
<p>第一种：手工在 LogRecord 的注解上指定。这种需要方法参数上有 operator</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="highlight-lines"><br><br><br><br><div class="highlight-line">&nbsp;</div><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第二种：通过默认实现类来自动的获取操作人，由于在大部分 web 应用中当前的用户都是保存在一个线程上下文中的，所以每个注解都加一个 operator 获取操作人显得有些重复劳动，所以提供了一个扩展接口来获取操作人 框架提供了一个扩展接口，使用框架的业务可以 implements 这个接口自己实现获取当前用户的逻辑， 对于使用 Springboot 的只需要实现 IOperatorGetService 接口，然后把这个 Service 作为一个单例放到 Spring 的上下文中。使用 Spring Mvc 的就需要自己手工装配这些 bean 了。</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 6. 日志文案调整</h3>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 7. 日志文案调整 使用 SpEL 三目表达式</h3>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ILogRecordService 保存/查询日志的例子,使用者可以根据数据量保存到合适的存储介质上，比如保存在数据库/或者 ES。自己实现保存和删除就可以了</p>
<p>也可以只实现查询的接口，毕竟已经保存在业务的存储上了，查询业务可以自己实现，不走 ILogRecordService 这个接口，毕竟产品经理会提一些千奇百怪的查询需求。</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>IParseFunction 自定义转换函数的接口，可以实现 IParseFunction 实现对 LogRecord 注解中使用的函数扩展 例子：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Springboot启动扩展点总结</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/10.SpringBoot/14.Springboot%E5%90%AF%E5%8A%A8%E6%89%A9%E5%B1%95%E7%82%B9%E6%80%BB%E7%BB%93.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/10.SpringBoot/14.Springboot%E5%90%AF%E5%8A%A8%E6%89%A9%E5%B1%95%E7%82%B9%E6%80%BB%E7%BB%93.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">Springboot启动扩展点总结</source>
      <description>[[toc]] ApplicationContextInitializer org.springframework.context.ApplicationContextInitializer 这是整个 spring 容器在刷新之前初始化 ConfigurableApplicationContext 的回调接口，简单来说，就是在容器刷新之前调用此类的 i...</description>
      <category>集成配置</category>
      <category>SpringBoot</category>
      <pubDate>Tue, 08 Mar 2022 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

<h2> ApplicationContextInitializer</h2>
<blockquote>
<p>org.springframework.context.ApplicationContextInitializer</p>
</blockquote>
<p>这是整个 spring 容器在刷新之前初始化 ConfigurableApplicationContext 的回调接口，简单来说，就是在容器刷新之前调用此类的 initialize 方法。这个点允许被用户自己扩展。用户可以在整个 spring 容器还没被初始化之前做一些事情。</p>
<p>可以想到的场景可能为，在最开始激活一些配置，或者利用这时候 class 还没被类加载器加载的时机，进行动态字节码注入等操作。</p>
<p>扩展方式为：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因为这时候 spring 容器还没被初始化，所以想要自己的扩展的生效，有以下三种方式：</p>
<ul>
<li>在启动类中用 springApplication.addInitializers(new TestApplicationContextInitializer())语句加入</li>
<li>配置文件配置 context.initializer.classes=com.example.demo.TestApplicationContextInitializer</li>
<li>Spring SPI 扩展，在 spring.factories 中加入 org.springframework.context.ApplicationContextInitializer=com.example.demo.TestApplicationContextInitializer</li>
</ul>
<h2> BeanDefinitionRegistryPostProcessor</h2>
<blockquote>
<p>org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor</p>
</blockquote>
<p>这个接口在读取项目中的 beanDefinition 之后执行，提供一个补充的扩展点</p>
<p>使用场景：你可以在这里动态注册自己的 beanDefinition，可以加载 classpath 之外的 bean</p>
<p>扩展方式为:</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> BeanFactoryPostProcessor</h2>
<blockquote>
<p>org.springframework.beans.factory.config.BeanFactoryPostProcessor</p>
</blockquote>
<p>这个接口是 beanFactory 的扩展接口，调用时机在 spring 在读取 beanDefinition 信息之后，实例化 bean 之前。</p>
<p>在这个时机，用户可以通过实现这个扩展接口来自行处理一些东西，比如修改已经注册的 beanDefinition 的元信息。</p>
<p>扩展方式为：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> InstantiationAwareBeanPostProcessor</h2>
<blockquote>
<p>org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor</p>
</blockquote>
<p>该接口继承了 BeanPostProcess 接口，区别如下：</p>
<ul>
<li>eanPostProcess 接口只在 bean 的初始化阶段进行扩展（注入 spring 上下文前后），</li>
<li>而 InstantiationAwareBeanPostProcessor 接口在此基础上增加了 3 个方法，把可扩展的范围增加了实例化阶段和属性注入阶段。</li>
</ul>
<p>该类主要的扩展点有以下 5 个方法，主要在 bean 生命周期的两大阶段：实例化阶段和初始化阶段，下面一起进行说明，按调用顺序为：</p>
<ul>
<li>postProcessBeforeInstantiation：实例化 bean 之前，相当于 new 这个 bean 之前</li>
<li>postProcessAfterInstantiation：实例化 bean 之后，相当于 new 这个 bean 之后</li>
<li>postProcessPropertyValues：bean 已经实例化完成，在属性注入时阶段触发，@Autowired,@Resource 等注解原理基于此方法实现</li>
<li>postProcessBeforeInitialization：初始化 bean 之前，相当于把 bean 注入 spring 上下文之前</li>
<li>postProcessAfterInitialization：初始化 bean 之后，相当于把 bean 注入 spring 上下文之后</li>
</ul>
<p>使用场景：这个扩展点非常有用 ，无论是写中间件和业务中，都能利用这个特性。比如对实现了某一类接口的 bean 在各个生命期间进行收集，或者对某个类型的 bean 进行统一的设值等等。</p>
<p>扩展方式为：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> SmartInstantiationAwareBeanPostProcessor</h2>
<blockquote>
<p>org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor</p>
</blockquote>
<p>该扩展接口有 3 个触发点方法：</p>
<ul>
<li>predictBeanType：该触发点发生在 postProcessBeforeInstantiation 之前(在图上并没有标明，因为一般不太需要扩展这个点)，这个方法用于预测 Bean 的类型，返回第一个预测成功的 Class 类型，如果不能预测返回 null；当你调用 BeanFactory.getType(name)时当通过 bean 的名字无法得到 bean 类型信息时就调用该回调方法来决定类型信息。</li>
<li>determineCandidateConstructors：该触发点发生在 postProcessBeforeInstantiation 之后，用于确定该 bean 的构造函数之用，返回的是该 bean 的所有构造函数列表。用户可以扩展这个点，来自定义选择相应的构造器来实例化这个 bean。</li>
<li>getEarlyBeanReference：该触发点发生在 postProcessAfterInstantiation 之后，当有循环依赖的场景，当 bean 实例化好之后，为了防止有循环依赖，会提前暴露回调方法，用于 bean 实例化的后置处理。这个方法就是在提前暴露的回调方法中触发。</li>
</ul>
<p>扩展方式为：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> BeanFactoryAware</h2>
<blockquote>
<p>org.springframework.beans.factory.BeanFactoryAware</p>
</blockquote>
<p>这个类只有一个触发点，发生在 bean 的实例化之后，注入属性之前，也就是 Setter 之前。这个类的扩展点方法为 setBeanFactory，可以拿到 BeanFactory 这个属性。</p>
<p>使用场景为，你可以在 bean 实例化之后，但还未初始化之前，拿到 BeanFactory，在这个时候，可以对每个 bean 作特殊化的定制。也或者可以把 BeanFactory 拿到进行缓存，日后使用。</p>
<p>扩展方式为：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> ApplicationContextAwareProcessor</h2>
<blockquote>
<p>org.springframework.context.support.ApplicationContextAwareProcessor</p>
</blockquote>
<p>该类本身并没有扩展点，但是该类内部却有 6 个扩展点可供实现 ，这些类触发的时机在 bean 实例化之后，初始化之前</p>
<p>该类用于执行各种驱动接口，在 bean 实例化之后，属性填充之后，通过执行以上红框标出的扩展接口，来获取对应容器的变量。所以这里应该来说是有 6 个扩展点，这里就放一起来说了</p>
<ul>
<li>EnvironmentAware：用于获取 EnviromentAware 的一个扩展类，这个变量非常有用， 可以获得系统内的所有参数。当然个人认为这个 Aware 没必要去扩展，因为 spring 内部都可以通过注入的方式来直接获得。</li>
<li>EmbeddedValueResolverAware：用于获取 StringValueResolver 的一个扩展类， StringValueResolver 用于获取基于 String 类型的 properties 的变量，一般我们都用@Value 的方式去获取，如果实现了这个 Aware 接口，把 StringValueResolver 缓存起来，通过这个类去获取 String 类型的变量，效果是一样的。</li>
<li>ResourceLoaderAware：用于获取 ResourceLoader 的一个扩展类，ResourceLoader 可以用于获取 classpath 内所有的资源对象，可以扩展此类来拿到 ResourceLoader 对象。</li>
<li>ApplicationEventPublisherAware：用于获取 ApplicationEventPublisher 的一个扩展类，ApplicationEventPublisher 可以用来发布事件，结合 ApplicationListener 来共同使用，下文在介绍 ApplicationListener 时会详细提到。这个对象也可以通过 spring 注入的方式来获得。</li>
<li>MessageSourceAware：用于获取 MessageSource 的一个扩展类，MessageSource 主要用来做国际化。</li>
<li>ApplicationContextAware：用来获取 ApplicationContext 的一个扩展类，ApplicationContext 应该是很多人非常熟悉的一个类了，就是 spring 上下文管理器，可以手动的获取任何在 spring 上下文注册的 bean，我们经常扩展这个接口来缓存 spring 上下文，包装成静态方法。同时 ApplicationContext 也实现了 BeanFactory，MessageSource，ApplicationEventPublisher 等接口，也可以用来做相关接口的事情。</li>
</ul>
<h2> BeanNameAware</h2>
<blockquote>
<p>org.springframework.beans.factory.BeanNameAware</p>
</blockquote>
<p>可以看到，这个类也是 Aware 扩展的一种，触发点在 bean 的初始化之前，也就是 postProcessBeforeInitialization 之前，这个类的触发点方法只有一个：setBeanName</p>
<p>使用场景为：用户可以扩展这个点，在初始化 bean 之前拿到 spring 容器中注册的的 beanName，来自行修改这个 beanName 的值。</p>
<p>扩展方式为：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> @PostConstruct</h2>
<blockquote>
<p>javax.annotation.PostConstruct</p>
</blockquote>
<p>这个并不算一个扩展点，其实就是一个标注。其作用是在 bean 的初始化阶段，如果对一个方法标注了@PostConstruct，会先调用这个方法。这里重点是要关注下这个标准的触发点，这个触发点是在 postProcessBeforeInitialization 之后，InitializingBean.afterPropertiesSet 之前。</p>
<p>使用场景：用户可以对某一方法进行标注，来进行初始化某一个属性</p>
<p>扩展方式为：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> InitializingBean</h2>
<blockquote>
<p>org.springframework.beans.factory.InitializingBean</p>
</blockquote>
<p>这个类，顾名思义，也是用来初始化 bean 的。InitializingBean 接口为 bean 提供了初始化方法的方式，它只包括 afterPropertiesSet 方法，凡是继承该接口的类，在初始化 bean 的时候都会执行该方法。这个扩展点的触发时机在 postProcessAfterInitialization 之前。</p>
<p>使用场景：用户实现此接口，来进行系统启动的时候一些业务指标的初始化工作。</p>
<p>扩展方式为：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> FactoryBean</h2>
<blockquote>
<p>org.springframework.beans.factory.FactoryBean</p>
</blockquote>
<p>一般情况下，Spring 通过反射机制利用 bean 的 class 属性指定支线类去实例化 bean，在某些情况下，实例化 Bean 过程比较复杂，如果按照传统的方式，则需要在 bean 中提供大量的配置信息。配置方式的灵活性是受限的，这时采用编码的方式可能会得到一个简单的方案。Spring 为此提供了一个<code>org.springframework.bean.factory.FactoryBean</code>的工厂类接口，用户可以通过实现该接口定制实例化 Bean 的逻辑。<code>FactoryBean</code>接口对于 Spring 框架来说占用重要的地位，Spring 自身就提供了 70 多个<code>FactoryBean</code>的实现。它们隐藏了实例化一些复杂 bean 的细节，给上层应用带来了便利。从 Spring3.0 开始，FactoryBean 开始支持泛型，即接口声明改为<code>FactoryBean&lt;T&gt;</code>的形式</p>
<p>使用场景：用户可以扩展这个类，来为要实例化的 bean 作一个代理，比如为该对象的所有的方法作一个拦截，在调用前后输出一行 log，模仿 ProxyFactoryBean 的功能。</p>
<p>扩展方式为：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> SmartInitializingSingleton</h2>
<blockquote>
<p>org.springframework.beans.factory.SmartInitializingSingleton</p>
</blockquote>
<p>这个接口中只有一个方法 afterSingletonsInstantiated，其作用是是 在 spring 容器管理的所有单例对象（非懒加载对象）初始化完成之后调用的回调接口。其触发时机为 postProcessAfterInitialization 之后。</p>
<p>使用场景：用户可以扩展此接口在对所有单例对象初始化完毕后，做一些后置的业务处理。</p>
<p>扩展方式为：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> CommandLineRunner</h2>
<blockquote>
<p>org.springframework.boot.CommandLineRunner</p>
</blockquote>
<p>这个接口也只有一个方法：run(String... args)，触发时机为整个项目启动完毕后，自动执行。如果有多个 CommandLineRunner，可以利用@Order 来进行排序。</p>
<p>使用场景：用户扩展此接口，进行启动项目之后一些业务的预处理。</p>
<p>扩展方式为：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> DisposableBean</h2>
<blockquote>
<p>org.springframework.beans.factory.DisposableBean</p>
</blockquote>
<p>这个扩展点也只有一个方法：destroy()，其触发时机为当此对象销毁时，会自动执行这个方法。比如说运行 applicationContext.registerShutdownHook 时，就会触发这个方法。</p>
<p>扩展方式为：</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> ApplicationListener</h2>
<blockquote>
<p>org.springframework.context.ApplicationListener</p>
</blockquote>
<p>准确的说，这个应该不算 spring&amp;springboot 当中的一个扩展点，ApplicationListener 可以监听某个事件的 event，触发时机可以穿插在业务方法执行过程中，用户可以自定义某个业务事件。但是 spring 内部也有一些内置事件，这种事件，可以穿插在启动调用中。我们也可以利用这个特性，来自己做一些内置事件的监听器来达到和前面一些触发点大致相同的事情。</p>
<p>接下来罗列下 spring 主要的内置事件：</p>
<ul>
<li>ContextRefreshedEvent<br><br>
ApplicationContext 被初始化或刷新时，该事件被发布。这也可以在 ConfigurableApplicationContext 接口中使用 refresh()方法来发生。此处的初始化是指：所有的 Bean 被成功装载，后处理 Bean 被检测并激活，所有 Singleton Bean 被预实例化，ApplicationContext 容器已就绪可用。</li>
<li>ContextStartedEvent<br><br>
当使用 ConfigurableApplicationContext （ApplicationContext 子接口）接口中的 start() 方法启动 ApplicationContext 时，该事件被发布。你可以调查你的数据库，或者你可以在接受到这个事件后重启任何停止的应用程序。</li>
<li>ContextStoppedEvent<br><br>
当使用 ConfigurableApplicationContext 接口中的 stop()停止 ApplicationContext 时，发布这个事件。你可以在接受到这个事件后做必要的清理的工作</li>
<li>ContextClosedEvent<br><br>
当使用 ConfigurableApplicationContext 接口中的 close()方法关闭 ApplicationContext 时，该事件被发布。一个已关闭的上下文到达生命周期末端；它不能被刷新或重启</li>
<li>RequestHandledEvent<br><br>
这是一个 web-specific 事件，告诉所有 bean HTTP 请求已经被服务。只能应用于使用 DispatcherServlet 的 Web 应用。在使用 Spring 作为前端的 MVC 控制器时，当 Spring 处理用户请求结束后，系统会自动触发该事件</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>SpringBoot性能</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/10.SpringBoot/15.SpringBoot%E6%80%A7%E8%83%BD.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/10.SpringBoot/15.SpringBoot%E6%80%A7%E8%83%BD.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">SpringBoot性能</source>
      <description>[[toc]] 异步执行 使用异步注解 @aysnc、启动类：添加 @EnableAsync 注解; JDK 8 本身有一个非常好用的 Future 类——CompletableFuture; CompletableFuture 异步调用使用 Callable 来实现 异步调用的方式 WebAsyncTask 增加内嵌 Tomcat 的最大连接数 使用...</description>
      <category>集成配置</category>
      <category>SpringBoot</category>
      <pubDate>Tue, 08 Mar 2022 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

<h2> 异步执行</h2>
<ul>
<li>使用异步注解 @aysnc、启动类：添加 @EnableAsync 注解</li>
<li>JDK 8 本身有一个非常好用的 Future 类——CompletableFuture</li>
</ul>
<h4> CompletableFuture</h4>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 异步调用使用 Callable 来实现</h4>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 异步调用的方式 WebAsyncTask</h4>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 增加内嵌 Tomcat 的最大连接数</h2>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 使用 @ComponentScan()</h2>
<blockquote>
<p>使用 @ComponentScan() 定位扫包比 @SpringBootApplication 扫包更快。</p>
</blockquote>
<h2> 默认 Tomcat 容器改为 Undertow</h2>
<blockquote>
<p>默认 Tomcat 容器改为 Undertow（Jboss 下的服务器，Tomcat 吞吐量 5000，Undertow 吞吐量 8000）</p>
</blockquote>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 使用 BufferedWriter 进行缓冲</h2>
<blockquote></blockquote>
<h2> Deferred 方式实现异步调用</h2>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 异步调用可以使用 AsyncHandlerInterceptor 进行拦截</h2>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>MyBatis</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/10.SpringBoot/20.MyBatis.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/10.SpringBoot/20.MyBatis.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">MyBatis</source>
      <description>[[toc]] #{}和${}的区别是什么？ 1. #{}是预编译处理，${}是字符串替换。 2. Mybatis 在处理#{}时，会将 sql 中的#{}替换为?号，调用 PreparedStatement 的 set 方法来赋值； 3. Mybatis 在处理{}时，就是把${}替换成变量的值。 4. 使用#{}可以有效的防止 SQL 注入，提高系...</description>
      <category>集成配置</category>
      <category>SpringBoot</category>
      <pubDate>Tue, 08 Mar 2022 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

<h2> #{}和${}的区别是什么？</h2>
<ol>
<li>#{}是预编译处理，${}是字符串替换。</li>
<li>Mybatis 在处理#{}时，会将 sql 中的#{}替换为?号，调用 PreparedStatement 的 set 方法来赋值；</li>
<li>Mybatis 在处理{}时，就是把${}替换成变量的值。</li>
<li>使用#{}可以有效的防止 SQL 注入，提高系统安全性</li>
</ol>
<blockquote>
<p>链接地址：<a href="https://mp.weixin.qq.com/s/gEN0TDA3wrCel-mA8MMmlw" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/gEN0TDA3wrCel-mA8MMmlw</a></p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>zookeeper安装</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/10.SpringBoot/30.zookeeper%E5%AE%89%E8%A3%85.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/10.SpringBoot/30.zookeeper%E5%AE%89%E8%A3%85.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">zookeeper安装</source>
      <description>[[toc]] ZooKeeper 是一个分布式的，开放源码的分布式应用程序协调服务，ZooKeeper 是以 Fast Paxos 算法为基础，实现同步服务，配置维护和命名服务等分布式应用。 Zookeeper 分布式服务框架是 Apache Hadoop 的一个子项目，它主要是用来解决分布式应用中经常遇到的一些数据管理问题，如：统一命名服务、状态同...</description>
      <category>集成配置</category>
      <category>SpringBoot</category>
      <pubDate>Tue, 08 Mar 2022 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

<p>ZooKeeper 是一个分布式的，开放源码的分布式应用程序协调服务，ZooKeeper 是以 Fast Paxos 算法为基础，实现同步服务，配置维护和命名服务等分布式应用。</p>
<p>Zookeeper 分布式服务框架是 Apache Hadoop 的一个子项目，它主要是用来解决分布式应用中经常遇到的一些数据管理问题，如：统一命名服务、状态同步服务、集群管理、分布式应用配置项的管理等。核心词就是一个，协调。</p>
<p>官网地址：<a href="http://www.apache.org/dyn/closer.cgi/zookeeper/" target="_blank" rel="noopener noreferrer">http://www.apache.org/dyn/closer.cgi/zookeeper/</a></p>
<!-- more -->
<h2> zookeeper 下载</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> ZooKeeper 单机模式</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 使用 nc 来向 zk 发送 4 字母命令</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>conf</td>
<td>zk 服务配置的详细信息</td>
</tr>
<tr>
<td>stat</td>
<td>客户端与 zk 连接的简要信息</td>
</tr>
<tr>
<td>srvr</td>
<td>zk 服务的详细信息</td>
</tr>
<tr>
<td>cons</td>
<td>客户端与 zk 连接的详细信息</td>
</tr>
<tr>
<td>mntr</td>
<td>zk 服务目前的性能状况</td>
</tr>
<tr>
<td>wchs</td>
<td>watch 的简要信息</td>
</tr>
<tr>
<td>wchc</td>
<td>watch 的详细信息，客户端 -&gt; watch 的映射，线上环境要小心使用</td>
</tr>
<tr>
<td>wchp</td>
<td>watch 的详细信息, znode -&gt; 客户端的映射，线上环境要小心使用</td>
</tr>
</tbody>
</table>
<h2> zookeeper 集群模式</h2>
<p>单机模式的 zk 进程虽然便于开发与测试，但并不适合在生产环境使用。在生产环境下，我们需要使用集群模式来对 zk 进行部署。</p>
<p>在集群模式下，建议至少部署 3 个 zk 进程，或者部署奇数个 zk 进程。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> zookeeper 可视化工具（服务器推荐）</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> windows 客户端（推荐）</h2>
<p>下载地址：<a href="https://github.com/HelloKittyNII/ZooViewer" target="_blank" rel="noopener noreferrer">https://github.com/HelloKittyNII/ZooViewer</a></p>
<p>将下载的 zooview.zip 解压。</p>
<p>鼠标双击 startup.bat 进行启动</p>
<p>输入 zookeeper 连接：192.16.18.101:2181</p>
<h2> windows 客户端</h2>
<p>下载地址：<a href="https://issues.apache.org/jira/secure/attachment/12436620/ZooInspector.zip" target="_blank" rel="noopener noreferrer">https://issues.apache.org/jira/secure/attachment/12436620/ZooInspector.zip</a></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>dubbo安装部署</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/10.SpringBoot/50.dubbo%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/10.SpringBoot/50.dubbo%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">dubbo安装部署</source>
      <description>Dubbo 官网为 http://dubbo.apache.org。该官网是 Dubbo 正式进入 Apache 开源孵化器后改的。Dubbo 原官网为：http://dubbo.io Dubbo 官网已做过了中英文国际化，用户可在中英文间任何切换。 Apache Dubbo 是一款高性能、轻量级的开源 Java 服务框架 官方文档：https://dubbo.apache.org/zh/docs/</description>
      <category>集成配置</category>
      <category>SpringBoot</category>
      <pubDate>Tue, 08 Mar 2022 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>Dubbo 官网为 <a href="http://dubbo.apache.org" target="_blank" rel="noopener noreferrer">http://dubbo.apache.org</a>。该官网是 Dubbo 正式进入 Apache 开源孵化器后改的。Dubbo 原官网为：<a href="http://dubbo.io" target="_blank" rel="noopener noreferrer">http://dubbo.io</a></p>
<p>Dubbo 官网已做过了中英文国际化，用户可在中英文间任何切换。</p>
<p>Apache Dubbo 是一款高性能、轻量级的开源 Java 服务框架</p>
<p>官方文档：<a href="https://dubbo.apache.org/zh/docs/" target="_blank" rel="noopener noreferrer">https://dubbo.apache.org/zh/docs/</a></p>
<!-- more -->

<h2> 架构</h2>
<p>官网地址：<a href="https://dubbo.apache.org/zh/docs/v2.7/user/preface/architecture/" target="_blank" rel="noopener noreferrer">https://dubbo.apache.org/zh/docs/v2.7/user/preface/architecture/</a></p>
<p>Dubbo 中的四大组件：</p>
<ul>
<li>Provider：服务提供者。</li>
<li>Consumer：服务消费者。</li>
<li>Registry：服务注册与发现的中心，提供目录服务，亦称为服务注册中心</li>
<li>Monitor：统计服务的调用次数、调用时间等信息的日志服务，并可以对服务设置权限、降级处理等，称为服务管控中心</li>
</ul>
<figure><img src="https://dubbo.apache.org/imgs/user/dubbo-architecture.jpg" alt="dubbo" tabindex="0" loading="lazy"><figcaption>dubbo</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://dubbo.apache.org/imgs/user/dubbo-architecture.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>Redis初识</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/20.%E7%BC%93%E5%AD%98Reids/10.Redis%E5%88%9D%E8%AF%86.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/20.%E7%BC%93%E5%AD%98Reids/10.Redis%E5%88%9D%E8%AF%86.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">Redis初识</source>
      <description>[[toc]] Redis 官网 官网地址：http://redis.io/ (http://redis.io/); 官网地址（中文）：http://www.redis.cn/ (http://www.redis.cn/); 下载地址： http://download.redis.io/releases/ (http://download.redis....</description>
      <category>集成配置</category>
      <category>缓存Reids</category>
      <pubDate>Wed, 08 Jun 2022 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

<h2> Redis 官网</h2>
<ul>
<li>官网地址：<a href="http://redis.io/" target="_blank" rel="noopener noreferrer">http://redis.io/</a></li>
<li>官网地址（中文）：<a href="http://www.redis.cn/" target="_blank" rel="noopener noreferrer">http://www.redis.cn/</a></li>
<li>下载地址： <a href="http://download.redis.io/releases/" target="_blank" rel="noopener noreferrer">http://download.redis.io/releases/</a></li>
<li>Github 源码：<a href="https://github.com/antirez/redis" target="_blank" rel="noopener noreferrer">https://github.com/antirez/redis</a></li>
<li>源码（带注释）：<a href="https://github.com/huangz1990/redis-3.0-annotated" target="_blank" rel="noopener noreferrer">https://github.com/huangz1990/redis-3.0-annotated</a></li>
<li>Redis 命令参考：<a href="http://doc.redisfans.com/" target="_blank" rel="noopener noreferrer">http://doc.redisfans.com/</a></li>
<li>测试工具 redis-benchmark：<a href="https://redis.io/topics/benchmarks" target="_blank" rel="noopener noreferrer">https://redis.io/topics/benchmarks</a></li>
</ul>
<h2> Windows 安装</h2>
<blockquote>
<p>下载地址：<a href="https://github.com/microsoftarchive/redis/releases/" target="_blank" rel="noopener noreferrer">https://github.com/microsoftarchive/redis/releases/</a></p>
</blockquote>
<h2> CentOS 安装</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其他命令说明</p>
<ul>
<li>redis-server ：启动 redis 服务</li>
<li>redis-cli ：进入 redis 命令客户端</li>
<li>redis-benchmark： 性能测试的工具</li>
<li>redis-check-aof ： aof 文件进行检查的工具</li>
<li>redis-check-dump ： rdb 文件进行检查的工具</li>
<li>redis-sentinel ： 启动哨兵监控服务</li>
</ul>
<h2> Redis 客户端链接</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> Redis 开机自启</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> Java 客户端 Jedis</h2>
<blockquote>
<p>github 地址：<a href="https://github.com/xetorthio/jedis" target="_blank" rel="noopener noreferrer">https://github.com/xetorthio/jedis</a></p>
</blockquote>
<ul>
<li>
<p>添加依赖</p>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>单实例连接</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>连接池连接</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>连接 redis 集群</p>
<blockquote>
<p>创建 JedisCluster 类连接 redis 集群。</p>
</blockquote>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>Jedis 整合 spring</p>
<blockquote>
<p>配置 spring 配置文件 applicationContext.xml</p>
</blockquote>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试代码</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>一键安装Redis的任意版本</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/20.%E7%BC%93%E5%AD%98Reids/11.%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85Redis%E7%9A%84%E4%BB%BB%E6%84%8F%E7%89%88%E6%9C%AC.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/20.%E7%BC%93%E5%AD%98Reids/11.%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85Redis%E7%9A%84%E4%BB%BB%E6%84%8F%E7%89%88%E6%9C%AC.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">一键安装Redis的任意版本</source>
      <description>[[toc]] 执行脚本 脚本内容 cat redis-install.sh</description>
      <category>集成配置</category>
      <category>缓存Reids</category>
      <pubDate>Wed, 08 Jun 2022 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

<h2> 执行脚本</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 脚本内容</h2>
<p>cat <a href="http://redis-install.sh" target="_blank" rel="noopener noreferrer">redis-install.sh</a></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Redis命令</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/20.%E7%BC%93%E5%AD%98Reids/20.Redis%E5%91%BD%E4%BB%A4.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/20.%E7%BC%93%E5%AD%98Reids/20.Redis%E5%91%BD%E4%BB%A4.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">Redis命令</source>
      <description>官方命令大全网址：http://www.redis.cn/commands.html</description>
      <category>集成配置</category>
      <category>缓存Reids</category>
      <pubDate>Wed, 08 Jun 2022 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<blockquote>
<p>官方命令大全网址：<a href="http://www.redis.cn/commands.html" target="_blank" rel="noopener noreferrer">http://www.redis.cn/commands.html</a></p>
</blockquote>
<!-- more -->

<h2> 数据类型</h2>
<table>
<thead>
<tr>
<th>数据类型</th>
<th>简单描述</th>
<th>使用场景</th>
</tr>
</thead>
<tbody>
<tr>
<td>String</td>
<td>常规的 key-value 缓存应用</td>
<td>场景：共享用户 session，计数器(<code>INCR</code>)，分布式锁(<code>setnx</code>)</td>
</tr>
<tr>
<td>hash</td>
<td>string 类型的 field 和 value 的映射表,适合用于存储对象</td>
<td>场景：爆品商品，秒杀仓库，库存量</td>
</tr>
<tr>
<td>list</td>
<td>存储列表结构，有序(插入顺序)可重复，基于<code>lrange</code>可实现简单的高性能分页</td>
<td>场景：文章的评论，简单的消息队列</td>
</tr>
<tr>
<td>set</td>
<td>无序，不重复</td>
<td>场景：共同好友，共同喜好，二度好友(你可能认识)</td>
</tr>
<tr>
<td>Zset</td>
<td>内部使用 HashMap 和跳跃表(SkipList)来保证数据的存储和有序</td>
<td>场景：排行榜，有权重的消息队列，热搜，</td>
</tr>
<tr>
<td>BitMap</td>
<td>通过一个 bit 位来表示某个元素对应的值或者状态</td>
<td>场景：统计用户的活跃数，在线人数</td>
</tr>
<tr>
<td>HyperLogLog</td>
<td>基于 bitmap 计数，内部编码主要分稀疏型和密集型</td>
<td>场景：记录网站 IP 注册数，每日访问的 IP 数，页面实时 UV、在线用户人数</td>
</tr>
<tr>
<td>Geospatial</td>
<td></td>
<td>场景：保存地理位置，位置距离计算，根据半径计算位置</td>
</tr>
</tbody>
</table>
<h2> Redis 基本命令</h2>
<table>
<thead>
<tr>
<th style="text-align:center">数据类型</th>
<th style="text-align:left">redis 命令</th>
<th>命令说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">通用指令</td>
<td style="text-align:left">del key</td>
<td>删除指定的 key</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">exists key</td>
<td>指定的 key 是否存在</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">type key</td>
<td>获取 key 的类型</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">expire key seconds</td>
<td>设置有效时间，单位：秒</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">pexpire key milliseconds</td>
<td>设置有效时间，单位：毫秒</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">expireat key timestamp</td>
<td>设置时间戳，单位：秒</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">pexpireat key milliseconds-timestamp</td>
<td>设置时间戳，单位：毫秒</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">ttl key</td>
<td>返回有效时间，单位：秒，key 存在但未设置有效时间，则返回-1</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">pttl key</td>
<td>返回有效时间，单位：毫秒，key 不存在，则返回-2</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">persist key</td>
<td>将 key 从时效性切换为永久性</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">keys *</td>
<td>pattern 是匹配模式，若是指定为 <code>*</code> 则查询所有 key</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">rename key newkey</td>
<td>重命名，覆盖式</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">renamenx key newkey</td>
<td>重命名，newkey 存在则报错</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">dbsize</td>
<td>返回当前数据库的 key 数量</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">flushdb</td>
<td><strong>清空当前数据库的 key</strong></td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">flushall</td>
<td><strong>清空所有数据库的 key</strong></td>
</tr>
<tr>
<td style="text-align:center">String</td>
<td style="text-align:left">mset name lisi age 30 gender 1</td>
<td>一次性保存多个数据</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">mget name age gender</td>
<td>一次性取出多个数据</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">strlen name</td>
<td>字符串长度</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">append name abc</td>
<td>字符串追加</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">incr num</td>
<td>自增一</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">incrby num 2</td>
<td>自增指定步长</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">incrbyfloat num 0.5</td>
<td>自增小数</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">decr num</td>
<td>自减一</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">decrby num 2</td>
<td>自减指定步长</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">decrbyfloat num 0.5</td>
<td>自减小数</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">setex key seconds 1</td>
<td>设置 key 的有效期，单位是秒</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">psetex key milliseconds 1000</td>
<td>设置 key 的有效期，单位是毫秒</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">del name</td>
<td>删除 name</td>
</tr>
<tr>
<td style="text-align:center">hash</td>
<td style="text-align:left">hmset user name zhangsan age 20</td>
<td>同时设置多个属性</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">hgetall user</td>
<td>将属性一次性读取出来</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">hmget user name age</td>
<td>获取指定属性</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">hdel user name</td>
<td>删除属性</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">hlen user</td>
<td>hash 中属性的数量</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">hexists user name</td>
<td>判断 hash 中是否存在指定的属性，存在返回 1，不存在返回 0</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">hincrby user age 1</td>
<td>属性自增</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">hincrbyfloat user age 0.5</td>
<td>属性自增小数</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">hincrby user age -1</td>
<td>属性自减</td>
</tr>
<tr>
<td style="text-align:center">list</td>
<td style="text-align:left">lpush nums 1 2 3 4 5</td>
<td>从左侧添加</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">rpush nums 1 2 3 4 5</td>
<td>从右侧添加</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">lrange nums 0 4</td>
<td>读取的索引范围</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">lpop key</td>
<td>从左侧弹出数据</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">rpop key</td>
<td>从右侧弹出数据</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">lrem nums 1 2</td>
<td>从数据中移除[cout]个指定数据[value]</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">lindex nums 0</td>
<td>获取指定索引上的数据</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">llen nums</td>
<td>获取 list 的长度</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">blpop nums 2 3 30</td>
<td>规定时间内获取并移除数据、blpop key1 [key2] timeout</td>
</tr>
<tr>
<td style="text-align:center">set</td>
<td style="text-align:left">sadd nums 1 2 3</td>
<td>添加数据</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">smembers nums</td>
<td>获取到 set 中的所有数据</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">srem nums 1 2</td>
<td>删除数据</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">sismember nums 1</td>
<td>判断 set 中是否包含指定的数据</td>
</tr>
<tr>
<td style="text-align:center">sorted_set</td>
<td style="text-align:left">zadd scores 95 chinese 98 math 85 english</td>
<td>保存数据</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">zrange scores 0 -1</td>
<td>获取全部数据</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">zrange scores 0 -1 withscores</td>
<td>排序的方式获取数据</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">zrevrange scores 0 -1 withscores</td>
<td>逆序的方式获取数据</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">zrem scores chinese math</td>
<td>删除数据</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">zrangebyscore scores 0 95</td>
<td>其中 scores 是 key， <code>0 95</code> 是查找范围</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td style="text-align:left">zrangebyscore scores 0 100 limit 0 2</td>
<td>查询分数在 100 以下的前两个数据</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>Redis常见延迟问题定位与分析</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/20.%E7%BC%93%E5%AD%98Reids/21.Redis%E5%B8%B8%E8%A7%81%E5%BB%B6%E8%BF%9F%E9%97%AE%E9%A2%98%E5%AE%9A%E4%BD%8D%E4%B8%8E%E5%88%86%E6%9E%90.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/20.%E7%BC%93%E5%AD%98Reids/21.Redis%E5%B8%B8%E8%A7%81%E5%BB%B6%E8%BF%9F%E9%97%AE%E9%A2%98%E5%AE%9A%E4%BD%8D%E4%B8%8E%E5%88%86%E6%9E%90.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">Redis常见延迟问题定位与分析</source>
      <description>Redis 越来越慢？常见延迟问题定位与分析 Redis 作为内存数据库，拥有非常高的性能，单个实例的 QPS 能够达到 10W 左右。但我们在使用 Redis 时，经常时不时会出现访问延迟很大的情况，如果你不知道 Redis 的内部实现原理，在排查问题时就会一头雾水。 很多时候，Redis 出现访问延迟变大，都与我们的使用不当或运维不合理导致的。 这篇文章我们就来分析一下 Redis 在使用过程中，经常会遇到的延迟问题以及如何定位和分析。</description>
      <category>集成配置</category>
      <category>缓存Reids</category>
      <pubDate>Wed, 08 Jun 2022 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>Redis 越来越慢？常见延迟问题定位与分析</p>
<p>Redis 作为内存数据库，拥有非常高的性能，单个实例的 QPS 能够达到 10W 左右。但我们在使用 Redis 时，经常时不时会出现访问延迟很大的情况，如果你不知道 Redis 的内部实现原理，在排查问题时就会一头雾水。</p>
<p>很多时候，Redis 出现访问延迟变大，都与我们的使用不当或运维不合理导致的。</p>
<p>这篇文章我们就来分析一下 Redis 在使用过程中，经常会遇到的延迟问题以及如何定位和分析。</p>
<!-- more -->

<h2> 使用复杂度高的命令</h2>
<p>如果在使用 Redis 时，发现访问延迟突然增大，如何进行排查？<br>
首先，第一步，建议你去查看一下 Redis 的慢日志。Redis 提供了慢日志命令的统计功能，我们通过以下设置，就可以查看有哪些命令在执行时延迟比较大。</p>
<p>首先设置 Redis 的慢日志阈值，只有超过阈值的命令才会被记录，这里的单位是微秒，例如设置慢日志的阈值为 5 毫秒，同时设置只保留最近 1000 条慢日志记录</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解决方案就是，不使用这些复杂度较高的命令，并且一次不要获取太多的数据，每次尽量操作少量的数据，让 Redis 可以及时处理返回。</p>
<h2> 存储大 key</h2>
<p>如果一个 key 写入的数据非常大，Redis 在分配内存时也会比较耗时。同样的，当删除这个 key 的数据时，释放内存也会耗时比较久。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是当我们在线上实例进行大 key 扫描时，Redis 的 QPS 会突增，为了降低扫描过程中对 Redis 的影响，我们需要控制扫描的频率，使用-i 参数控制即可，它表示扫描过程中每次扫描的时间间隔，单位是秒。</p>
<p>使用这个命令的原理，其实就是 Redis 在内部执行 scan 命令，遍历所有 key，然后针对不同类型的 key 执行 strlen、llen、hlen、scard、zcard 来获取字符串的长度以及容器类型(list/dict/set/zset)的元素个数。</p>
<p>针对大 key 的问题，Redis 官方在 4.0 版本推出了 lazy-free 的机制，用于异步释放大 key 的内存，降低对 Redis 性能的影响。即使这样，我们也不建议使用大 key，大 key 在集群的迁移过程中，也会影响到迁移的性能，</p>
<h2> 集中过期</h2>
<p>有时你会发现，平时在使用 Redis 时没有延时比较大的情况，但在某个时间点突然出现一波延时，而且报慢的时间点很有规律，例如某个整点，或者间隔多久就会发生一次。</p>
<p>如果出现这种情况，就需要考虑是否存在大量 key 集中过期的情况。</p>
<p>Redis 的过期策略采用主动过期+懒惰过期两种策略：</p>
<ul>
<li>主动过期：<br>
Redis 内部维护一个定时任务，默认每隔 100 毫秒会从过期字典中随机取出 20 个 key，删除过期的 key，如果过期 key 的比例超过了 25%，则继续获取 20 个 key，删除过期的 key，循环往复，直到过期 key 的比例下降到 25%或者这次任务的执行耗时超过了 25 毫秒，才会退出循环</li>
<li>懒惰过期：<br>
只有当访问某个 key 时，才判断这个 key 是否已过期，如果已经过期，则从实例中删除</li>
</ul>
<p>注意，Redis 的主动过期的定时任务，也是在 Redis<strong>主线程</strong>中执行的，也就是说如果在执行主动过期的过程中，出现了需要大量删除过期 key 的情况，那么在业务访问时，必须等这个过期任务执行结束，才可以处理业务请求。此时就会出现，业务访问延时增大的问题，最大延迟为 25 毫秒。</p>
<p>而且这个访问延迟的情况，不会记录在慢日志里。慢日志中只记录真正执行某个命令的耗时，Redis 主动过期策略执行在操作命令之前，如果操作命令耗时达不到慢日志阈值，它是不会计算在慢日志统计中的，但我们的业务却感到了延迟增大。</p>
<p>此时你需要检查你的业务，是否真的存在集中过期的代码，一般集中过期使用的命令是 expireat 或 pexpireat 命令，在代码中搜索这个关键字就可以了。</p>
<p>如果你的业务确实需要集中过期掉某些 key，又不想导致 Redis 发生抖动，有什么优化方案？</p>
<p>解决方案是，在集中过期时增加一个<code>随机时间</code>，把这些需要过期的 key 的时间打散即可。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这样 Redis 在处理过期时，不会因为集中删除 key 导致压力过大，阻塞主线程。</p>
<h2> 实例内存达到上限</h2>
<p>有时我们把 Redis 当做纯缓存使用，就会给实例设置一个内存上限 maxmemory，然后开启 LRU 淘汰策略。</p>
<p>当实例的内存达到了 maxmemory 后，你会发现之后的每次写入新的数据，有可能变慢了。</p>
<p>导致变慢的原因是，当 Redis 内存达到 maxmemory 后，每次写入新的数据之前，必须先踢出一部分数据，让内存维持在 maxmemory 之下。</p>
<p>这个踢出旧数据的逻辑也是需要消耗时间的，而具体耗时的长短，要取决于配置的淘汰策略：</p>
<ul>
<li><strong>allkeys-lru</strong>：不管 key 是否设置了过期，淘汰最近最少访问的 key</li>
<li><strong>volatile-lru</strong>：只淘汰最近最少访问并设置过期的 key</li>
<li>allkeys-random：不管 key 是否设置了过期，随机淘汰</li>
<li>volatile-random：只随机淘汰有设置过期的 key</li>
<li>allkeys-ttl：不管 key 是否设置了过期，淘汰即将过期的 key</li>
<li>noeviction：不淘汰任何 key，满容后再写入直接报错</li>
<li>allkeys-lfu：不管 key 是否设置了过期，淘汰访问频率最低的 key（4.0+支持）</li>
<li>volatile-lfu：只淘汰访问频率最低的过期 key（4.0+支持）<br>
备注：allkeys-xxx 表示从所有的键值中淘汰数据，而 volatile-xxx 表示从设置了过期键的键值中淘汰数据。</li>
</ul>
<p>我们最常使用的一般是 allkeys-lru 或 volatile-lru 策略，它们的处理逻辑是，每次从实例中随机取出一批 key（可配置），然后淘汰一个最少访问的 key，之后把剩下的 key 暂存到一个池子中，继续随机取出一批 key，并与之前池子中的 key 比较，再淘汰一个最少访问的 key。以此循环，直到内存降到 maxmemory 之下。</p>
<p>如果使用的是 allkeys-random 或 volatile-random 策略，那么就会快很多，因为是随机淘汰，那么就少了比较 key 访问频率时间的消耗了，随机拿出一批 key 后直接淘汰即可，因此这个策略要比上面的 LRU 策略执行快一些。</p>
<p>但以上这些逻辑都是在访问 Redis 时，真正命令执行之前执行的，也就是它会影响我们访问 Redis 时执行的命令。</p>
<p>另外，如果此时 Redis 实例中有存储大 key，那么在淘汰大 key 释放内存时，这个耗时会更加久，延迟更大，这需要我们格外注意。</p>
<p>如果你的业务访问量非常大，并且必须设置 maxmemory 限制实例的内存上限，同时面临淘汰 key 导致延迟增大的的情况，要想缓解这种情况，除了上面说的避免存储大 key、使用随机淘汰策略之外，也可以考虑拆分实例的方法来缓解，拆分实例可以把一个实例淘汰 key 的压力分摊到多个实例上，可以在一定程度降低延迟。</p>
<h2> fork 耗时严重</h2>
<p>如果你的 Redis 开启了自动生成 RDB 和 AOF 重写功能，那么有可能在后台生成 RDB 和 AOF 重写时导致 Redis 的访问延迟增大，而等这些任务执行完毕后，延迟情况消失。<br>
遇到这种情况，一般就是执行生成 RDB 和 AOF 重写任务导致的。</p>
<p>生成 RDB 和 AOF 都需要父进程 fork 出一个子进程进行数据的持久化，在 fork 执行过程中，父进程需要拷贝<strong>内存页表</strong>给子进程，如果整个实例内存占用很大，那么需要拷贝的内存页表会比较耗时，此过程会消耗大量的 CPU 资源，在完成 fork 之前，整个实例会被阻塞住，无法处理任何请求，如果此时 CPU 资源紧张，那么 fork 的时间会更长，甚至达到秒级。这会严重影响 Redis 的性能。</p>
<p>我们可以执行 info 命令，查看最后一次 fork 执行的耗时 latest_fork_usec，单位微秒。这个时间就是整个实例阻塞无法处理请求的时间。</p>
<p>除了因为备份的原因生成 RDB 之外，在主从节点第一次建立数据同步时，主节点也会生成 RDB 文件给从节点进行一次全量同步，这时也会对 Redis 产生性能影响。</p>
<p>要想避免这种情况，我们需要规划好数据备份的周期，建议在从节点上执行备份，而且最好放在<strong>低峰期</strong>执行。如果对于丢失数据不敏感的业务，那么不建议开启 AOF 和 AOF 重写功能。</p>
<p>另外，fork 的耗时也与系统有关，如果把 Redis 部署在虚拟机上，那么这个时间也会增大。所以使用 Redis 时建议部署在物理机上，降低 fork 的影响。</p>
<h2> 绑定 CPU</h2>
<p>很多时候，我们在部署服务时，为了提高性能，降低程序在使用多个 CPU 时上下文切换的性能损耗，一般会采用进程绑定 CPU 的操作。</p>
<p>但在使用 Redis 时，我们不建议这么干，原因如下:<br>
绑定 CPU 的 Redis，在进行数据持久化时，fork 出的子进程，子进程会继承父进程的 CPU 使用偏好，而此时子进程会消耗大量的 CPU 资源进行数据持久化，子进程会与主进程发生 CPU 争抢，这也会导致主进程的 CPU 资源不足访问延迟增大。</p>
<p>所以在部署 Redis 进程时，如果需要开启 RDB 和 AOF 重写机制，一定不能进行 CPU 绑定操作！</p>
<h2> 开启 AOF</h2>
<p>上面提到了，当执行 AOF 文件重写时会因为 fork 执行耗时导致 Redis 延迟增大，除了这个之外，如果开启 AOF 机制，设置的策略不合理，也会导致性能问题。</p>
<p>开启 AOF 后，Redis 会把写入的命令实时写入到文件中，但写入文件的过程是先写入内存，等内存中的数据超过一定阈值或达到一定时间后，内存中的内容才会被真正写入到磁盘中。</p>
<p>AOF 为了保证文件写入磁盘的安全性，提供了 3 种刷盘机制：<br>
•appendfsync always：每次写入都刷盘，对性能影响最大，占用磁盘 IO 比较高，数据安全性最高<br>
•appendfsync everysec：1 秒刷一次盘，对性能影响相对较小，节点宕机时最多丢失 1 秒的数据<br>
•appendfsync no：按照操作系统的机制刷盘，对性能影响最小，数据安全性低，节点宕机丢失数据取决于操作系统刷盘机制</p>
<p>当使用第一种机制 appendfsync always 时，Redis 每处理一次写命令，都会把这个命令写入磁盘，而且这个操作是在主线程中执行的。</p>
<p>内存中的的数据写入磁盘，这个会加重磁盘的 IO 负担，操作磁盘成本要比操作内存的代价大得多。如果写入量很大，那么每次更新都会写入磁盘，此时机器的磁盘 IO 就会非常高，拖慢 Redis 的性能，因此我们不建议使用这种机制。</p>
<p>与第一种机制对比，appendfsync everysec 会每隔 1 秒刷盘，而 appendfsync no 取决于操作系统的刷盘时间，安全性不高。因此我们推荐使用 appendfsync everysec 这种方式，在最坏的情况下，只会丢失 1 秒的数据，但它能保持较好的访问性能。</p>
<p>当然，对于有些业务场景，对丢失数据并不敏感，也可以不开启 AOF。</p>
<h2> 使用 Swap</h2>
<p>如果你发现 Redis 突然变得非常慢，每次访问的耗时都达到了几百毫秒甚至秒级，那此时就检查 Redis 是否使用到了 Swap，这种情况下 Redis 基本上已经无法提供高性能的服务。</p>
<p>我们知道，操作系统提供了 Swap 机制，目的是为了当内存不足时，可以把一部分内存中的数据换到磁盘上，以达到对内存使用的缓冲。</p>
<p>但当内存中的数据被换到磁盘上后，访问这些数据就需要从磁盘中读取，这个速度要比内存慢太多！</p>
<p>尤其是针对 Redis 这种高性能的内存数据库来说，如果 Redis 中的内存被换到磁盘上，对于 Redis 这种性能极其敏感的数据库，这个操作时间是无法接受的。<br>
我们需要检查机器的内存使用情况，确认是否确实是因为内存不足导致使用到了 Swap。</p>
<p>如果确实使用到了 Swap，要及时整理内存空间，释放出足够的内存供 Redis 使用，然后释放 Redis 的 Swap，让 Redis 重新使用内存。</p>
<p>释放 Redis 的 Swap 过程通常要重启实例，为了避免重启实例对业务的影响，一般先进行主从切换，然后释放旧主节点的 Swap，重新启动服务，待数据同步完成后，再切换回主节点即可。</p>
<p>可见，当 Redis 使用到 Swap 后，此时的 Redis 的高性能基本被废掉，所以我们需要提前预防这种情况。</p>
<p>我们需要对 Redis 机器的内存和 Swap 使用情况进行监控，在内存不足和使用到 Swap 时及时报警出来，及时进行相应的处理。</p>
<h2> 网卡负载过高</h2>
<p>如果以上产生性能问题的场景，你都规避掉了，而且 Redis 也稳定运行了很长时间，但在某个时间点之后开始，访问 Redis 开始变慢了，而且一直持续到现在，这种情况是什么原因导致的？</p>
<p>之前我们就遇到这种问题，特点就是从某个时间点之后就开始变慢，并且一直持续。这时你需要检查一下机器的网卡流量，是否存在网卡流量被跑满的情况。</p>
<p>网卡负载过高，在网络层和 TCP 层就会出现数据发送延迟、数据丢包等情况。Redis 高性能除了内存之外，就在于网络 IO，请求量突增会导致网卡负载变高。</p>
<p>如果出现这种情况，你需要排查这个机器上的哪个 Redis 实例的流量过大占满了网络带宽，然后确认流量突增是否属于业务正常情况，如果属于那就需要及时扩容或迁移实例，避免这个机器的其他实例受到影响。</p>
<p>运维层面，我们需要对机器的各项指标增加监控，包括网络流量，在达到阈值时提前报警，及时与业务确认并扩容。</p>
<h2> 总结</h2>
<p>以上我们总结了 Redis 中常见的可能导致延迟增大甚至阻塞的场景，这其中既涉及到了业务的使用问题，也涉及到 Redis 的运维问题。</p>
<p>可见，要想保证 Redis 高性能的运行，其中涉及到 CPU、内存、网络，甚至磁盘的方方面面，其中还包括操作系统的相关特性的使用。</p>
<p>作为开发人员，我们需要了解 Redis 的运行机制，例如各个命令的执行时间复杂度、数据过期策略、数据淘汰策略等，使用合理的命令，并结合业务场景进行优化。</p>
<p>作为 DBA 运维人员，需要了解数据持久化、操作系统 fork 原理、Swap 机制等，并对 Redis 的容量进行合理规划，预留足够的机器资源，对机器做好完善的监控，才能保证 Redis 的稳定运行。</p>
<blockquote>
<p>文章来源</p>
<p><a href="http://kaito-kidd.com/2020/07/03/redis-latency-analysis/" target="_blank" rel="noopener noreferrer">http://kaito-kidd.com/2020/07/03/redis-latency-analysis/</a></p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>雪崩、穿透、击穿</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/20.%E7%BC%93%E5%AD%98Reids/22.%E9%9B%AA%E5%B4%A9%E3%80%81%E7%A9%BF%E9%80%8F%E3%80%81%E5%87%BB%E7%A9%BF.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/20.%E7%BC%93%E5%AD%98Reids/22.%E9%9B%AA%E5%B4%A9%E3%80%81%E7%A9%BF%E9%80%8F%E3%80%81%E5%87%BB%E7%A9%BF.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">雪崩、穿透、击穿</source>
      <description>1. 缓存雪崩 对于系统 A，假设每天高峰期每秒 5000 个请求，本来缓存在高峰期可以扛住每秒 4000 个请求，但是缓存机器意外发生了全盘宕机。缓存挂了，此时 1 秒 5000 个请求全部落数据库，数据库必然扛不住，它会报一下警，然后就挂了。此时，如果没有采用什么特别的方案来处理这个故障，DBA 很着急，重启数据库，但是数据库立马又被新的流量给打死了。这就是缓存雪崩。 缓存雪崩的事前事中事后的解决方案如下： 事前：redis 高可用，主从+哨兵，redis cluster，避免全盘崩溃。 事中：本地 ehcache 缓存 + hystrix 限流&amp;amp;降级，避免 MySQL 被打死。 事后：redis 持久化，一旦重启，自动从磁盘上加载数据，快速恢复缓存数据。</description>
      <category>集成配置</category>
      <category>缓存Reids</category>
      <pubDate>Sat, 13 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> 1. 缓存雪崩</h2>
<blockquote>
<p>对于系统 A，假设每天高峰期每秒 5000 个请求，本来缓存在高峰期可以扛住每秒 4000 个请求，但是缓存机器意外发生了全盘宕机。缓存挂了，此时 1 秒 5000 个请求全部落数据库，数据库必然扛不住，它会报一下警，然后就挂了。此时，如果没有采用什么特别的方案来处理这个故障，DBA 很着急，重启数据库，但是数据库立马又被新的流量给打死了。这就是缓存雪崩。</p>
</blockquote>
<p>缓存雪崩的事前事中事后的解决方案如下：</p>
<ul>
<li>事前：redis 高可用，主从+哨兵，redis cluster，避免全盘崩溃。</li>
<li>事中：本地 ehcache 缓存 + hystrix 限流&amp;降级，避免 MySQL 被打死。</li>
<li>事后：redis 持久化，一旦重启，自动从磁盘上加载数据，快速恢复缓存数据。</li>
</ul>
<p>缓存雪崩优化</p>
<p>用户发送一个请求，系统 A 收到请求后，先查本地 ehcache 缓存，如果没查到再查 redis。如果 ehcache 和 redis 都没有，再查数据库，将数据库中的结果，写入 ehcache 和 redis 中。</p>
<p>限流组件，可以设置每秒的请求，有多少能通过组件，剩余的未通过的请求，怎么办？走降级！可以返回一些默认的值，或者友情提示，或者空白的值。</p>
<p>好处：</p>
<ul>
<li>数据库绝对不会死，限流组件确保了每秒只有多少个请求能通过。</li>
<li>只要数据库不死，就是说，对用户来说，2/5 的请求都是可以被处理的。</li>
<li>只要有 2/5 的请求可以被处理，就意味着你的系统没死，对用户来说，可能就是点击几次刷不出来页面，但是多点几次，就可以刷出来一次</li>
</ul>
<h2> 2. 缓存穿透</h2>
<blockquote>
<p>缓存穿透，就是在同一时间，大量的请求所需要的数据在缓存中并不存在，所以穿过缓存去查询数据库。</p>
<p>解决办法：每次查询数据库之后，如果有更新缓存，如果数据库中也没有，可以再缓存中中更新一个空值进去，这样就不会出现大量的请求落在数据库上。</p>
</blockquote>
<h2> 3. 缓存击穿</h2>
<blockquote>
<p>缓存击穿就是：在缓存中有某个值特别的热门，经常性的处于集中式高并发。当某一时刻失效的时候，请求大量的落在数据库上，就像是在一道屏障上凿开了一个洞。</p>
</blockquote>
<p>不同场景下的解决方式可如下：</p>
<ol>
<li>若缓存的数据是基本不会发生更新的，则可尝试将该热点数据设置为永不过期。</li>
<li>若缓存的数据更新不频繁，且缓存刷新的整个流程耗时较少的情况下，则可以采用基于 redis、zookeeper 等分布式中间件的分布式互斥锁，或者本地互斥锁以保证仅少量的请求能请求数据库并重新构建缓存，其余线程则在锁释放后能访问到新缓存。</li>
<li>若缓存的数据更新频繁或者缓存刷新的流程耗时较长的情况下，可以利用定时线程在缓存过期前主动的重新构建缓存或者延后缓存的过期时间，以保证所有的请求能一直访问到对应的缓存。</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>Redis内存模型</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/20.%E7%BC%93%E5%AD%98Reids/30.Redis%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/20.%E7%BC%93%E5%AD%98Reids/30.Redis%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">Redis内存模型</source>
      <description>[[toc]] 缓存通识 缓存(Cache) 和 缓冲(Buﬀer) 的分别？; 缓存：一般是为了数据多次读取。 缓冲：比如 CPU 写到 把数据先硬盘，因为硬盘比较慢，先到缓冲设备 Buﬀer，比如内存，Buﬀer 读和写都需要。 缓存的关键指标：缓存命中率; 缓存是否有效依赖于能多少次重用同一个缓存响应业务请求，这个度量指标被称作缓存命中率。 如果...</description>
      <category>集成配置</category>
      <category>缓存Reids</category>
      <pubDate>Wed, 08 Jun 2022 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

<h2> 缓存通识</h2>
<ul>
<li>
<p>缓存(Cache) 和 缓冲(Buﬀer) 的分别？</p>
<blockquote>
<p>缓存：一般是为了数据多次读取。</p>
<p>缓冲：比如 CPU 写到 把数据先硬盘，因为硬盘比较慢，先到缓冲设备 Buﬀer，比如内存，Buﬀer 读和写都需要。</p>
</blockquote>
</li>
<li>
<p>缓存的关键指标：缓存命中率</p>
<blockquote>
<p>缓存是否有效依赖于能多少次重用同一个缓存响应业务请求，这个度量指标被称作缓存命中率。</p>
<p>如果查询一个缓存，十次查询九次能够得到正确结果，那么它的命中率是 90%.</p>
</blockquote>
</li>
<li>
<p>影响缓存命中率的主要指标</p>
<blockquote>
<p>缓存键集合大小</p>
<p>缓存可使用内存空间缓存对象生存时间</p>
<p>缓存对象生存时间</p>
</blockquote>
</li>
<li>
<p><strong>缓存类型</strong></p>
<ul>
<li>代理缓存</li>
<li>反向代理缓存</li>
<li>多层反向代理缓存</li>
<li>内容分发网络（<code>CDN - Content Distribution Network</code>）</li>
<li><code>CDN</code> 同时配置静态文件和动态内容</li>
<li>通读缓存（<code>Read-Through</code>）</li>
<li>旁路缓存（<code>Cache-Aside</code>）</li>
<li>浏览器对象缓存</li>
<li>本地对象缓存</li>
<li>远程分布式对象缓存</li>
<li>各种介质数据访问延迟</li>
<li>技术栈各个层次的缓存</li>
</ul>
</li>
<li>
<p>缓存为什么能显著提升性能</p>
<blockquote>
<p>缓存数据通常来自内存，比磁盘上的数据有更快的访问速度。</p>
<p>缓存存储数据的最终结果形态，不需要中间计算，减少 CPU 资源的消耗。</p>
<p>缓存降低数据库、磁盘、网络的负载压力，使这些 I/O 设备获得更好的响应特性。</p>
</blockquote>
</li>
</ul>
<h2> 查看 Redis 内存统计</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>Redis 服务器中的内存碎片已经很大,可以通过安全重启的方式减小内存碎片:因为重启之后,Redis 重新从备份文件中读取数据,在内存中进行重排,为每个数据重新选择合适的内存单元,减小内存碎片。</p>
</blockquote>
<h2> <strong>内存分配器<code>jemalloc</code></strong></h2>
<blockquote>
<p>Redis 在编译时便会指定内存分配器；</p>
<p>内存分配器可以是 libc 、jemalloc 或者 tcmalloc，默认是：jemalloc</p>
<p>jemalloc 作为 Redis 的默认内存分配器，在减小内存碎片方面做的相对比较好。</p>
<p>jemalloc 在 64 位系统 中，将内存空间划分为小、大、巨大三个范围；</p>
<p>每个范围内又划分了许多小的内存块单位；</p>
<p>当 Redis 存 储数据时，会选择大小最合适的内存块进行存储。</p>
<p>这样划分:技能保证充分利用内存空间,又能保证我们的性能使用</p>
</blockquote>
<table>
<thead>
<tr>
<th>category</th>
<th>spacing</th>
<th>size</th>
</tr>
</thead>
<tbody>
<tr>
<td>small</td>
<td>8</td>
<td>[8]</td>
</tr>
<tr>
<td></td>
<td>16</td>
<td>[16,32,...,128]</td>
</tr>
<tr>
<td></td>
<td>32</td>
<td>[160,192,224,256]</td>
</tr>
<tr>
<td></td>
<td>64</td>
<td>[320,384,448,512]</td>
</tr>
<tr>
<td></td>
<td>128</td>
<td>[640,768,896,1024]</td>
</tr>
<tr>
<td></td>
<td>256</td>
<td>[1280,1536,1792,2048]</td>
</tr>
<tr>
<td></td>
<td>512</td>
<td>[2560,3072,3584]</td>
</tr>
<tr>
<td>Large</td>
<td>4 KiB</td>
<td>[4KB,8KB,12KB,...,4073KB]</td>
</tr>
<tr>
<td>Huge</td>
<td>4 MiB</td>
<td>[4MB,8MB,12MB,...]</td>
</tr>
</tbody>
</table>
<blockquote>
<p>例如,如果需要存储大小为 130 字节的对象,<code>jemalloc</code>会将其放入 160 字节的内存单元中。</p>
</blockquote>
<h2> 存储对象<code>redisObject</code></h2>
<blockquote>
<p>Redis 对象有 5 种类型;无论是哪种类型,Redis 都不会直接存储,而是通过 redisObject 对象进行存储。</p>
<p>redisObject 对象非常重要,Redis 对象的类型、内部编码、内存回收、共享对象等功能,都需要。</p>
</blockquote>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>
<p>type</p>
<blockquote>
<p>type 字段表示对象的类型,占 4 个比特;</p>
<p>目前包括 REDIS_STRING(字符串)、REDIS_LIST (列表)、REDIS_HASH(哈希)、REDIS_SET(集合)、REDIS_ZSET(有序集合)。<br>
当我们执行 type 命令时,便是通过读取 RedisObject 的 type 字段获得对象的类型;</p>
</blockquote>
</li>
<li>
<p>encoding</p>
<blockquote>
<p>encoding 表示对象的内部编码,占 4 个比特。</p>
<p>对于 Redis 支持的每种类型,都有至少两种内部编码,例如对于字符串,有 int、embstr、raw 三种编<br>
码。</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>ptr</p>
<blockquote>
<p>ptr 指针指向具体的数据,如前面的例子中,set hello world，ptr 指向包含字符串 world 的 SDS。</p>
</blockquote>
</li>
<li>
<p>refcount</p>
<blockquote>
<p>refcount 记录的是该对象被引用的次数,类型为整型。refcount 的作用,主要在于对象的引用计数和内<br>
存回收。</p>
<p>当创建新对象时,refcount 初始化为 1;当有新程序使用该对象时,refcount 加 1;当对象不再被一个新程序使用时,refcount 减 1;当 refcount 变为 0 时,对象占用的内存会被释放。</p>
<p>Redis 中被多次使用的对象(refcount&gt;1),称为共享对象。Redis 为了节省内存,当有一些对象重复出现<br>
时,新的程序不会创建新的对象,而是仍然使用原来的对象。这个被重复使用的对象,就是共享对象。<br>
目前共享对象仅支持整数值的字符串对象。</p>
<p>Redis 的共享对象目前只支持整数值的字符串对象。之所以如此,实际上是对内存和 CPU(时间)的平<br>
衡:共享对象虽然会降低内存消耗,但是判断两个对象是否相等却需要消耗额外的时间。对于整数值,<br>
判断操作复杂度为 O(1);对于普通字符串,判断复杂度为 O(n);而对于哈希、列表、集合和有序集合,<br>
判断的复杂度为 O(n^2)。<br>
虽然共享对象只能是整数值的字符串对象,但是 5 种类型都可能使用共享对象(如哈希、列表等的元素<br>
可以使用)。就目前的实现来说,Redis 服务器在初始化时,会创建 10000 个字符串对象,值分别是 0~9999 的整数<br>
值;当 Redis 需要使用值为 0~9999 的字符串对象时,可以直接使用这些共享对象。10000 这个数字可以<br>
通过调整参数 REDIS_SHARED_INTEGERS(4.0 中是 OBJ_SHARED_INTEGERS)的值进行改变。</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>lru</p>
<blockquote>
<p>lru 记录的是对象最后一次被命令程序访问的时间,占据的比特数不同的版本有所不同(2.6 版本占 22 比<br>
特,4.0 版本占 24 比特)。通过对比 lru 时间与当前时间,可以计算某个对象的闲置时间;object idletime 命令可以显示该闲置时间(单位是秒)</p>
</blockquote>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>总结</p>
<blockquote>
<p>综上所述,redisObject 的结构与对象类型、编码、内存回收、共享对象都有关系;一个 redisObject 对<br>
象的大小为 16 字节:</p>
<p>4bit+4bit+24bit+4Byte+8Byte=16Byte</p>
</blockquote>
</li>
</ul>
<h2> 动态字符串<code>SDS k-v</code></h2>
<blockquote>
<p>SDS 是简单动态字符串(Simple Dynamic String)的缩写。</p>
<p>Redis 没有直接使用 C 字符串(即以空字符’\0’结尾的字符数组)作为默认的字符串表示,而是使用了 SDS。</p>
</blockquote>
<p>3.2 之前</p>
<div class="language-C line-numbers-mode" data-ext="C"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>其中,buf 表示字节数组,用来存储字符串;len 表示 buf 已使用的长度,free 表示 buf 未使用的长度。</p>
<p>buf 数组的长度=free+len+1(其中 1 表示字符串结尾的空字符);</p>
<p>所以,一个 SDS 结构占据的空间为：free 所占长度+len 所占长度+ buf 数组的长度+1=4+4+字符串长度+1=字符串长度+9。</p>
</blockquote>
<p>3.2 之后</p>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SDS 与 C 字符串的比较</p>
<ul>
<li>获取字符串长度:SDS 是 O(1),C 字符串是 O(n)</li>
<li>缓冲区溢出:使用 C 字符串的 API 时,如果字符串长度增加(如 strcat 操作)而忘记重新分配内存,很容易造成缓冲区的溢出;而 SDS 由于记录了长度,相应的 API 在可能造成缓冲区溢出时会自动重新分配内存,杜绝了缓冲区溢出。</li>
<li>修改字符串时内存的重分配:对于 C 字符串,如果要修改字符串,必须要重新分配内存(先释放再申请),因为如果没有重新分配,字符串长度增大时会造成内存缓冲区溢出,字符串长度减小时会造成内存泄露。而对于 SDS,由于可以记录 len 和 free,因此解除了字符串长度和空间数组长度之间的关联,可以在此基础上进行优化:空间预分配策略(即分配内存时比实际需要的多)使得字符串长度增大时重新分配内存的概率大大减小;惰性空间释放策略使得字符串长度减小时重新分配内存的概率大大减小。</li>
<li>存取二进制数据:SDS 可以,C 字符串不可以。因为 C 字符串以空字符作为字符串结束的标识,而对于一些二进制文件(如图片等),内容可能包括空字符串,因此 C 字符串无法正确存取;而 SDS 以字符串长度 len 来作为字符串结束标识,因此没有这个问题。</li>
</ul>
<p>此外,由于 SDS 中的 buf 仍然使用了 C 字符串(即以’\0’结尾),因此 SDS 可以使用 C 字符串库中的部分函<br>
数;但是需要注意的是,只有当 SDS 用来存储文本数据时才可以这样使用,在存储二进制数据时则不行<br>
(’\0’不一定是结尾)。</p>
<h2> <strong>Redis 的对象类型与内存编码</strong></h2>
<p>Redis 支持 5 种对象类型,而每种结构都有至少两种编码;</p>
<blockquote>
<p>一方面接口与实现分离，当需要增加或改变内部编码时，用户使用不受影响;</p>
<p>另一方面可以根据不同的应用场景切换内部编码，提高效率。</p>
</blockquote>
<div class="language-mermaid line-numbers-mode" data-ext="mermaid"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table>
<thead>
<tr>
<th>类型</th>
<th>编码</th>
<th>对象</th>
</tr>
</thead>
<tbody>
<tr>
<td>String</td>
<td>int</td>
<td>整数值实现</td>
</tr>
<tr>
<td></td>
<td>embstr</td>
<td>sds 实现 &lt;=39 字节</td>
</tr>
<tr>
<td></td>
<td>raw</td>
<td>sds 实现 &gt; 39 字节</td>
</tr>
<tr>
<td>List</td>
<td>ziplist</td>
<td>压缩列表实现(3.0 版本之前)</td>
</tr>
<tr>
<td></td>
<td>linkedlist</td>
<td>双端链表实现(3.0 版本之前)</td>
</tr>
<tr>
<td></td>
<td>quicklist</td>
<td>新的数据格式(3.2 版本之后)</td>
</tr>
<tr>
<td>Set</td>
<td>intset</td>
<td>整数集合使用</td>
</tr>
<tr>
<td></td>
<td>hashtable</td>
<td>字典实现</td>
</tr>
<tr>
<td>Hash</td>
<td>ziplist</td>
<td>压缩列表实现</td>
</tr>
<tr>
<td></td>
<td>hashtable</td>
<td>字典使用</td>
</tr>
<tr>
<td>Sorted set</td>
<td>ziplist</td>
<td>压缩列表实现</td>
</tr>
<tr>
<td></td>
<td>skiplist</td>
<td>跳跃表和字典</td>
</tr>
</tbody>
</table>
<ul>
<li>
<p>字符串<code>string</code>（SDS）</p>
<blockquote>
<p>字符串长度不能超过 512MB。</p>
</blockquote>
<blockquote>
<p>字符串类型的内部编码有 3 种,它们的应用场景如下:</p>
<ul>
<li>int：8 个字节的长整型。字符串值是整型时,这个值使用 long 整型表示。</li>
<li>embstr:&lt;=44 字节的字符串。embstr 与 raw 都使用 redisObject 和 sds 保存数据,区别在于,embstr 的使用只分配一次内存空间(因此 redisObject 和 sds 是连续的),而 raw 需要分配两次内存空间(分别为 redisObject 和 sds 分配空间)。因此与 raw 相比,embstr 的好处在于创建时少分配一次空间,删除时少释放一次空间,以及对象的所有数据连在一起,寻找方便。而 embstr 的坏处也很明显,如果字符串的长度增加需要重新分配内存时,整个 redisObject 和 sds 都需要重新分配空间,因此 redis 中的 embstr 实现为只读。</li>
<li>raw:大于 44 个字节的字符串</li>
</ul>
</blockquote>
<blockquote>
<p>3.2 之后 embstr 和 raw 进行区分的长度,是 44;是因为 redisObject 的长度是 16 字节,sds 的长度<br>
是 4+字符串长度;因此当字符串长度是 44 时,embstr 的长度正好是 16+4+44 =64,jemalloc 正好<br>
可以分配 64 字节的内存单元。<br>
3.2 之前 embstr 和 raw 进行区分的长度,是 39,因为 redisObject 的长度是 16 字节,sds 的长度是<br>
9+字符串长度;因此当字符串长度是 39 时,embstr 的长度正好是 16+9+39 =64,jemalloc 正好可<br>
以分配 64 字节的内存单元。</p>
</blockquote>
</li>
<li>
<p>列表 <code>list</code></p>
<blockquote>
<p>列表(list)用来存储多个有序的字符串,每个字符串称为元素;一个列表可以存储 2^32-1 个元素。</p>
<p>Redis 中的列表支持两端插入和弹出,并可以获得指定位置(或范围)的元素,可以充当数组、队列、栈等。</p>
</blockquote>
<p>Redis3.0 之前列表的内部编码可以是<code>压缩列表</code>(ziplist)或<code>双端链表</code>(linkedlist)。</p>
<p>选择的折中方案是两种数据类型的转换,但是在 3.2 版本之后 因为转换也是个费时且复杂的操作,引入了一种新的数据格式,结合了双向列表 linkedlist 和 ziplist 的特点,称之为 quicklist。所有的节点都用 quicklist 存储,省去了到临界条件是的格式转换。</p>
<ul>
<li>
<p>压缩列表 <code>ziplist</code>(3.0 版本之前)</p>
<blockquote>
<p>列表键和哈希键的底层实现之一。当一个列表只包含少量列表项时,并且每个列表项时小整数值或短字符串,那么 Redis 会使用压缩列表来做该列表的底层实现。</p>
<p>Redis 为了节省内存而开发的,是由一系列特殊编码的连续内存块组成的顺序型数据结构,一个压缩列表可以包含任意多个节点(entry),每个节点可以保存一个字节数组或者一个整数值,放到一个连续内存区。</p>
<ul>
<li>previous_entry_ength: 记录压缩列表前一个字节的长度。</li>
<li>encoding:节点的 encoding 保存的是节点的 content 的内容类型。</li>
<li>content:content 区域用于保存节点的内容,节点内容类型和长度由 encoding 决定。</li>
</ul>
</blockquote>
</li>
<li>
<p>双向链表 <code>linkedlist</code>(3.0 版本之前)</p>
<blockquote>
<p>双向链表(linkedlist):由一个 list 结构和多个 listNode 结构组成;</p>
<p>双端链表同时保存了表头指针和表尾指针,并且每个节点都有指向前和指向后的指针;链表中保存了列表的长度;dup、free 和 match 为节点值设置类型特定函数,所以链表可以用于保存各种不同类型的值。而链表中每个节点指向的是 type 为字符串的 redisObject。</p>
</blockquote>
</li>
<li>
<p><code>quicklist</code>(3.2 版本之后)</p>
<blockquote>
<p>简单的说,我们仍旧可以将其看作一个双向列表,但是列表的每个节点都是一个 ziplist,其实就是 linkedlist 和 ziplist 的结合。quicklist 中的每个节点 ziplist 都能够存储多个数据元素。</p>
</blockquote>
<div class="language-c line-numbers-mode" data-ext="c"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ul>
</li>
<li>
<p>哈希 <code>hash</code>（压缩列表和哈希表）</p>
<ol>
<li>
<p>概况</p>
<p>哈希(作为一种数据结构),不仅是 redis 对外提供的 5 种对象类型的一种(与字符串、列表、集合、有序结合并列),也是 Redis 作为 Key-Value 数据库所使用的数据结构。为了说明的方便,后面当使用“内层的哈希”时,代表的是 redis 对外提供的 5 种对象类型的一种;使用“外层的哈希”代指 Redis 作为 Key-Value 数据库所使用的数据结构。</p>
</li>
<li>
<p>内部编码</p>
<blockquote>
<p>内层的哈希使用的内部编码可以是压缩列表(ziplist)和哈希表(hashtable)两种;Redis 的外层的哈希则只使用了 hashtable。</p>
</blockquote>
<blockquote>
<p>hashtable:一个 hashtable 由 1 个 dict 结构、2 个 dictht 结构、1 个 dictEntry 指针数组(称为 bucket)和<br>
多个 dictEntry 结构组成。</p>
</blockquote>
</li>
<li>
<p>编码转换</p>
<p>如前所述,Redis 中内层的哈希既可能使用哈希表,也可能使用压缩列表。<br>
只有同时满足下面两个条件时,才会使用压缩列表:</p>
<ul>
<li>哈希中元素数量小于 512 个;</li>
<li>哈希中所有键值对的键和值字符串长度都小于 64 字节。</li>
</ul>
</li>
</ol>
</li>
<li>
<p>集合 <code>set</code> (整数集合和哈希表)</p>
<ol>
<li>
<p>概况</p>
<blockquote>
<p>集合(set)与列表类似,都是用来保存多个字符串,但集合与列表有两点不同:集合中的元素是无序的,因此不能通过索引来操作元素;集合中的元素不能有重复。</p>
</blockquote>
<blockquote>
<p>一个集合中最多可以存储 2^32-1 个元素;除了支持常规的增删改查,Redis 还支持多个集合取交集、并集、差集。</p>
</blockquote>
</li>
<li>
<p>内部编码</p>
<blockquote>
<p>集合的内部编码可以是整数集合(intset)或哈希表(hashtable)。</p>
</blockquote>
</li>
<li>
<p>编码转换</p>
<p>只有同时满足下面两个条件时,集合才会使用整数集合:</p>
<ul>
<li>集合中元素数量小于 512 个;</li>
<li>集合中所有元素都是整数值。</li>
</ul>
</li>
</ol>
</li>
<li>
<p>有序集合 <code>zset</code>（压缩列表和跳跃表）</p>
<ol>
<li>
<p>概况</p>
<blockquote>
<p>有序集合与集合一样，元素都不能重复；但与集合不同的是，有序集合中的元素是有顺序的。与列表使 用索引下标作为排序依据不同，有序集合为每个元素设置一个分数（score）作为排序依据。</p>
</blockquote>
</li>
<li>
<p>内部编码</p>
<blockquote>
<p>有序集合的内部编码可以是压缩列表(ziplist)或跳跃表(skiplist)。</p>
</blockquote>
</li>
</ol>
</li>
</ul>
<h2> Redis 设计优化（实际使用）</h2>
<ol>
<li>
<p>估算<strong>Redis</strong>内存使用量</p>
<blockquote>
<p>要估算 redis 中的数据占据的内存大小，需要对 redis 的内存模型有比较全面的了解，包括第一节课介绍的 hashtable、sds、redisobject、各种对象类型的编码方式等。</p>
</blockquote>
<p>假设有 90000 个键值对,每个 key 的长度是 12 个字节,每个 value 的长度也是 12 个字节(且 key 和 value 都不是整数);</p>
<blockquote>
<p>下面来估算这 90000 个键值对所占用的空间。在估算占据空间之前,首先可以判定字符串类型使用的编码方式:embstr。</p>
<p>90000 个键值对占据的内存空间主要可以分为两部分:一部分是 90000 个 dictEntry 占据的空间;一部分是键值对所需要的 bucket 空间。</p>
<p>每个 dictEntry 占据的空间包括:</p>
<ul>
<li>一个 dictEntry 结构,24 字节,jemalloc 会分配 32 字节的内存块(64 位操作系统下,一个指针 8 字节,一个 dictEntry 由三个指针组成)</li>
<li>一个 key,12 字节,所以 SDS(key)需要 12+4=16 个字节([SDS 的长度=4+字符串长度),jemalloc 会分配 16 字节的内存块</li>
<li>一个 redisObject,16 字节,jemalloc 会分配 16 字节的内存块(4bit+4bit+24bit+4Byte+8Byte=16Byte)</li>
<li>一个 value,12 字节,所以 SDS(value)需要 12+4=16 个字节([SDS 的长度=4+字符串长度),jemalloc 会分配 16 字节的内存块</li>
<li>综上,一个 dictEntry 所占据的空间需要 32+16+16+16=80 个字节。</li>
</ul>
<p>bucket 空间:</p>
<ul>
<li>bucket 数组的大小为大于 90000 的最小的 2^n,是 131072;每个 bucket 元素(bucket 中存储的都是指<br>
针元素)为 8 字节(因为 64 位系统中指针大小为 8 字节)。</li>
</ul>
<p>因此,可以估算出这 90000 个键值对占据的内存大小为:[90000<em>80 + 131072</em>8 = 8248576</p>
</blockquote>
<blockquote>
<p>作为对比将 key 和 value 的长度由 12 字节增加到 13 字节,则对应的 SDS 变为 17 个字节,jemalloc 会分配 32 个字节,因此每个 dictEntry 占用的字节数也由 80 字节变为 112 字节。此时估算这 90000 个键值对占据内存大小为:90000<em>112 + 131072</em>8 = 11128576。</p>
</blockquote>
</li>
<li>
<p>优化内存占用</p>
<blockquote>
<p>了解 redis 的内存模型，对优化 redis 内存占用有很大帮助。下面介绍几种优化场景和方式</p>
</blockquote>
<ul>
<li>
<p>利用<strong>jemalloc</strong>特性进行优化</p>
<p>上一小节所讲述的 90000 个键值便是一个例子。由于 jemalloc 分配内存时数值是不连续的,因此 key/value 字符串变化一个字节,可能会引起占用内存很大的变动;在设计时可以利用这一点。</p>
<blockquote>
<p>例如,如果 key 的长度如果是 13 个字节,则 SDS 为 17 字节,jemalloc 分配 32 字节;此时将 key 长度<br>
缩减为 12 个字节,则 SDS 为 16 字节,jemalloc 分配 16 字节;则每个 key 所占用的空间都可以缩小一半。</p>
</blockquote>
</li>
</ul>
</li>
</ol>
<ul>
<li>
<p>使用整型/长整型</p>
<blockquote>
<p>如果是整型/长整型,Redis 会使用 int 类型(8 字节)存储来代替字符串,可以节省更多空间。因此在可以使用长整型/整型代替字符串的场景下,尽量使用长整型/整型。</p>
</blockquote>
</li>
<li>
<p>共享对象</p>
<p>利用共享对象,可以减少对象的创建(同时减少了 redisObject 的创建),节省内存空间。目前 redis 中的共享对象只包括 10000 个整数(0-9999);可以通过调整 REDIS_SHARED_INTEGERS 参数提高共享对象的个数;</p>
<blockquote>
<p>例如将 REDIS_SHARED_INTEGERS 调整到 20000,则 0-19999 之间的对象都可以共享</p>
</blockquote>
<blockquote>
<p>论坛网站在 redis 中存储了每个帖子的浏览数,而这些浏览数绝大多数分布在 0-20000 之间,这时候通过适当增大 EDIS_SHARED_INTEGERS 参数,便可以利用共享对象节省内存空间。</p>
</blockquote>
</li>
<li>
<p>缩短键值对的存储长度</p>
<p>键值对的长度是和性能成反比的,比如我们来做一组写入数据的性能测试,执行结果如下:</p>
<table>
<thead>
<tr>
<th>数据量</th>
<th>key 大小</th>
<th>value 大小</th>
<th>平均耗时(string:set)</th>
<th>平均耗时(hash:hset)</th>
</tr>
</thead>
<tbody>
<tr>
<td>100w</td>
<td>20byte</td>
<td>512byte</td>
<td>1.13 微秒</td>
<td>10.28 微秒</td>
</tr>
<tr>
<td>100w</td>
<td>20byte</td>
<td>200byte</td>
<td>0.74 微秒</td>
<td>8.08 微秒</td>
</tr>
<tr>
<td>100w</td>
<td>20byte</td>
<td>100byte</td>
<td>0.65 微秒</td>
<td>7.92 微秒</td>
</tr>
<tr>
<td>100w</td>
<td>20byte</td>
<td>50byte</td>
<td>0.59 微秒</td>
<td>6.74 微秒</td>
</tr>
<tr>
<td>100w</td>
<td>20byte</td>
<td>20byte</td>
<td>0.55 微秒</td>
<td>6.60 微秒</td>
</tr>
<tr>
<td>100w</td>
<td>20byte</td>
<td>5byte</td>
<td>0.53 微秒</td>
<td>6.53 微秒</td>
</tr>
</tbody>
</table>
<p>从以上数据可以看出,在 key 不变的情况下,value 值越大操作效率越慢,因为 Redis 对于同一种数据类型会使用不同的内部编码进行存储,比如字符串的内部编码就有三种:int(整数编码)、raw(优化内存分配的字符串编码)、embstr(动态字符串编码),这是因为 Redis 的作者是想通过不同编码实现效率和空间的平衡,然而数据量越大使用的内部编码就越复杂,而越是复杂的内部编码存储的性能就越低。</p>
<p>这还只是写入时的速度,当键值对内容较大时,还会带来另外几个问题:</p>
<ul>
<li>内容越大需要的持久化时间就越长,需要挂起的时间越长,Redis 的性能就会越低;</li>
<li>内容越大在网络上传输的内容就越多,需要的时间就越长,整体的运行速度就越低;</li>
<li>内容越大占用的内存就越多,就会更频繁的触发内存淘汰机制,从而给 Redis 带来了更多的运行负担。</li>
</ul>
<p>因此在保证完整语义的同时,我们要尽量的缩短键值对的存储长度,必要时要对数据进行序列化和压缩再存储,以 Java 为例,序列化我们可以使用 protostuff 或 kryo，压缩我们可以使用 snappy。</p>
</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Redis高并发应用</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/20.%E7%BC%93%E5%AD%98Reids/40.Redis%E9%AB%98%E5%B9%B6%E5%8F%91%E5%BA%94%E7%94%A8.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/20.%E7%BC%93%E5%AD%98Reids/40.Redis%E9%AB%98%E5%B9%B6%E5%8F%91%E5%BA%94%E7%94%A8.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">Redis高并发应用</source>
      <description>[[toc]] 主从配置 查看节点主从信息 哨兵 中文官网 (http://www.redis.cn/topics/sentinel.html)： 在从节点中选择新的主节点 1. 过滤掉主观下线的节点 2. 选择 slave-priority/ replica-priority 最高的节点，（replica-priority 0 的不选择）如果由则返回...</description>
      <category>集成配置</category>
      <category>缓存Reids</category>
      <pubDate>Wed, 08 Jun 2022 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

<h2> 主从配置</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看节点主从信息</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 哨兵</h2>
<p><a href="http://www.redis.cn/topics/sentinel.html" target="_blank" rel="noopener noreferrer">中文官网</a>：<a href="http://www.redis.cn/topics/sentinel.html" target="_blank" rel="noopener noreferrer">http://www.redis.cn/topics/sentinel.html</a></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 在从节点中选择新的主节点</h4>
<ol>
<li>过滤掉主观下线的节点</li>
<li>选择 slave-priority/ replica-priority 最高的节点，（replica-priority 0 的不选择）如果由则返回没有就继续选择</li>
<li>选择出复制偏移量最大的系节点，因为复制偏移量越大则数据复制的越完整，如果由就返回了，没有就继续</li>
<li>选择 run_id 最小的节点</li>
</ol>
<h4> 更新主从状态</h4>
<blockquote>
<p>通过 <code>slaveof no one</code> 命令，让选出来的从节点成为主节点；并通过 <code>slaveof</code> 命令让其他节点成为其从节 点。</p>
<p>当其回复正常时，将已下线的主节点设置成新的主节点的从节点，复制新的主节点，变成新的主节点的从节点</p>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>AMQP</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/21.%E4%B8%AD%E9%97%B4%E4%BB%B6MQ/10.AMQP.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/21.%E4%B8%AD%E9%97%B4%E4%BB%B6MQ/10.AMQP.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">AMQP</source>
      <description>AMQP（Advanced Message Queue）：高级消息队列协议。 它是应用层协议的一个开放标准，为面向消息的中间件设计，基于此协议的客户端与消息中间件可传递消息，并不受产品、开发语言等条件的限制。</description>
      <category>集成配置</category>
      <category>中间件MQ</category>
      <pubDate>Thu, 08 Sep 2022 20:08:00 GMT</pubDate>
      <content:encoded><![CDATA[<blockquote>
<p>AMQP（Advanced Message Queue）：高级消息队列协议。</p>
<p>它是应用层协议的一个开放标准，为面向消息的中间件设计，基于此协议的客户端与消息中间件可传递消息，并不受产品、开发语言等条件的限制。</p>
</blockquote>
<!-- more -->

<h2> RabbitMQ</h2>
<p>RabbitMQ 是一个由Erlang语言开发的AMQP的开源实现。（PS:前几天有篇文章介绍了阿里P10的淘宝褚霸，就是erlang大神）。支持多种客户端。用于在分布式系统中存储转发消息，在易用性、扩展性、高可用性等方面表现不俗。具体特点如下：</p>
<h3> 简介</h3>
<ol>
<li>可靠性
<blockquote>
<p>RabbitMQ 使用一些机制来保证可靠性，如持久化，传输确认、发布确认。</p>
</blockquote>
</li>
<li>灵活的路由
<blockquote>
<p>在消息进入队列之前，通过Exchange来路由消息。对于典型的路由功能，RabbitMQ 提供了内置的Exchange来实现。针对更复杂的路由功能。可以将多个Exchange 绑定在一起，也通过插件机制实现自己的 Exchange。</p>
</blockquote>
</li>
<li>消息集群
<blockquote>
<p>多个RabbitMQ 服务器可以组成一个集群，形成一个逻辑Broker.</p>
</blockquote>
</li>
<li>高可用
<blockquote>
<p>队列可以在集群中的机器上进行镜像，使得在部分节点出问题的情况下队列任然可用。</p>
</blockquote>
</li>
<li>多种协议
<blockquote>
<p>RabbitMQ支持多种消息队列协议。比如STOMP、MQTT等等</p>
</blockquote>
</li>
<li>多语言客户端
<blockquote>
<p>RabbitMQ支持多种语言，比如java/Ruby等</p>
</blockquote>
</li>
<li>管理界面
<blockquote>
<p>RabbitMQ提供了一个易用的用户界面。使得用户可有监控和管理Broker的许多方面</p>
</blockquote>
</li>
<li>跟踪机制
<blockquote>
<p>如果消息异常，RabbitMQ 提供了消息跟踪机制，使用者可以找出</p>
</blockquote>
</li>
<li>插件机制
<blockquote>
<p>RabbitMQ提供了许多插件，从多方面进行扩展，也可以编写自己的插件</p>
</blockquote>
</li>
</ol>
<h3> 概念模型</h3>
<ol>
<li>Message
<blockquote>
<p>消息，消息是不具名的，它由消息头和消息体组成，消息体是不透明的。而消息头则由一系列的可选属性组成。包括routing-key(路由键)、priority(相对于其他消息的优先权)、delivery-mode(指出该消息可能需要持久性存储)等</p>
</blockquote>
</li>
<li>Publisher
<blockquote>
<p>消息的生产者，也是一个向交换器发布消息的客户端应用程序</p>
</blockquote>
</li>
<li>Exchange
<blockquote>
<p>交换器，用来接收生产者发送的消息并将这些消息路由给服务器中的队列。</p>
</blockquote>
</li>
<li>Binding
<blockquote>
<p>绑定，用于消息队列和交换器之间的关联。一个绑定就是基于路由键将交换器和消息队列连接起来的路由规则。所以可以将交换器理解成一个由绑定构成的路由表。</p>
</blockquote>
</li>
<li>Queue
<blockquote>
<p>消息队列，用来保存消息直到发送给消费者。它是消息的容器，也是消息的终点。一个消息可投入一个或多个队列。消息一直在队列里面。等待消息消费者连接到这个队列将其取走。</p>
</blockquote>
</li>
<li>Connection
<blockquote>
<p>网络连接</p>
</blockquote>
</li>
<li>Channel
<blockquote>
<p>信道，多路复用连接中的一条独立的双向数据流通道。</p>
</blockquote>
</li>
<li>Consumer
<blockquote>
<p>消息的消费者，表示一个从消息队列中取得消息的客户端应用程序</p>
</blockquote>
</li>
<li>Virtual Host
<blockquote>
<p>虚拟主机、表示一批交换器、消息队列和相关对象。虚拟主机是共享相同的身份认证和加密环境的独立服务器域。每个vhost 本质上就是一个mini版的RabbitMQ服务器。拥有自己的队列、交换器、绑定、和权限机制。vhost是AMQP概念的基础。必须在连接时指定，RabbitMQ默认的Vhost是/.</p>
</blockquote>
</li>
<li>Broker
<blockquote>
<p>表示消息队列服务器实体。</p>
<p>Exchange 有四种类型：Direct、Topic、Headers 和 Fanout 。</p>
<ul>
<li>Direct：该类型的行为是“先匹配，再投送”，即在绑定时设定一个 routing_key，消息的routing_key 匹配时，才会被交换器投送到绑定的队列中去。</li>
<li>Topic：按规则转发消息（最灵活）。</li>
<li>Headers：设置 header attribute 参数类型的交换机。</li>
<li>Fanout：转发消息到所有绑定队列。</li>
<li>headers 交换器和 direct 交换器完全一致，但性能差很多，目前几乎用不到了,这里不再详细介绍</li>
</ul>
</blockquote>
</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>nginx的安装</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/31.Nginx/01.nginx%E7%9A%84%E5%AE%89%E8%A3%85.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/31.Nginx/01.nginx%E7%9A%84%E5%AE%89%E8%A3%85.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">nginx的安装</source>
      <description>Nginx (engine x) 是一个轻量级的、高性能的、基于 Http 的、反向代理服务器，静态 web 服务器。 Nginx 的官网： http://nginx.org nginx 中文文档：https://www.nginx.cn/doc/index.html</description>
      <category>集成配置</category>
      <category>Nginx</category>
      <pubDate>Mon, 20 Feb 2023 16:07:59 GMT</pubDate>
      <content:encoded><![CDATA[<p>Nginx (engine x) 是一个轻量级的、高性能的、基于 Http 的、反向代理服务器，静态 web 服务器。</p>
<ul>
<li>Nginx 的官网： <a href="http://nginx.org" target="_blank" rel="noopener noreferrer">http://nginx.org</a></li>
<li>nginx 中文文档：<a href="https://www.nginx.cn/doc/index.html" target="_blank" rel="noopener noreferrer">https://www.nginx.cn/doc/index.html</a></li>
</ul>
<!-- more -->

<h2> nginx 源码安装（推荐）</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> yum 安装</h2>
<ul>
<li>官网地址：<a href="http://nginx.org/en/linux_packages.html" target="_blank" rel="noopener noreferrer">http://nginx.org/en/linux_packages.html</a></li>
<li>易白教程：<a href="https://www.yiibai.com/nginx/nginx-install-linux-packages.html" target="_blank" rel="noopener noreferrer">https://www.yiibai.com/nginx/nginx-install-linux-packages.html</a></li>
</ul>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 离线安装</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 离线安装</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> nginx 命令</h2>
<details class="hint-container details"><summary>nginx 命令</summary>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> nginx 开机自启</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 脚本部署</h2>
<h3> 脚本内容</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 执行脚本</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>nginx核心配置</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/31.Nginx/02.nginx%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/31.Nginx/02.nginx%E6%A0%B8%E5%BF%83%E9%85%8D%E7%BD%AE.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">nginx核心配置</source>
      <description>代理服务器： Nginx 的特点：高并发 / 低消耗 / 热部署 / 高可用 / 高扩展 正向代理：隐藏 / 翻墙 / 提速 / 缓存 / 授权 反向代理：保护隐藏 / 分布式路由 / 负载均衡 / 动静分离 / 数据缓存</description>
      <category>集成配置</category>
      <category>Nginx</category>
      <pubDate>Mon, 20 Feb 2023 16:07:59 GMT</pubDate>
      <content:encoded><![CDATA[<p>代理服务器：</p>
<ul>
<li>Nginx 的特点：高并发 / 低消耗 / 热部署 / 高可用 / 高扩展</li>
<li>正向代理：隐藏 / 翻墙 / 提速 / 缓存 / 授权</li>
<li>反向代理：保护隐藏 / 分布式路由 / 负载均衡 / 动静分离 / 数据缓存</li>
</ul>
<!-- more -->

<h2> 快速获取 NGINX 的配置</h2>
<blockquote>
<p><a href="https://www.digitalocean.com/community/tools/nginx?global.app.lang=zhCN" target="_blank" rel="noopener noreferrer">配置高性能、安全、稳定的 NGINX 服务器的最简单方法。</a></p>
</blockquote>
<h2> 请求定位</h2>
<p>优先级由低到高依次是：普通匹配 &lt; 长路径匹配 &lt; 正则匹配 &lt; 短路匹配 &lt; 精确匹配</p>
<ul>
<li>普通匹配<br></li>
</ul>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul>
<li>长路径匹配<br></li>
</ul>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul>
<li>正则匹配<br></li>
</ul>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>短路匹配<br></li>
</ul>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>精确匹配<br></li>
</ul>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 全局模块</h2>
<ul>
<li><strong>worker_processes</strong> 1<br>
可选参数：auto，数值<br><br>
Nginx 的工作进程数量，其数值一般设置为 CPU 内核数量，或内核数量的整数倍。<br><br>
不过需要注意，该值不仅仅取决于 CPU 内核数量，还与硬盘数量及负载均衡模式相关。在不确定时可以指定其值为 auto。<br></li>
<li><strong>worker_cpu_affinity</strong><br><br>
worker 进程与具体的内核进行绑定。不过，若指定 worker_processes 的值为 auto，则无法设置 worker_cpu_affinity。<br><br>
该值设置是通过二进制进行的。每个内核使用一个二进制位表示，0 代表内核关闭，1 代表内核开启。也就是说，有几个内核，就需要使用几个二进制位。<br></li>
</ul>
<table>
<thead>
<tr>
<th>内核数量</th>
<th>worker_processes</th>
<th>worker_cpu_affinity</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>2</td>
<td>2</td>
<td>01 10</td>
<td>每个进程各使用一个内核</td>
</tr>
<tr>
<td>2</td>
<td>4</td>
<td>01 10 01 10</td>
<td>每个进程交替使用各自的内核</td>
</tr>
<tr>
<td>4</td>
<td>4</td>
<td>0001 0010 0100 1000</td>
<td>每个进程使用各自的一个内核</td>
</tr>
<tr>
<td>4</td>
<td>2</td>
<td>0101 1010</td>
<td>每个进程使用两个内核。应用于 CPU 进行大量的运算</td>
</tr>
</tbody>
</table>
<ul>
<li><strong>worker_rlimit_nofile</strong> <br><br>
其默认值与当前 Linux 系统可以打开的最大文件描述符数量相同</li>
</ul>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> events 模块</h2>
<ul>
<li><strong>worker_connections</strong> 1024<br><br>
设置每一个 worker 进程可以并发处理的最大连接数。该值不能超过 worker_rlimit_nofile 的值。</li>
<li>accept_mutex on<br>
<ul>
<li>on：默认值，表示当一个新连接到达时，那些没有处于工作状态的 worker 将以串行方式来处理；</li>
<li>off：表示当一个新连接到达时，所有的 worker 都会被唤醒，不过只有一个 worker 能获取新连接，其它的 worker 会重新进入阻塞状态，这就是“惊群”现象。</li>
</ul>
</li>
<li><strong>accept_mutex_delay</strong> 500ms<br><br>
设置队首 worker 会尝试获取互斥锁的时间间隔。默认值为 500 毫秒。</li>
<li><strong>multi_accept</strong> on<br>
<ul>
<li>off：系统会逐个拿出新连接按照负载均衡策略，将其分配给当前处理连接个数最少的 worker。</li>
<li>on：系统会实时的统计出各个 worker 当前正在处理的连接个数，然后会按照“缺编”最多的 worker 的“缺编”数量，一次性将这么多的新连接分配给该 worker。</li>
</ul>
</li>
<li>use epoll<br><br>
设置 worker 与客户端连接的处理方式。Nginx 会自动选择适合当前系统的最高效的方式。<br><br>
当然，也可以使用 use 指令明确指定所要使用的连接处理方式。<details class="hint-container details"><summary>user 的取值有以下几种</summary>
</details>
</li>
</ul>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>:::</p>
<h2> http 模块</h2>
<ul>
<li>sendfile on<br><br>
设置为 on 则开启 Linux 系统的零拷贝机制，否则不启用零拷贝。<br><br>
当然，开启后是否起作用，要看所使用的系统版本。CentOS6 及其以上版本支持 sendfile 零拷贝。</li>
<li>tcp_nopush on<br>
<ul>
<li>on：以单独的数据包形式发送 Nginx 的响应头信息，而真正的响应体数据会再以数据包的形式发送，这个数据包中就不再包含响应头信息了。</li>
<li>off：默认值，响应头信息包含在每一个响应体数据包中。</li>
</ul>
</li>
<li>tcp_nodelay on<br>
<ul>
<li>on：不设置数据发送缓存，即不推迟发送，适合于传输小数据，无需缓存。</li>
<li>off：开启发送缓存。若传输的数据是图片等大数据量文件，则建议设置为 off。</li>
</ul>
</li>
<li>keepalive_timeout 60<br><br>
设置客户端与 Nginx 间所建立的长连接的生命超时时间，时间到达，则连接将自动关闭。单位秒。</li>
<li>keepalive_requests 10000<br><br>
设置一个长连接最多可以发送的请求数。该值需要在真实环境下测试。</li>
<li>client_body_timeout 10<br><br>
设置客户端获取 Nginx 响应的超时时限，即一个请求从客户端发出到接收到 Nginx 的响应的最长时间间隔。若超时，则认为本次请求失败。</li>
</ul>
<h2> nginx 缓存配置</h2>
<p>Nginx 具有很强大的缓存功能，可以对请求的 response 进行缓存，起到类似 CDN 的作用，甚至有比 CDN 更强大的功能。同时，Nginx 缓存还可以用来“数据托底”，即当后台 web 服务器挂掉的时候，Nginx 可以直接将缓存中的托底数据返回给用户。此功能就是 Nginx 实现“服务降级”的体现。<br>
Nginx 缓存功能的配置由两部分构成：全局定义与局部定义。</p>
<ul>
<li>
<p>http{}模块的缓存全局定义<br></p>
<ul>
<li>
<p>proxy_cache_path<br><br>
用于指定 Nginx 缓存的存放路径及相关配置。<br></p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p>proxy_temp_path<br><br>
指定 Nginx 缓存的临时存放目录。若 proxy_cache_path 中的 use_temp_path 设置为了 off，则该属性可以不指定。</p>
</li>
</ul>
</li>
<li>
<p>location{}模块的缓存局部定义<br></p>
<ul>
<li>proxy_cache mycache<br><br>
指定用于存放缓存 key 内存区域名称。其值为 http{}模块中 proxy_cache_path 中的 keys_zone 的值。</li>
<li>proxy_cache_key request_uri$arg_age<br><br>
指定 Nginx 生成的缓存的 key 的组成。</li>
<li>proxy_cache_bypass $arg_age<br><br>
指定是否越过缓存。</li>
<li>proxy_cache_methods GET HEAD<br><br>
指定客户端请求的哪些提交方法将被缓存，默认为 GET 与 HEAD，但不缓存 POST。</li>
<li>proxy_no_cache $aaa $bbb $ccc<br><br>
指定对本次请求是否不做缓存。只要有一个不为 0，就不对该请求结果缓存。</li>
<li>proxy_cache_purge $ddd $eee $fff<br><br>
指定是否清除缓存 key。</li>
<li>proxy_cache_lock on<br><br>
指定是否采用互斥方式回源。</li>
<li>proxy_cache_lock_timeout 5s<br><br>
指定再次生成回源互斥锁的时限。</li>
<li>proxy_cache_valid 5s<br><br>
对指定的 HTTP 状态码的响应数据进行缓存，并指定缓存时间。默认指定的状态码为 200，301，302。</li>
<li>proxy_cache_use_stale http_404 http_500<br><br>
设置启用托底缓存的条件。而一旦这里指定了相应的状态码，则前面 proxy_cache_calid 中指定的相应状态码所生成的缓存就变为了“托底缓存”。</li>
<li>expires 3m<br><br>
为请求的静态资源开启浏览器端的缓存。</li>
</ul>
</li>
</ul>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 缓存清理</h3>
<blockquote>
<p>当缓存过多时，如果不及时清理会导致磁盘空间被“吃光”，因此我们需要一套完善的缓存清理机制去删除缓存，在之前的 proxy_cache_path 参数中有 purger 相关的选项，开启后可以帮我们自动清理缓存，但遗憾的是：<strong>purger 系列参数只有商业版的 NginxPlus 才能使用，因此需要付费才可使用。</strong></p>
<p>不过天无绝人之路，我们可以通过强大的第三方模块 ngx_cache_purge 来替代，先来安装一下该插件：</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>第三方缓存清除模块 ngx_cache_purge 就安装完成了，接下来稍微修改一下 nginx.conf 配置，再添加一条 location 规则：</p>
</blockquote>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>然后再重启 Nginx，接下来即可通过<a href="http:127.0.0.1:80//xxx/purge/xx">http:127.0.0.1:80//xxx/purge/xx</a>的方式清除缓存。</p>
</blockquote>
<h2> Nginx 变量</h2>
<ul>
<li>自定义变量</li>
</ul>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>内置变量</li>
</ul>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 反向代理</h2>
<ul>
<li>client_max_body_size 100k;<br><br>
Nginx 允许客户端请求的单文件最大大小，单位字节。</li>
<li>client_body_buffer_size 80k;<br><br>
Nginx 为客户端请求设置的缓存大小。</li>
<li>proxy_buffering on<br><br>
开启从后端被代理服务器的响应内容缓冲区。默认值 on。</li>
<li>proxy_buffers 4 8k;<br><br>
该指令用于设置缓冲区的数量与大小。从被代理的后端服务器取得的响应内容，会缓<br>
存到这里。</li>
<li>proxy_busy_buffers_size 16k;<br><br>
高负荷下缓存大小，其默认值为一般为单个 proxy_buffers 的 2 倍。</li>
<li>proxy_connect_timeout 60s;<br><br>
Nginx 跟后端服务器连接超时时间。默认 60 秒。</li>
<li>proxy_read_timeout 60s;<br><br>
Nginx 发出请求后等待后端服务器响应的最长时限。默认 60 秒。</li>
</ul>
<h2> 负载均衡</h2>
<ul>
<li>轮询<br><br>
默认的负载均衡策略，其是按照各个主机的权重比例依次进行请求分配的。</li>
</ul>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="highlight-lines"><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>ip_hash<br><br>
指定负载均衡器按照基于客户端 IP 的分配方式</li>
</ul>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="highlight-lines"><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>least_conn<br><br>
把请求转发给连接数最少的服务器</li>
</ul>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="highlight-lines"><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>fair（第三方） <br><br>
按后端服务器的响应时间来分配请求，响应时间短的优先分配。</li>
</ul>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="highlight-lines"><br><div class="highlight-line">&nbsp;</div><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>url_hash（第三方） <br><br>
按访问 url 的 hash 结果来分配请求，使每个 url 定向到同一个后端服务器，后端服务器为缓存时比较有效。</li>
</ul>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="highlight-lines"><br><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 虚拟主机配置</h2>
<details class="hint-container details"><summary>upstreams.conf</summary>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<details class="hint-container details"><summary>vhosts.conf</summary>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line">&nbsp;</div><div class="highlight-line">&nbsp;</div><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>
<details class="hint-container details"><summary>Nginx 性能调优</summary>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> 跨域问题</h2>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Nginx实战配置</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/31.Nginx/10.Nginx%E5%AE%9E%E6%88%98%E9%85%8D%E7%BD%AE.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/31.Nginx/10.Nginx%E5%AE%9E%E6%88%98%E9%85%8D%E7%BD%AE.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">Nginx实战配置</source>
      <description>官方配置：http://nginx.org/en/docs/http/ngx_http_upstream_module.html#upstream</description>
      <category>集成配置</category>
      <category>Nginx</category>
      <pubDate>Mon, 20 Feb 2023 16:07:59 GMT</pubDate>
      <content:encoded><![CDATA[<p>官方配置：<a href="http://nginx.org/en/docs/http/ngx_http_upstream_module.html#upstream" target="_blank" rel="noopener noreferrer">http://nginx.org/en/docs/http/ngx_http_upstream_module.html#upstream</a></p>
<!-- more -->

<h2> 配置文件</h2>
<details class="hint-container details"><summary>demo.conf</summary>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> nginx 命令</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 每天定时切割 Nginx 日志的脚本</h2>
<h4> 编写脚本</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 设置 crontab，每天凌晨 00:00 切割 nginx 访问日志</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> Nginx 加入 systemctl 进行管理服务</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Nginx参数配置</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/31.Nginx/11.Nginx%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/31.Nginx/11.Nginx%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">Nginx参数配置</source>
      <description>[[toc]] 主模块 事件模块 http 部分 部分参数详细说明 server_name 1. 首先选择所有字符串完全匹配的 server_name，如 blog.13sai.com 。 2. 其次选择通配符在前面的 server_name，如 \*.13sai.com。 3. 再次选择通配符在后面的 server_name，如www.13sai.*...</description>
      <category>集成配置</category>
      <category>Nginx</category>
      <pubDate>Mon, 20 Feb 2023 16:07:59 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

<h2> 主模块</h2>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 事件模块</h2>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> http 部分</h2>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 部分参数详细说明</h2>
<h3> server_name</h3>
<ol>
<li>首先选择所有字符串完全匹配的 server_name，如 <a href="http://blog.13sai.com" target="_blank" rel="noopener noreferrer">blog.13sai.com</a> 。</li>
<li>其次选择通配符在前面的 server_name，如 *.13sai.com。</li>
<li>再次选择通配符在后面的 server_name，如www.13sai.* 。</li>
<li>最后选择使用正则表达式才匹配的 server_name，如 ~^.sai.com$<br>
如果都不匹配</li>
<li>优先选择 listen 配置项后有 default 或 default_server 的</li>
</ol>
<h3> location 表达式类型</h3>
<ol>
<li>~ 表示执行一个正则匹配，区分大小写;</li>
<li>~* 表示执行一个正则匹配，不区分大小写;</li>
<li>^~ 表示普通字符匹配。使用前缀匹配。如果匹配成功，则不再匹配其他 location;</li>
<li>= 进行普通字符精确匹配。也就是完全匹配;</li>
<li>@ 它定义一个命名的 location，使用在内部定向时，例如 error_page, try_files</li>
</ol>
<h3> 优先级</h3>
<ol>
<li>等号类型 (=) 的优先级最高。一旦匹配成功，则不再查找其他匹配项</li>
<li>前缀普通匹配 (^~) 优先级次之。不支持正则表达式。使用前缀匹配，如果有多个 location 匹配的话，则使用表达式最长的那个</li>
<li>正则表达式类型 (~ ~*) 的优先级次之。一旦匹配成功，则不再查找其他匹配项</li>
<li>常规字符串匹配，如果有多个 location 匹配的话，则使用表达式最长的那个</li>
</ol>
<h3> return</h3>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> rewrite</h3>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> if 指令</h3>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> last &amp; break</h3>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> permanent &amp; redirect</h3>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 应用</h2>
<h3> 估算并发</h3>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 限制每个 IP 的并发连接数</h3>
<blockquote>
<p>demo: 定义一个叫 “two” 的记录区，总容量为 10M（超过大小将请求失败，以变量 $binary_remote_addr 作为会话的判断基准（即一个地址一个会话）。 限制 /download/ 目录下，一个会话只能进行一个连接。 简单点，就是限制 /download/ 目录下，一个 IP 只能发起一个连接，多过一个，一律 503。</p>
</blockquote>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 限流</h3>
<blockquote>
<p>demo: 定义一个叫 “one” 的记录区，占用空间大小为 10m（超过大小将请求失败），平均处理的请求频率不能超过每秒一次，也可以设置分钟速率</p>
</blockquote>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 白名单</h3>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 防盗链</h3>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> auth_request 模块实现 nginx 端鉴权控制</h2>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 大文件传输配置</h2>
<table>
<thead>
<tr>
<th style="text-align:left">配置项</th>
<th style="text-align:left">释义</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>client_max_body_size</code></td>
<td style="text-align:left">设置请求体允许的最大体积</td>
</tr>
<tr>
<td style="text-align:left"><code>client_header_timeout</code></td>
<td style="text-align:left">等待客户端发送一个请求头的超时时间</td>
</tr>
<tr>
<td style="text-align:left"><code>client_body_timeout</code></td>
<td style="text-align:left">设置读取请求体的超时时间</td>
</tr>
<tr>
<td style="text-align:left"><code>proxy_read_timeout</code></td>
<td style="text-align:left">设置请求被后端服务器读取时，<code>Nginx</code>等待的最长时间</td>
</tr>
<tr>
<td style="text-align:left"><code>proxy_send_timeout</code></td>
<td style="text-align:left">设置后端向<code>Nginx</code>返回响应时的超时时间</td>
</tr>
</tbody>
</table>
<h2> 配置SLL证书</h2>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Nginx模块配置</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/31.Nginx/12.Nginx%E6%A8%A1%E5%9D%97%E9%85%8D%E7%BD%AE.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/31.Nginx/12.Nginx%E6%A8%A1%E5%9D%97%E9%85%8D%E7%BD%AE.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">Nginx模块配置</source>
      <description>[[toc]] 基础模块 HTTP Access（白名单） 此模块提供了一个简易的基于主机的访问控制. Auth Basic 该模块可以使你使用用户名和密码基于 HTTP 基本认证方法来保护你的站点或其部分内容。 AutoIndex 此模块用于自动生成目录列表. DAV 可以为 Http webDAV 增加 PUT, DELETE, MKCOL, CO...</description>
      <category>集成配置</category>
      <category>Nginx</category>
      <pubDate>Mon, 20 Feb 2023 16:07:59 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

<h2> 基础模块</h2>
<h3> HTTP Access（白名单）</h3>
<blockquote>
<p>此模块提供了一个简易的基于主机的访问控制.</p>
</blockquote>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> Auth Basic</h3>
<blockquote>
<p>该模块可以使你使用用户名和密码基于 HTTP 基本认证方法来保护你的站点或其部分内容。</p>
</blockquote>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> AutoIndex</h3>
<blockquote>
<p>此模块用于自动生成目录列表.</p>
</blockquote>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> DAV</h3>
<blockquote>
<p>可以为 Http webDAV 增加 PUT, DELETE, MKCOL, COPY 和 MOVE 等方法。</p>
<p>需要在编译时指定参数 <code>./configure --with-http_dav_module</code></p>
</blockquote>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 其他模块</h2>
<h3> Http 跳转到 Https</h3>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 资源缓存设置</h3>
<blockquote>
<p><a href="https://nginx.org/en/docs/http/ngx_http_proxy_module.html" target="_blank" rel="noopener noreferrer">https://nginx.org/en/docs/http/ngx_http_proxy_module.html</a></p>
</blockquote>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 调优案例</h2>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> gzip_proxied选项</h3>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>nginx高可用</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/31.Nginx/15.nginx%E9%AB%98%E5%8F%AF%E7%94%A8.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/31.Nginx/15.nginx%E9%AB%98%E5%8F%AF%E7%94%A8.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">nginx高可用</source>
      <description>[[toc]] 安装 nginx 安装 keepalived 官网地址： 在线安装 离线安装 配置 keepalived 检测脚本 主配置文件 离线编译配置文件位置：vi /usr/local/keepalived/etc/keepalived/keepalived.conf yum 安装配置文件位置：vi /etc/keepalived/keepal...</description>
      <category>集成配置</category>
      <category>Nginx</category>
      <pubDate>Mon, 20 Feb 2023 16:07:59 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

<h2> 安装 nginx</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 安装 keepalived</h2>
<blockquote>
<p>官网地址：<a href="https://www.keepalived.org/download.html" target="_blank" rel="noopener noreferrer">https://www.keepalived.org/download.html</a></p>
</blockquote>
<h3> 在线安装</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 离线安装</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 配置 keepalived</h2>
<h2> 检测脚本</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 主配置文件</h3>
<blockquote>
<p>离线编译配置文件位置：vi /usr/local/keepalived/etc/keepalived/keepalived.conf</p>
<p>yum 安装配置文件位置：vi /etc/keepalived/keepalived.conf</p>
</blockquote>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 备机配置</h3>
<blockquote>
<p>离线编译配置文件位置：vi /usr/local/keepalived/etc/keepalived/keepalived.conf</p>
<p>yum 安装配置文件位置：vi /etc/keepalived/keepalived.conf</p>
</blockquote>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 性能优化</h2>
<h3> 打开长连接配置</h3>
<blockquote>
<p>通常 Nginx 作为代理服务，负责分发客户端的请求，那么建议开启 HTTP 长连接，用户减少握手的次数，降低服务器损耗，具体如下：</p>
</blockquote>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 开启零拷贝技术</h3>
<blockquote>
<p>零拷贝这个概念，在大多数性能较为不错的中间件中都有出现，例如 Kafka、Netty 等，而 Nginx 中也可以配置数据零拷贝技术，如下：</p>
</blockquote>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>零拷贝读取机制与传统资源读取机制的区别：</p>
<ul>
<li>传统方式：「硬件--&gt;内核--&gt;用户空间--&gt;程序空间--&gt;程序内核空间--&gt;网络套接字」</li>
<li>零拷贝方式：「硬件--&gt;内核--&gt;程序内核空间--&gt;网络套接字」</li>
</ul>
<h3> 开启无延迟或多包共发机制</h3>
<blockquote>
<p>在 Nginx 中有两个较为关键的性能参数，即 tcp_nodelay、tcp_nopush，开启方式如下：</p>
</blockquote>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 调整 Worker 工作进程</h3>
<blockquote>
<p>Nginx 启动后默认只会开启一个 Worker 工作进程处理客户端请求，而我们可以根据机器的 CPU 核数开启对应数量的工作进程，以此来提升整体的并发量支持，如下：</p>
</blockquote>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 开启 CPU 亲和机制</h3>
<p>对于并发编程较为熟悉的伙伴都知道，因为进程/线程数往往都会远超出系统 CPU 的核心数，因为操作系统执行的原理本质上是采用时间片切换机制，也就是一个 CPU 核心会在多个进程之间不断频繁切换，造成很大的性能损耗。</p>
<p>而 CPU 亲和机制则是指将每个 Nginx 的工作进程，绑定在固定的 CPU 核心上，从而减小 CPU 切换带来的时间开销和资源损耗，开启方式如下：</p>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 开启 epoll 模型及调整并发连接数</h3>
<p>在最开始就提到过：Nginx、Redis 都是基于多路复用模型去实现的程序，但最初版的多路复用模型 select/poll 最大只能监听 1024 个连接，而 epoll 则属于 select/poll 接口的增强版，因此采用该模型能够大程度上提升单个 Worker 的性能，如下：</p>
<div class="language-conf line-numbers-mode" data-ext="conf"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Keepalived脑裂的解决和预防</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/31.Nginx/16.Keepalived%E8%84%91%E8%A3%82%E7%9A%84%E8%A7%A3%E5%86%B3%E5%92%8C%E9%A2%84%E9%98%B2.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/31.Nginx/16.Keepalived%E8%84%91%E8%A3%82%E7%9A%84%E8%A7%A3%E5%86%B3%E5%92%8C%E9%A2%84%E9%98%B2.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">Keepalived脑裂的解决和预防</source>
      <description>Keepalived脑裂的解决和预防 #!/bin/bash export PATH=$PATH:/usr/sbin ## 脑裂检查及控制：第三方仲裁机制，使用ping网关ip方式 ## 循环次数 CHECK_TIME=3 ## 虚拟ip VIP=$1 ## 网关ip(根据实际环境修改) GATEWAY=192.168.1.8 ## 本机网卡 eth=enp2s0 ## 服务器和网关通信状态 0=失败，1=成功 keepalived_communication_status=1 ## 是否获取vip状态 0=失败，1=成功 get_vip_status=1 ## keepalived服务状态 0=未运行，1=运行中 keepalived_service_status=1 ## 服务状态运行中字符串 active_status_str=&amp;apos;active (running)&amp;apos; echo &amp;quot;开始执行脚本 check_gateway.sh $VIP；时间:&amp;quot; date ## 查看是否获取vip状态 function check_get_vip_status() { ## 通过ip add命令查看ip信息，搜索$VIP，统计行数，是否等于1 if [ $(ip add | grep &amp;quot;$VIP&amp;quot; | wc -l) -eq 1 ]; then get_vip_status=1 else get_vip_status=0 fi return $get_vip_status } ## 检查通信状态 function check_keepalived_status() { ## 检测$VIP 能否ping通$GATEWAY：使用$eth网络设备（-I $eth），发送数据包5（-c 5），源地址$VIP询问目的地[vip] $GATEWAY [网关地址 公用参考ip]（-s $VIP $GATEWAY） 日志不保存 &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 /sbin/arping -I $eth -c 5 -s $VIP $GATEWAY &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 ## 判断上一步执行结果 等于0成功 if [ $? = 0 ]; then keepalived_communication_status=1 else keepalived_communication_status=0 fi return $keepalived_communication_status } ## 检查keepalived服务状态 function check_keepalived_service_status() { ## 通过systemctl status keepalived.service命令查看keepalived服务状态，搜索$active_status_str，统计行数，是否等于1 if [ $(systemctl status keepalived.service | grep &amp;quot;$active_status_str&amp;quot; | wc -l) -eq 1 ]; then keepalived_service_status=1 else keepalived_service_status=0 fi return $keepalived_service_status } ## 循环执行 ## 判断$CHECK_TIME 不等于 0 while [ $CHECK_TIME -ne 0 ]; do ## 执行check_get_vip_status获取get_vip_status check_get_vip_status ## 未获取vip if [ $get_vip_status = 0 ]; then ## 修改CHECK_TIME值 结束循环 CHECK_TIME=0 ## 检查服务状态 执行check_keepalived_service_status获取keepalived_service_status if [ $keepalived_service_status = 0 ]; then echo &amp;quot;执行脚本 check_gateway.sh $VIP；启动keepalived服务&amp;quot; systemctl start keepalived.service fi echo &amp;quot;执行脚本 check_gateway.sh $VIP；执行结果：未获取vip，无需处理，脚本执行结束，时间:&amp;quot; date ## 正常运行程序并退出程序 exit 0 fi ## $CHECK_TIME = $CHECK_TIME-1 let &amp;quot;CHECK_TIME -= 1&amp;quot; ## 执行check_keepalived_status获取keepalived_communication_status check_keepalived_status ## 判断 $keepalived_communication_status = 1 通信成功 if [ $keepalived_communication_status = 1 ]; then ## 修改CHECK_TIME值 结束循环 CHECK_TIME=0 ## 检查服务状态 执行check_keepalived_service_status获取keepalived_service_status check_keepalived_service_status if [ $keepalived_service_status = 0 ]; then echo &amp;quot;执行脚本 check_gateway.sh $VIP；启动keepalived服务&amp;quot; systemctl start keepalived.service fi echo &amp;quot;执行脚本 check_gateway.sh $VIP；GATEWAY=$GATEWAY，执行结果：通信正常，无需处理，脚本执行结束，时间:&amp;quot; date ## 正常运行程序并退出程序 exit 0 fi ## 通信失败&amp;amp;&amp;amp;连续3次 if [ $keepalived_communication_status -eq 0 ] &amp;amp;&amp;amp; [ $CHECK_TIME -eq 0 ]; then ## 关闭keepalived echo &amp;quot;执行脚本 check_gateway.sh $VIP；关闭keepalived服务&amp;quot; systemctl stop keepalived.service echo &amp;quot;执行脚本 check_gateway.sh $VIP；GATEWAY=$GATEWAY，执行结果：通信失败&amp;amp;&amp;amp;连续3次 关闭keepalived，脚本执行结束，时间:&amp;quot; date ## 非正常运行程序并退出程序 exit 1 fi sleep 3 done</description>
      <category>集成配置</category>
      <category>Nginx</category>
      <pubDate>Tue, 16 May 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> Keepalived脑裂的解决和预防</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>openrest的安装</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/31.Nginx/20.openrest%E7%9A%84%E5%AE%89%E8%A3%85.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/31.Nginx/20.openrest%E7%9A%84%E5%AE%89%E8%A3%85.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">openrest的安装</source>
      <description>OpenResty® 是一个基于 Nginx 与 Lua 的高性能 Web 平台，其内部集成了大量精良的 Lua 库、第三方模块以及大多数的依赖项。 用于方便地搭建能够处理超高并发、扩展性极高的动态 Web 应用、Web 服务和动态网关。 openresty 官网地址：http://openresty.org/cn/download.html Lua 官网链接：http://www.lua.org LuaJIT 官网链接：http://luajit.org</description>
      <category>集成配置</category>
      <category>Nginx</category>
      <pubDate>Mon, 20 Feb 2023 16:07:59 GMT</pubDate>
      <content:encoded><![CDATA[<blockquote>
<p>OpenResty® 是一个基于 Nginx 与 Lua 的高性能 Web 平台，其内部集成了大量精良的 Lua 库、第三方模块以及大多数的依赖项。</p>
<p>用于方便地搭建能够处理超高并发、扩展性极高的动态 Web 应用、Web 服务和动态网关。</p>
</blockquote>
<ul>
<li>openresty 官网地址：<a href="http://openresty.org/cn/download.html" target="_blank" rel="noopener noreferrer">http://openresty.org/cn/download.html</a></li>
<li>Lua 官网链接：<a href="http://www.lua.org" target="_blank" rel="noopener noreferrer">http://www.lua.org</a></li>
<li>LuaJIT 官网链接：<a href="http://luajit.org" target="_blank" rel="noopener noreferrer">http://luajit.org</a></li>
</ul>
<!-- more -->

<h2> 在线安装</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 源码安装</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 修改配置文件</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 配置系统服务</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>::: cardList</p>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>:::</p>
]]></content:encoded>
    </item>
    <item>
      <title>Nginx监控</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/31.Nginx/30.Nginx%E7%9B%91%E6%8E%A7.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/31.Nginx/30.Nginx%E7%9B%91%E6%8E%A7.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">Nginx监控</source>
      <description>[[toc]] 时序数据库 InfluxDB 官网地址：influxdata (https://www.influxdata.com/); 官方文档：influxdb 文档 (https://docs.influxdata.com/influxdb/v1.6/); 参考：InfluxDB 系列教程 (https://www.linuxdaxue.com...</description>
      <category>集成配置</category>
      <category>Nginx</category>
      <pubDate>Mon, 20 Feb 2023 16:07:59 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

<h2> 时序数据库 InfluxDB</h2>
<ul>
<li>官网地址：<a href="https://www.influxdata.com/" target="_blank" rel="noopener noreferrer">influxdata</a></li>
<li>官方文档：<a href="https://docs.influxdata.com/influxdb/v1.6/" target="_blank" rel="noopener noreferrer">influxdb 文档</a></li>
<li>参考：<a href="https://www.linuxdaxue.com/series/influxdb-series/" target="_blank" rel="noopener noreferrer">InfluxDB 系列教程</a></li>
</ul>
<h2> Telegraf 安装配置 Nginx 监控</h2>
<blockquote>
<p><code>Telegraf</code>是一个用 Go 编写的代理程序，是收集和报告指标和数据的代理。</p>
<p>可收集系统和服务的统计数据，并写入到<code>InfluxDB</code>数据库。</p>
<p><code>Telegraf</code>具有内存占用小的特点，通过插件系统开发人员可轻松添加支持其他服务的扩展。</p>
<p>官方介绍：<a href="https://www.influxdata.com/time-series-platform/telegraf/" target="_blank" rel="noopener noreferrer">https://www.influxdata.com/time-series-platform/telegraf/</a></p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> Grafana 集成 Nginx 监控</h2>
]]></content:encoded>
    </item>
    <item>
      <title>自动封禁IP</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/31.Nginx/31.%E8%87%AA%E5%8A%A8%E5%B0%81%E7%A6%81IP.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/31.Nginx/31.%E8%87%AA%E5%8A%A8%E5%B0%81%E7%A6%81IP.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">自动封禁IP</source>
      <description>nginx统计 ## AWK统计access.log，记录每分钟访问超过60次的ip awk &amp;apos;{print $1}&amp;apos; access.log | sort | uniq -cd | awk &amp;apos;{if($1&amp;gt;60)print $0}&amp;apos; # 1. awk &amp;apos;{print $1}&amp;apos; access.log 取出access.log的第一列即为ip。 # 2. sort | uniq -cd 去重和排序 # 3. awk &amp;apos;{if($1&amp;gt;60)print $0}&amp;apos; 判断重复的数量是否超过60个，超过60个就展示出来</description>
      <category>集成配置</category>
      <category>Nginx</category>
      <pubDate>Fri, 24 Feb 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2> nginx统计</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 脚本编写</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> crontab定时</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Elasticsearch安装</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/40.Elasticsearch/10.Elasticsearch%E5%AE%89%E8%A3%85.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/40.Elasticsearch/10.Elasticsearch%E5%AE%89%E8%A3%85.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">Elasticsearch安装</source>
      <description>[[toc]] 网址 官网：http://elasticsearch.co/ (http://elasticsearch.co/); 中文社区：https://elasticsearch.cn/ (https://elasticsearch.cn/); 官网下载地址：https://www.elastic.co/cn/downloads/elastic...</description>
      <category>集成配置</category>
      <category>Elasticsearch</category>
      <pubDate>Mon, 20 Feb 2023 16:07:59 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

<h2> 网址</h2>
<ul>
<li>官网：<a href="http://elasticsearch.co/" target="_blank" rel="noopener noreferrer">http://elasticsearch.co/</a></li>
<li>中文社区：<a href="https://elasticsearch.cn/" target="_blank" rel="noopener noreferrer">https://elasticsearch.cn/</a></li>
<li>官网下载地址：<a href="https://www.elastic.co/cn/downloads/elasticsearch" target="_blank" rel="noopener noreferrer">https://www.elastic.co/cn/downloads/elasticsearch</a></li>
<li>中文社区下载地址：<a href="https://elasticsearch.cn/download/" target="_blank" rel="noopener noreferrer">https://elasticsearch.cn/download/</a></li>
<li>华为云下载地址：<a href="https://repo.huaweicloud.com/elasticsearch/" target="_blank" rel="noopener noreferrer">https://repo.huaweicloud.com/elasticsearch/</a></li>
<li>百度网盘下载地址：<a href="https://pan.baidu.com/s/1Tdsgm9608fyt_j7gMsLZhg" target="_blank" rel="noopener noreferrer">https://pan.baidu.com/s/1Tdsgm9608fyt_j7gMsLZhg 提取码：e2nd</a></li>
</ul>
<h2> Elasticsearch安装</h2>
<ol>
<li>安装命令</li>
</ol>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2">
<li>修改配置</li>
</ol>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> ES安装问题集</h2>
<details class="hint-container details"><summary>java.lang.RuntimeException: can not run elasticsearch as root</summary>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></details>
<details class="hint-container details"><summary>Exception in thread "main" java.nio.file.AccessDeniedException: /home/dev/elasticsearch-7.10.2/config/jvm.options.d</summary>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></details>
<details class="hint-container details"><summary>max file descriptors [4096] for elasticsearch process is too low, increase to at least [65535]</summary>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<details class="hint-container details"><summary>max number of threads [3720] for user [dev] is too low, increase to at least [4096]</summary>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<details class="hint-container details"><summary>max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</summary>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<details class="hint-container details"><summary>the default discovery settings are unsuitable for production use; at least one of [discovery.seed_hosts, discovery.seed_providers, cluster.initial_master_nodes] must be configured</summary>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> docker容器安装</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> Elasticsearch开机自启</h2>
<details class="hint-container details"><summary>方法一：systemctl设置开机自启（推荐）</summary>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<details class="hint-container details"><summary>方法二：chkconfig设置开机自启</summary>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> head插件安装</h2>
<ol>
<li>用途</li>
<li>安装</li>
</ol>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3">
<li>linux设置开机自启</li>
</ol>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> LogStash安装</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>1. 配置语法，日志内容写入elasticsearch，同时输出</summary>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<details class="hint-container details"><summary>2. file日志收集</summary>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<details class="hint-container details"><summary>3. Java日志收集</summary>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<details class="hint-container details"><summary>4. 项目日志</summary>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>
<h2> kibana安装</h2>
<blockquote>
<p>注意elasticsearch版本应与kibana版本一致，否则报错</p>
<p>kibana也是需要非root用户启动</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 中文分词器</h2>
<blockquote>
<p>下载地址：<a href="https://github.com/medcl/elasticsearch-analysis-ik/releases" target="_blank" rel="noopener noreferrer">https://github.com/medcl/elasticsearch-analysis-ik/releases</a></p>
<p>ik有两种分词模式：ik_max_word（细粒度的拆分）、ik_smart（粗粒度的拆分）。</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 拼音分词器</h2>
<blockquote>
<p><a href="https://github.com/medcl/elasticsearch-analysis-pinyin/releases/tag/v6.6.2" target="_blank" rel="noopener noreferrer">https://github.com/medcl/elasticsearch-analysis-pinyin/releases/tag/v6.6.2</a></p>
</blockquote>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 集群部署</h2>
<blockquote>
<p>准备三台Elaticsearch服务器 ==》 修改配置如下 ==》 启动每个节点 ==》 查看集群情况</p>
<p>初始化集群部署时，保证各节点的数据为空</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>ES基于Restful的API</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/40.Elasticsearch/20.ES%E5%9F%BA%E4%BA%8ERestful%E7%9A%84API.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/40.Elasticsearch/20.ES%E5%9F%BA%E4%BA%8ERestful%E7%9A%84API.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">ES基于Restful的API</source>
      <description>官网地址：https://www.elastic.co/guide/cn/elasticsearch/guide/current/foreword_id.html</description>
      <category>集成配置</category>
      <category>Elasticsearch</category>
      <pubDate>Mon, 20 Feb 2023 16:07:59 GMT</pubDate>
      <content:encoded><![CDATA[<blockquote>
<p>官网地址：<a href="https://www.elastic.co/guide/cn/elasticsearch/guide/current/foreword_id.html" target="_blank" rel="noopener noreferrer">https://www.elastic.co/guide/cn/elasticsearch/guide/current/foreword_id.html</a></p>
</blockquote>
<!-- more -->

<h2> ------ 服务状态 ------</h2>
<h2> 查询状态</h2>
<blockquote>
<p>GET /_cat/health</p>
</blockquote>
<h2> 查看分词器分词结果</h2>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> ------ 文档管理 ------</h2>
<h2> 添加索引</h2>
<blockquote>
<p><strong><code>settings</code></strong></p>
<p><code>分片数</code>（number_of_shards）：早期版本默认是5片，ES7中默认是1片；</p>
<p><code>副本数</code>（number_of_replicas）：默认是1，每个分片默认都有一个副本。</p>
<p><strong><code>mappings</code></strong>：可不指定，会自动创建</p>
<p>PUT <a href="http://192.168.68.129:9200/%7B%E7%B4%A2%E5%BC%95%E5%90%8D%E7%A7%B0%7D" target="_blank" rel="noopener noreferrer">http://192.168.68.129:9200/{索引名称}</a></p>
</blockquote>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 添加数据</h2>
<blockquote>
<p>{ PUT | POST } <a href="http://192.168.68.129:9200/%7B%E7%B4%A2%E5%BC%95%7D/_doc/%7B_id%7D" target="_blank" rel="noopener noreferrer">http://192.168.68.129:9200/{索引}/_doc/{_id}</a></p>
</blockquote>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 批量添加数据</h2>
<blockquote>
<p>{ PUT | POST } <a href="http://192.168.68.129:9200/%7B%E7%B4%A2%E5%BC%95%7D/_bulk" target="_blank" rel="noopener noreferrer">http://192.168.68.129:9200/{索引}/_bulk</a></p>
</blockquote>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 根据_id取文档</h2>
<blockquote>
<p>GET <a href="http://192.168.68.129:9200/%7B%E7%B4%A2%E5%BC%95%7D/_doc/%7B_id%7D" target="_blank" rel="noopener noreferrer">http://192.168.68.129:9200/{索引}/_doc/{_id}</a></p>
</blockquote>
<h2> 删除索引</h2>
<blockquote>
<p>DELETE <a href="http://192.168.68.129:9200/%7B%E7%B4%A2%E5%BC%95%E5%90%8D%E7%A7%B0%7D" target="_blank" rel="noopener noreferrer">http://192.168.68.129:9200/{索引名称}</a></p>
</blockquote>
<h2> ------ 数据查询 ------</h2>
<p><a href="https://www.elastic.co/guide/cn/elasticsearch/guide/current/search-in-depth.html" target="_blank" rel="noopener noreferrer">官方示例：深入查找</a></p>
<h2> 精确查询（term）</h2>
<blockquote>
<p>字段匹配，考虑字段的分词器，standard针对中文，一个字为一个词。</p>
</blockquote>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 组合查询（bool）</h2>
<blockquote>
<p><code>must</code>：必须满足，相当于是AND</p>
<p><code>should</code>：应该满足，相当于OR</p>
<p><code>must_not</code>：必须不能满足，相当于NOT</p>
<p><code>filter</code>：过滤查询结果，不进行打分</p>
</blockquote>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 匹配查询（query_string）</h2>
<blockquote>
<p>在查询之前，可以对查询条件进行分词处理，然后基于分词之后的结果再次查询。</p>
<p><code>query_string</code>和<code>match</code>效果一样。</p>
</blockquote>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 多字段查询（multi_match）</h2>
<blockquote>
<p>指定在多个字段中查询</p>
</blockquote>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 高亮显示（highlight）</h2>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 分页查询</h2>
<blockquote>
<p><code>from</code>：起始的行号，从0开始，<code>size</code>：每页显示的记录数量</p>
</blockquote>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Elaticsearch客户端</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/40.Elasticsearch/30.Elaticsearch%E5%AE%A2%E6%88%B7%E7%AB%AF.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/40.Elasticsearch/30.Elaticsearch%E5%AE%A2%E6%88%B7%E7%AB%AF.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">Elaticsearch客户端</source>
      <description>[[toc]] java客户端 https://www.elastic.co/cn/elasticsearch/ (https://www.elastic.co/cn/elasticsearch/) Spring Data ElasticSearch 官方网站：http://projects.spring.io/spring-data-elastics...</description>
      <category>集成配置</category>
      <category>Elasticsearch</category>
      <pubDate>Mon, 20 Feb 2023 16:07:59 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

<h2> java客户端</h2>
<blockquote>
<p><a href="https://www.elastic.co/cn/elasticsearch/" target="_blank" rel="noopener noreferrer">https://www.elastic.co/cn/elasticsearch/</a></p>
</blockquote>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> Spring Data ElasticSearch</h2>
<blockquote>
<p>官方网站：<a href="http://projects.spring.io/spring-data-elasticsearch" target="_blank" rel="noopener noreferrer">http://projects.spring.io/spring-data-elasticsearch</a></p>
<p>的ElasticSearch的版本是7.10.2，以推荐使用Springboot的版本应该是2.3以上版本，并且在配置文件中声明使用的ES版本</p>
</blockquote>
<ol>
<li>依赖jar包</li>
</ol>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2">
<li>配置文件</li>
</ol>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3">
<li>索引创建</li>
</ol>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>ELK应用</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/40.Elasticsearch/50.ELK%E5%BA%94%E7%94%A8.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/40.Elasticsearch/50.ELK%E5%BA%94%E7%94%A8.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">ELK应用</source>
      <description>ELK，是Elasticsearch（搜索引擎）, Logstash（日志收集），Kibana（可视化的Web界面）的组合。</description>
      <category>集成配置</category>
      <category>Elasticsearch</category>
      <pubDate>Mon, 20 Feb 2023 16:07:59 GMT</pubDate>
      <content:encoded><![CDATA[<p>ELK，是Elasticsearch（搜索引擎）, Logstash（日志收集），Kibana（可视化的Web界面）的组合。<br>
</p>
<!-- more -->

<h2> ELK的简介</h2>
<blockquote>
<p>ELK是三个开源软件的缩写，分别表示：<code>elasticsearch</code>、<code>logstash</code>、<code>kibana</code></p>
</blockquote>
<ul>
<li><code>Elasticsearch</code>是个开源分布式搜索引擎，提供搜集、分析、存储数据三大功能。它的特点有：分布式，零配置，自动发现，索引自动分片，索引副本机制，restful风格接口，多数据源，自动搜索负载等</li>
<li><code>Logstash</code> 主要是用来日志的搜集、分析、过滤日志的工具，支持大量的数据获取方式。一般工作方式为c/s架构，client端安装在需要收集日志的主机上，server端负责将收到的各节点日志进行过滤、修改等操作在一并发往<code>elasticsearch</code>上去。</li>
<li><code>Kibana</code>可以为 <code>Logstash</code> 和 <code>ElasticSearch</code> 通过报表、图形化数据进行可视化展示 Web 界面，可以帮助汇总、分析和搜索重要数据日志</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>文件存储方案</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/50.%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/09.%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8%E6%96%B9%E6%A1%88.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/50.%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/09.%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8%E6%96%B9%E6%A1%88.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">文件存储方案</source>
      <description>主要考虑 分布式系统文件存储。 文件分块的能力。断电续传、妙传等。 可扩展、 平滑迁移（可以不影响业务的情况下可以平滑迁移） 隔离性，产品应用的隔离性。 容错和灾备的能力。 FastDFS FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。 分布式，没有单点依赖，用C编写，性能较好</description>
      <category>集成配置</category>
      <category>文件系统</category>
      <pubDate>Tue, 28 Feb 2023 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[
<h2> 主要考虑</h2>
<ol>
<li>分布式系统文件存储。</li>
<li>文件分块的能力。断电续传、妙传等。</li>
<li>可扩展、</li>
<li>平滑迁移（可以不影响业务的情况下可以平滑迁移）</li>
<li>隔离性，产品应用的隔离性。</li>
<li>容错和灾备的能力。</li>
</ol>
<h2> FastDFS</h2>
<blockquote>
<p>FastDFS是一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。</p>
<p>分布式，没有单点依赖，用C编写，性能较好</p>
</blockquote>
<p>优点：<br>
支持在线扩容机制，增强系统的可扩展性<br>
实现了软RAID，增强系统的并发处理能力及数据容错恢复能力<br>
支持主从文件，支持自定义扩展名<br>
主备Tracker服务，增强系统的可用性</p>
<p>缺点：<br>
不支持POSIX通用接口访问，通用性较低<br>
对跨公网的文件同步，存在较大延迟，需要应用做相应的容错策略<br>
同步机制不支持文件正确性校验，降低了系统的可用性<br>
通过API下载，存在单点的性能瓶颈</p>
<h2> CephFS</h2>
<blockquote>
<p>开发语言：C++<br>
适合单集群的大中小文件<br>
不支持断点续传，不适合大文件存储。</p>
</blockquote>
<p>优点：<br>
支持对象存储（OSD）集群，通过CRUSH算法，完成文件动态定位，处理效率更高<br>
符合posix语义，支持通过FUSE方式挂载，降低客户端的开发成本，通用性高<br>
支持分布式的MDS/MON，无单点故障<br>
强大的容错处理和自愈能力<br>
支持在线扩容和冗余备份，增强系统的可靠性</p>
<p>缺点：<br>
部署和运维较复杂，集群管理工具较少</p>
]]></content:encoded>
    </item>
    <item>
      <title>MinIO初始</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/50.%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/10.MinIO%E5%88%9D%E5%A7%8B.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/50.%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/10.MinIO%E5%88%9D%E5%A7%8B.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">MinIO初始</source>
      <description>[[toc]] 简介 MinIO 官网-中文 (http://docs.minio.org.cn/docs/); MinIO 官网-github (https://github.com/minio/minio); 安装部署 - 单机 bitnami 安装部署 - 分布式 安装部署 - 多租户</description>
      <category>集成配置</category>
      <category>文件系统</category>
      <pubDate>Mon, 20 Feb 2023 16:07:59 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

<h2> 简介</h2>
<ul>
<li><a href="http://docs.minio.org.cn/docs/" target="_blank" rel="noopener noreferrer">MinIO 官网-中文</a></li>
<li><a href="https://github.com/minio/minio" target="_blank" rel="noopener noreferrer">MinIO 官网-github</a></li>
</ul>
<h2> 安装部署 - 单机</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> bitnami</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 安装部署 - 分布式</h2>
<h2> 安装部署 - 多租户</h2>
]]></content:encoded>
    </item>
    <item>
      <title>Ceph初始</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/50.%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/20.Ceph%E5%88%9D%E5%A7%8B.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/50.%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/20.Ceph%E5%88%9D%E5%A7%8B.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">Ceph初始</source>
      <description>[[toc]] 简介 ceph 官网-英文 (https://docs.ceph.com/en/latest/); Red Hat Ceph Storage 架构指南 (https://access.redhat.com/documentation/zh-cn/redhatcephstorage/5/html/architectureguide/ind...</description>
      <category>集成配置</category>
      <category>文件系统</category>
      <pubDate>Mon, 20 Feb 2023 16:07:59 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

<h2> 简介</h2>
<ul>
<li><a href="https://docs.ceph.com/en/latest/" target="_blank" rel="noopener noreferrer">ceph 官网-英文</a></li>
<li><a href="https://access.redhat.com/documentation/zh-cn/red_hat_ceph_storage/5/html/architecture_guide/index" target="_blank" rel="noopener noreferrer">Red Hat Ceph Storage 架构指南</a></li>
</ul>
<blockquote>
<p>Ceph 是一个统一的分布式存储系统，设计初衷是提供较好的性能、可靠性和可扩展性。</p>
<p>特点：高性能、高可用性、高可扩展性、特性丰富</p>
</blockquote>
<h2> Ceph 三种存储类型</h2>
<table>
<thead>
<tr>
<th>存储类型</th>
<th>特征</th>
<th>应用场景</th>
<th>典型设备</th>
</tr>
</thead>
<tbody>
<tr>
<td>块存储（RBD）</td>
<td>存储速度较快<br>不支持共享存储 [<strong>ReadWriteOnce</strong>]</td>
<td>虚拟机硬盘</td>
<td>硬盘<br>Raid</td>
</tr>
<tr>
<td>文件存储（CephFS）</td>
<td>存储速度慢（需经操作系统处理再转为块存储）<br>支持共享存储 [<strong>ReadWriteMany</strong>]</td>
<td>文件共享</td>
<td>FTP<br>NFS</td>
</tr>
<tr>
<td>对象存储（Object）</td>
<td>具备块存储的读写性能和文件存储的共享特性<br>操作系统不能直接访问，只能通过应用程序级别的 API 访问</td>
<td>图片存储<br>视频存储</td>
<td>OSS</td>
</tr>
</tbody>
</table>
<h2> 常用命令</h2>
<h3> 集群命令</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> mon 命令</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> msd 命令</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> osd 命令</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> PG 组命令</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> pool 命令</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> rbd 命令</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Ceph安装-deploy</title>
      <link>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/50.%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/21.Ceph%E5%AE%89%E8%A3%85-deploy.html</link>
      <guid>https://haijunit.top/blog/62.%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE/50.%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/21.Ceph%E5%AE%89%E8%A3%85-deploy.html</guid>
      <source url="https://haijunit.top/blog/rss.xml">Ceph安装-deploy</source>
      <description>[[toc]] 节点规划 主机名 public-ip cluster-ip 磁盘 角色 ------ ------------- ------------- ----------------------------------- --------------------------------------------------- ceph1 192....</description>
      <category>集成配置</category>
      <category>文件系统</category>
      <pubDate>Mon, 20 Feb 2023 16:07:59 GMT</pubDate>
      <content:encoded><![CDATA[<!-- more -->

<h2> 节点规划</h2>
<table>
<thead>
<tr>
<th>主机名</th>
<th>public-ip</th>
<th>cluster-ip</th>
<th>磁盘</th>
<th>角色</th>
</tr>
</thead>
<tbody>
<tr>
<td>ceph1</td>
<td>192.168.60.11</td>
<td>192.168.20.11</td>
<td>系统盘: sda   <br>osd盘: sdb、sdc</td>
<td>monitor,mgr,rgw,mds,osd<br>NTP Server,ceph-deploy</td>
</tr>
<tr>
<td>ceph2</td>
<td>192.168.60.12</td>
<td>192.168.20.12</td>
<td>系统盘: sda   <br>osd盘: sdb、sdc</td>
<td>monitor,mgr,rgw,mds,osd</td>
</tr>
<tr>
<td>ceph3</td>
<td>192.168.60.13</td>
<td>192.168.20.13</td>
<td>系统盘: sda   <br>osd盘: sdb、sdc</td>
<td>monitor,mgr,rgw,mds,osd</td>
</tr>
</tbody>
</table>
<h3> 节点角色</h3>
<ul>
<li>ceph-deploy：Ceph集群部署节点，负责集群整体部署，也可以复用cpeh集群中的节点作为部署节点。</li>
<li>NTP Server：时间同步源</li>
<li>monitor：Ceph监视管理节点，承担Ceph集群重要的管理任务，一般需要3或5个节点。</li>
<li>mgr： Ceph 集群管理节点（manager），为外界提供统一的入口。</li>
<li>rgw: Ceph对象网关，是一种服务，使客户端能够利用标准对象存储API来访问Ceph集群</li>
<li>mds：Ceph元数据服务器，MetaData Server，主要保存的文件系统服务的元数据，使用文件存储时才需要该组件</li>
<li>osd：Ceph存储节点Object Storage Daemon，实际负责数据存储的节点。</li>
</ul>
<h2> 系统配置</h2>
<h3> 网络设置</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> host配置</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 节点互信</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 系统参数设置</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 防火墙设置</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 时间同步</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> yum源设置</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 创建用户</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 安装Ceph</h2>
<h3> 配置ceph-deploy</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 监控节点（monitor）</h3>
<blockquote>
<p>官方介绍：为了获得高可用性，您应该运行带有至少三个监视器的生产Ceph集群。</p>
<p>维护着展示集群状态的各种图表， 包括监视器图、 OSD 图、归置组（ PG ）图、和 CRUSH 图。Ceph 保存着发生在Monitors、OSD 和 PG上的每一次状态变更的历史信息（称为 epoch ）。监视器还负责管理守护进程和客户端之间的身份验证。</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 管理服务（mgr）</h3>
<blockquote>
<p>负责跟踪运行时指标和Ceph 集群的当前状态，包括存储利用率，当前性能指标和系统负载。Ceph Manager守护进程还托管基于python的插件来管理和公开Ceph集群信息，包括基于Web的Ceph Manager Dashboard和 REST API。</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 创建OSD</h3>
<blockquote>
<p>主要是存储数据，处理数据的复制、恢复、回填、再均衡，并通过检查其他OSD守护进程的心跳来向Ceph Monitors 提供一些监控信息。</p>
<p>冗余和高可用性通常至少需要3个Ceph OSD。</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 创建MDS</h3>
<blockquote>
<p>用于cephfs文件系统</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 服务验证</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 使用场景</h2>
<h3> CephFS文件系统</h3>
<blockquote>
<p>主要应用于网络共享存储。</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 对象存储</h3>
<blockquote>
<p>主要应用于图片，视频，镜像、日志等对象存储。</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 块存储</h3>
<blockquote>
<p>主要应用于k8s，openstack云计算等场景</p>
</blockquote>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
  </channel>
</rss>